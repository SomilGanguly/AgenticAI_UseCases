{
  "format_version": "1.2",
  "terraform_version": "1.10.1",
  "variables": {
    "appId": {
      "value": "20075"
    },
    "az_backup_enable": {
      "value": true
    },
    "cmk": {
      "value": null
    },
    "environment": {
      "value": "dev"
    },
    "hub": {
      "value": {
        "firewall_name": "firewallo",
        "hub_rg_name": "myResourceGroup",
        "subscription_id": "177c1f84-4b2a-414d-974e-5fbdf5d84250",
        "vnet_name": "vneto"
      }
    },
    "is_odaa_peering_enabled": {
      "value": false
    },
    "is_oracle_subscription": {
      "value": false
    },
    "location": {
      "value": "uksouth"
    },
    "odaa_peering": {
      "value": {}
    },
    "overwrite_route_subnets_list": {
      "value": []
    },
    "rbac_info_groupname": {
      "value": {
        "ADM-VF-Azure-UK-MSMigration-Admins": [
          "Reader",
          "Virtual Machine Contributor",
          "Storage Blob Data Contributor",
          "Key Vault Secrets User"
        ]
      }
    },
    "rbac_info_mi": {
      "value": {
        "id-azuuks-mcs-azmigrate-uk-level3": [
          "Contributor",
          "Storage Blob Data Contributor",
          "Key Vault Secrets Officer"
        ],
        "id-azuuks-mcs-terraform-uk-level3": [
          "Storage Blob Data Contributor",
          "Key Vault Secrets Officer"
        ]
      }
    },
    "rbac_info_principalid": {
      "value": {}
    },
    "rd_id": {
      "value": "130"
    },
    "role_assignments": {
      "value": {}
    },
    "storageaccount_ip_rules": {
      "value": [
        "185.69.146.0/24"
      ]
    },
    "subnet": {
      "value": [
        {
          "address": "10.147.133.192/27",
          "network_security_rules": {},
          "security_zone": "tp",
          "tier": "agw"
        },
        {
          "address": "10.147.133.224/29",
          "network_security_rules": {},
          "security_zone": "tp",
          "tier": "presentation"
        },
        {
          "address": "10.147.133.232/29",
          "network_security_rules": {},
          "security_zone": "ta",
          "tier": "app"
        },
        {
          "address": "10.147.133.240/29",
          "network_security_rules": {},
          "security_zone": "td",
          "tier": "db"
        }
      ]
    },
    "tenant_id": {
      "value": "68283f3b-8487-4c86-adb3-a5228f18b893"
    },
    "vnet_ip_range": {
      "value": [
        "10.147.133.192/26"
      ]
    },
    "wl_subscription_id": {
      "value": "177c1f84-4b2a-414d-974e-5fbdf5d84250"
    }
  },
  "configuration": {
    "provider_config": {
      "azurerm": {
        "name": "azurerm",
        "full_name": "registry.terraform.io/hashicorp/azurerm",
        "version_constraint": ">= 3.0.0",
        "expressions": {
          "features": [
            {}
          ],
          "storage_use_azuread": {
            "constant_value": true
          },
          "subscription_id": {
            "references": [
              "var.wl_subscription_id"
            ]
          }
        }
      },
      "azurerm.hubsubscription": {
        "name": "azurerm",
        "full_name": "registry.terraform.io/hashicorp/azurerm",
        "alias": "hubsubscription",
        "version_constraint": ">= 3.0.0",
        "expressions": {
          "features": [
            {}
          ],
          "subscription_id": {
            "references": [
              "var.hub.subscription_id",
              "var.hub"
            ]
          }
        }
      },
      "azurerm.odaa": {
        "name": "azurerm",
        "full_name": "registry.terraform.io/hashicorp/azurerm",
        "alias": "odaa",
        "version_constraint": ">= 3.0.0",
        "expressions": {
          "features": [
            {}
          ],
          "subscription_id": {
            "references": [
              "var.is_odaa_peering_enabled",
              "var.odaa_peering",
              "local.odaa_env_key",
              "var.wl_subscription_id"
            ]
          }
        }
      },
      "module.avm-res-network-networksecuritygroup:modtm": {
        "name": "modtm",
        "full_name": "registry.terraform.io/azure/modtm",
        "version_constraint": "~> 0.3",
        "module_address": "module.avm-res-network-networksecuritygroup"
      },
      "module.avm-res-network-networksecuritygroup:random": {
        "name": "random",
        "full_name": "registry.terraform.io/hashicorp/random",
        "version_constraint": "~> 3.5",
        "module_address": "module.avm-res-network-networksecuritygroup"
      },
      "module.avm-res-network-routetable:modtm": {
        "name": "modtm",
        "full_name": "registry.terraform.io/azure/modtm",
        "version_constraint": "~> 0.3",
        "module_address": "module.avm-res-network-routetable"
      },
      "module.avm-res-network-routetable:random": {
        "name": "random",
        "full_name": "registry.terraform.io/hashicorp/random",
        "version_constraint": ">= 3.5.0, < 4.0.0",
        "module_address": "module.avm-res-network-routetable"
      },
      "module.avm-res-network-subnet:azapi": {
        "name": "azapi",
        "full_name": "registry.terraform.io/azure/azapi",
        "version_constraint": ">= 1.13.0, < 3.0.0",
        "module_address": "module.avm-res-network-subnet"
      },
      "module.avm-res-storage-storageaccount:azapi": {
        "name": "azapi",
        "full_name": "registry.terraform.io/azure/azapi",
        "version_constraint": ">= 1.14.0, < 3.0.0",
        "module_address": "module.avm-res-storage-storageaccount"
      },
      "module.avm-res-storage-storageaccount:modtm": {
        "name": "modtm",
        "full_name": "registry.terraform.io/azure/modtm",
        "version_constraint": "~> 0.3",
        "module_address": "module.avm-res-storage-storageaccount"
      },
      "module.avm-res-storage-storageaccount:random": {
        "name": "random",
        "full_name": "registry.terraform.io/hashicorp/random",
        "version_constraint": ">= 3.5.0, < 4.0.0",
        "module_address": "module.avm-res-storage-storageaccount"
      },
      "module.keyvault:modtm": {
        "name": "modtm",
        "full_name": "registry.terraform.io/azure/modtm",
        "version_constraint": "~> 0.3",
        "module_address": "module.keyvault"
      },
      "module.keyvault:random": {
        "name": "random",
        "full_name": "registry.terraform.io/hashicorp/random",
        "version_constraint": "~> 3.5",
        "module_address": "module.keyvault"
      },
      "module.keyvault:time": {
        "name": "time",
        "full_name": "registry.terraform.io/hashicorp/time",
        "version_constraint": "~> 0.9",
        "module_address": "module.keyvault"
      },
      "module.lz_vending.module.roleassignment:azurerm": {
        "name": "azurerm",
        "full_name": "registry.terraform.io/hashicorp/azurerm",
        "version_constraint": ">= 3.7.0",
        "module_address": "module.lz_vending.module.roleassignment"
      },
      "module.lz_vending.module.roleassignment_umi:azurerm": {
        "name": "azurerm",
        "full_name": "registry.terraform.io/hashicorp/azurerm",
        "version_constraint": ">= 3.7.0",
        "module_address": "module.lz_vending.module.roleassignment_umi"
      },
      "module.lz_vending.module.subscription:azurerm": {
        "name": "azurerm",
        "full_name": "registry.terraform.io/hashicorp/azurerm",
        "version_constraint": ">= 3.7.0",
        "module_address": "module.lz_vending.module.subscription"
      },
      "module.lz_vending.module.subscription:terraform": {
        "name": "terraform",
        "full_name": "terraform.io/builtin/terraform",
        "module_address": "module.lz_vending.module.subscription"
      },
      "module.lz_vending.module.subscription:time": {
        "name": "time",
        "full_name": "registry.terraform.io/hashicorp/time",
        "version_constraint": ">= 0.9.1",
        "module_address": "module.lz_vending.module.subscription"
      },
      "module.lz_vending:azapi": {
        "name": "azapi",
        "full_name": "registry.terraform.io/azure/azapi",
        "version_constraint": "~> 1.4",
        "module_address": "module.lz_vending"
      }
    },
    "root_module": {
      "resources": [
        {
          "address": "azurerm_virtual_network_peering.local_to_odaa",
          "mode": "managed",
          "type": "azurerm_virtual_network_peering",
          "name": "local_to_odaa",
          "provider_config_key": "azurerm",
          "expressions": {
            "allow_forwarded_traffic": {
              "constant_value": true
            },
            "allow_gateway_transit": {
              "constant_value": false
            },
            "allow_virtual_network_access": {
              "constant_value": true
            },
            "name": {
              "references": [
                "local.vnet_name",
                "data.azurerm_virtual_network.odaa[0].name",
                "data.azurerm_virtual_network.odaa[0]",
                "data.azurerm_virtual_network.odaa"
              ]
            },
            "remote_virtual_network_id": {
              "references": [
                "data.azurerm_virtual_network.odaa[0].id",
                "data.azurerm_virtual_network.odaa[0]",
                "data.azurerm_virtual_network.odaa"
              ]
            },
            "resource_group_name": {
              "references": [
                "local.virtual_networks[\"vnet1\"].resource_group_name",
                "local.virtual_networks[\"vnet1\"]",
                "local.virtual_networks"
              ]
            },
            "use_remote_gateways": {
              "constant_value": false
            },
            "virtual_network_name": {
              "references": [
                "local.virtual_networks[\"vnet1\"].name",
                "local.virtual_networks[\"vnet1\"]",
                "local.virtual_networks"
              ]
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.is_odaa_peering_enabled"
            ]
          }
        },
        {
          "address": "azurerm_virtual_network_peering.odaa_to_local",
          "mode": "managed",
          "type": "azurerm_virtual_network_peering",
          "name": "odaa_to_local",
          "provider_config_key": "azurerm.odaa",
          "expressions": {
            "allow_forwarded_traffic": {
              "constant_value": true
            },
            "allow_gateway_transit": {
              "constant_value": false
            },
            "allow_virtual_network_access": {
              "constant_value": true
            },
            "name": {
              "references": [
                "data.azurerm_virtual_network.odaa[0].name",
                "data.azurerm_virtual_network.odaa[0]",
                "data.azurerm_virtual_network.odaa",
                "local.vnet_name"
              ]
            },
            "remote_virtual_network_id": {
              "references": [
                "module.lz_vending.virtual_network_resource_ids[\"vnet1\"]",
                "module.lz_vending.virtual_network_resource_ids",
                "module.lz_vending"
              ]
            },
            "resource_group_name": {
              "references": [
                "data.azurerm_virtual_network.odaa[0].resource_group_name",
                "data.azurerm_virtual_network.odaa[0]",
                "data.azurerm_virtual_network.odaa"
              ]
            },
            "use_remote_gateways": {
              "constant_value": false
            },
            "virtual_network_name": {
              "references": [
                "data.azurerm_virtual_network.odaa[0].name",
                "data.azurerm_virtual_network.odaa[0]",
                "data.azurerm_virtual_network.odaa"
              ]
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.is_odaa_peering_enabled"
            ]
          }
        },
        {
          "address": "data.azurerm_client_config.this",
          "mode": "data",
          "type": "azurerm_client_config",
          "name": "this",
          "provider_config_key": "azurerm",
          "schema_version": 0
        },
        {
          "address": "data.azurerm_firewall.hubfw",
          "mode": "data",
          "type": "azurerm_firewall",
          "name": "hubfw",
          "provider_config_key": "azurerm.hubsubscription",
          "expressions": {
            "name": {
              "references": [
                "var.hub.firewall_name",
                "var.hub"
              ]
            },
            "resource_group_name": {
              "references": [
                "var.hub.hub_rg_name",
                "var.hub"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "data.azurerm_subnet.hubsubnets",
          "mode": "data",
          "type": "azurerm_subnet",
          "name": "hubsubnets",
          "provider_config_key": "azurerm.hubsubscription",
          "expressions": {
            "name": {
              "references": [
                "each.value"
              ]
            },
            "resource_group_name": {
              "references": [
                "var.hub.hub_rg_name",
                "var.hub"
              ]
            },
            "virtual_network_name": {
              "references": [
                "var.hub.vnet_name",
                "var.hub"
              ]
            }
          },
          "schema_version": 0,
          "for_each_expression": {
            "references": [
              "local.hubsubnets_map"
            ]
          }
        },
        {
          "address": "data.azurerm_subscription.current",
          "mode": "data",
          "type": "azurerm_subscription",
          "name": "current",
          "provider_config_key": "azurerm",
          "expressions": {
            "subscription_id": {
              "references": [
                "var.wl_subscription_id"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "data.azurerm_virtual_network.hubvnet",
          "mode": "data",
          "type": "azurerm_virtual_network",
          "name": "hubvnet",
          "provider_config_key": "azurerm.hubsubscription",
          "expressions": {
            "name": {
              "references": [
                "var.hub.vnet_name",
                "var.hub"
              ]
            },
            "resource_group_name": {
              "references": [
                "var.hub.hub_rg_name",
                "var.hub"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "data.azurerm_virtual_network.odaa",
          "mode": "data",
          "type": "azurerm_virtual_network",
          "name": "odaa",
          "provider_config_key": "azurerm.odaa",
          "expressions": {
            "name": {
              "references": [
                "var.odaa_peering",
                "local.odaa_env_key"
              ]
            },
            "resource_group_name": {
              "references": [
                "var.odaa_peering",
                "local.odaa_env_key"
              ]
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.is_odaa_peering_enabled"
            ]
          }
        }
      ],
      "module_calls": {
        "avm-res-network-networksecuritygroup": {
          "source": "Azure/avm-res-network-networksecuritygroup/azurerm",
          "expressions": {
            "enable_telemetry": {
              "references": [
                "local.enable_telemetry"
              ]
            },
            "location": {
              "references": [
                "var.location"
              ]
            },
            "name": {
              "references": [
                "each.value.name",
                "each.value"
              ]
            },
            "resource_group_name": {
              "references": [
                "local.virtual_networks[\"vnet1\"].resource_group_name",
                "local.virtual_networks[\"vnet1\"]",
                "local.virtual_networks"
              ]
            },
            "security_rules": {
              "references": [
                "each.value.security_rules",
                "each.value"
              ]
            }
          },
          "for_each_expression": {
            "references": [
              "local.network_security_groups",
              "local.subnets"
            ]
          },
          "module": {
            "outputs": {
              "name": {
                "expression": {
                  "references": [
                    "azurerm_network_security_group.this.name",
                    "azurerm_network_security_group.this"
                  ]
                },
                "description": "The name of the Network Security Group resource"
              },
              "resource": {
                "expression": {
                  "references": [
                    "azurerm_network_security_group.this"
                  ]
                },
                "description": "The Network Security Group resource"
              },
              "resource_id": {
                "expression": {
                  "references": [
                    "azurerm_network_security_group.this.id",
                    "azurerm_network_security_group.this"
                  ]
                },
                "description": "The id of the Network Security Group resource"
              }
            },
            "resources": [
              {
                "address": "azurerm_management_lock.this",
                "mode": "managed",
                "type": "azurerm_management_lock",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "lock_level": {
                    "references": [
                      "var.lock.kind",
                      "var.lock"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.lock.name",
                      "var.lock",
                      "var.lock.kind",
                      "var.lock"
                    ]
                  },
                  "notes": {
                    "references": [
                      "var.lock.kind",
                      "var.lock"
                    ]
                  },
                  "scope": {
                    "references": [
                      "azurerm_network_security_group.this.id",
                      "azurerm_network_security_group.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.lock"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.this",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "each.value.event_hub_authorization_rule_resource_id",
                      "each.value"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "each.value.event_hub_name",
                      "each.value"
                    ]
                  },
                  "log_analytics_destination_type": {
                    "references": [
                      "each.value.log_analytics_destination_type",
                      "each.value"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "each.value.workspace_resource_id",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value",
                      "each.value.name",
                      "each.value",
                      "var.name"
                    ]
                  },
                  "partner_solution_id": {
                    "references": [
                      "each.value.marketplace_partner_resource_id",
                      "each.value"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "each.value.storage_account_resource_id",
                      "each.value"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_network_security_group.this.id",
                      "azurerm_network_security_group.this"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.diagnostic_settings"
                  ]
                }
              },
              {
                "address": "azurerm_network_security_group.this",
                "mode": "managed",
                "type": "azurerm_network_security_group",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_group_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "azurerm_network_security_rule.this",
                "mode": "managed",
                "type": "azurerm_network_security_rule",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "access": {
                    "references": [
                      "each.value.access",
                      "each.value"
                    ]
                  },
                  "description": {
                    "references": [
                      "each.value.description",
                      "each.value"
                    ]
                  },
                  "destination_address_prefix": {
                    "references": [
                      "each.value.destination_address_prefix",
                      "each.value"
                    ]
                  },
                  "destination_address_prefixes": {
                    "references": [
                      "each.value.destination_address_prefixes",
                      "each.value"
                    ]
                  },
                  "destination_application_security_group_ids": {
                    "references": [
                      "each.value.destination_application_security_group_ids",
                      "each.value"
                    ]
                  },
                  "destination_port_range": {
                    "references": [
                      "each.value.destination_port_range",
                      "each.value"
                    ]
                  },
                  "destination_port_ranges": {
                    "references": [
                      "each.value.destination_port_ranges",
                      "each.value"
                    ]
                  },
                  "direction": {
                    "references": [
                      "each.value.direction",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "network_security_group_name": {
                    "references": [
                      "azurerm_network_security_group.this.name",
                      "azurerm_network_security_group.this"
                    ]
                  },
                  "priority": {
                    "references": [
                      "each.value.priority",
                      "each.value"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "each.value.protocol",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_network_security_group.this.resource_group_name",
                      "azurerm_network_security_group.this"
                    ]
                  },
                  "source_address_prefix": {
                    "references": [
                      "each.value.source_address_prefix",
                      "each.value"
                    ]
                  },
                  "source_address_prefixes": {
                    "references": [
                      "each.value.source_address_prefixes",
                      "each.value"
                    ]
                  },
                  "source_application_security_group_ids": {
                    "references": [
                      "each.value.source_application_security_group_ids",
                      "each.value"
                    ]
                  },
                  "source_port_range": {
                    "references": [
                      "each.value.source_port_range",
                      "each.value"
                    ]
                  },
                  "source_port_ranges": {
                    "references": [
                      "each.value.source_port_ranges",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.security_rules"
                  ]
                },
                "depends_on": [
                  "azurerm_network_security_group.this"
                ]
              },
              {
                "address": "azurerm_role_assignment.this",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "condition": {
                    "references": [
                      "each.value.condition",
                      "each.value"
                    ]
                  },
                  "condition_version": {
                    "references": [
                      "each.value.condition_version",
                      "each.value"
                    ]
                  },
                  "delegated_managed_identity_resource_id": {
                    "references": [
                      "each.value.delegated_managed_identity_resource_id",
                      "each.value"
                    ]
                  },
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_id": {
                    "references": [
                      "each.value.role_definition_id_or_name",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_definition_id_or_name",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "references": [
                      "each.value.role_definition_id_or_name",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_definition_id_or_name",
                      "each.value"
                    ]
                  },
                  "scope": {
                    "references": [
                      "azurerm_network_security_group.this.id",
                      "azurerm_network_security_group.this"
                    ]
                  },
                  "skip_service_principal_aad_check": {
                    "references": [
                      "each.value.skip_service_principal_aad_check",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.role_assignments"
                  ]
                }
              },
              {
                "address": "modtm_telemetry.telemetry",
                "mode": "managed",
                "type": "modtm_telemetry",
                "name": "telemetry",
                "provider_config_key": "module.avm-res-network-networksecuritygroup:modtm",
                "expressions": {
                  "tags": {
                    "references": [
                      "data.azurerm_client_config.telemetry",
                      "data.azurerm_client_config.telemetry",
                      "data.modtm_module_source.telemetry",
                      "data.modtm_module_source.telemetry",
                      "random_uuid.telemetry"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_telemetry"
                  ]
                }
              },
              {
                "address": "random_uuid.telemetry",
                "mode": "managed",
                "type": "random_uuid",
                "name": "telemetry",
                "provider_config_key": "module.avm-res-network-networksecuritygroup:random",
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_telemetry"
                  ]
                }
              },
              {
                "address": "data.azurerm_client_config.telemetry",
                "mode": "data",
                "type": "azurerm_client_config",
                "name": "telemetry",
                "provider_config_key": "azurerm",
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_telemetry"
                  ]
                }
              },
              {
                "address": "data.modtm_module_source.telemetry",
                "mode": "data",
                "type": "modtm_module_source",
                "name": "telemetry",
                "provider_config_key": "module.avm-res-network-networksecuritygroup:modtm",
                "expressions": {
                  "module_path": {
                    "references": [
                      "path.module"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_telemetry"
                  ]
                }
              }
            ],
            "variables": {
              "diagnostic_settings": {
                "default": {},
                "description": "A map of diagnostic settings to create on the Key Vault. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\n- `name` - (Optional) The name of the diagnostic setting. One will be generated if not set, however this will not be unique if you want to create multiple diagnostic setting resources.\r\n- `log_categories` - (Optional) A set of log categories to send to the log analytics workspace. Defaults to `[]`.\r\n- `log_groups` - (Optional) A set of log groups to send to the log analytics workspace. Defaults to `[\"allLogs\"]`.\r\n- `metric_categories` - (Optional) A set of metric categories to send to the log analytics workspace. Defaults to `[\"AllMetrics\"]`.\r\n- `log_analytics_destination_type` - (Optional) The destination type for the diagnostic setting. Possible values are `Dedicated` and `AzureDiagnostics`. Defaults to `Dedicated`.\r\n- `workspace_resource_id` - (Optional) The resource ID of the log analytics workspace to send logs and metrics to.\r\n- `storage_account_resource_id` - (Optional) The resource ID of the storage account to send logs and metrics to.\r\n- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the event hub authorization rule to send logs and metrics to.\r\n- `event_hub_name` - (Optional) The name of the event hub. If none is specified, the default event hub will be selected.\r\n- `marketplace_partner_resource_id` - (Optional) The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic LogsLogs.\r\n"
              },
              "enable_telemetry": {
                "default": true,
                "description": "This variable controls whether or not telemetry is enabled for the module.\r\nFor more information see https://aka.ms/avm/telemetryinfo.\r\nIf it is set to false, then no telemetry will be collected.\r\n"
              },
              "location": {
                "description": "(Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created."
              },
              "lock": {
                "default": null,
                "description": "Controls the Resource Lock configuration for this resource. The following properties can be specified:\r\n\r\n- `kind` - (Required) The type of lock. Possible values are `\\\"CanNotDelete\\\"` and `\\\"ReadOnly\\\"`.\r\n- `name` - (Optional) The name of the lock. If not specified, a name will be generated based on the `kind` value. Changing this forces the creation of a new resource.\r\n"
              },
              "name": {
                "description": "(Required) Specifies the name of the network security group. Changing this forces a new resource to be created."
              },
              "resource_group_name": {
                "description": "(Required) The name of the resource group in which to create the network security group. Changing this forces a new resource to be created."
              },
              "role_assignments": {
                "default": {},
                "description": "A map of role assignments to create on this resource. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\n- `role_definition_id_or_name` - The ID or name of the role definition to assign to the principal.\r\n- `principal_id` - The ID of the principal to assign the role to.\r\n- `description` - The description of the role assignment.\r\n- `skip_service_principal_aad_check` - If set to true, skips the Azure Active Directory check for the service principal in the tenant. Defaults to false.\r\n- `condition` - The condition which will be used to scope the role assignment.\r\n- `condition_version` - The version of the condition syntax. Valid values are '2.0'.\r\n- `principal_type` - (Optional) The type of the `principal_id`. Possible values are `User`, `Group` and `ServicePrincipal`. It is necessary to explicitly set this attribute when creating role assignments if the principal creating the assignment is constrained by ABAC rules that filters on the PrincipalType attribute.\r\n\r\n> Note: only set `skip_service_principal_aad_check` to true if you are assigning a role to a service principal.\r\n"
              },
              "security_rules": {
                "default": {},
                "description": " - `access` - (Required) Specifies whether network traffic is allowed or denied. Possible values are `Allow` and `Deny`.\r\n - `description` - (Optional) A description for this rule. Restricted to 140 characters.\r\n - `destination_address_prefix` - (Optional) CIDR or destination IP range or * to match any IP. Tags such as `VirtualNetwork`, `AzureLoadBalancer` and `Internet` can also be used. Besides, it also supports all available Service Tags like \u2018Sql.WestEurope\u2018, \u2018Storage.EastUS\u2018, etc. You can list the available service tags with the CLI: ```shell az network list-service-tags --location westcentralus```. For further information please see [Azure CLI\r\n - `destination_address_prefixes` - (Optional) List of destination address prefixes. Tags may not be used. This is required if `destination_address_prefix` is not specified.\r\n - `destination_application_security_group_ids` - (Optional) A List of destination Application Security Group IDs\r\n - `destination_port_range` - (Optional) Destination Port or Range. Integer or range between `0` and `65535` or `*` to match any. This is required if `destination_port_ranges` is not specified.\r\n - `destination_port_ranges` - (Optional) List of destination ports or port ranges. This is required if `destination_port_range` is not specified.\r\n - `direction` - (Required) The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are `Inbound` and `Outbound`.\r\n - `name` - (Required) The name of the security rule. This needs to be unique across all Rules in the Network Security Group. Changing this forces a new resource to be created.\r\n - `priority` - (Required) Specifies the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.\r\n - `protocol` - (Required) Network protocol this rule applies to. Possible values include `Tcp`, `Udp`, `Icmp`, `Esp`, `Ah` or `*` (which matches all).\r\n - `source_address_prefix` - (Optional) CIDR or source IP range or * to match any IP. Tags such as `VirtualNetwork`, `AzureLoadBalancer` and `Internet` can also be used. This is required if `source_address_prefixes` is not specified.\r\n - `source_address_prefixes` - (Optional) List of source address prefixes. Tags may not be used. This is required if `source_address_prefix` is not specified.\r\n - `source_application_security_group_ids` - (Optional) A List of source Application Security Group IDs\r\n - `source_port_range` - (Optional) Source Port or Range. Integer or range between `0` and `65535` or `*` to match any. This is required if `source_port_ranges` is not specified.\r\n - `source_port_ranges` - (Optional) List of source ports or port ranges. This is required if `source_port_range` is not specified.\r\n\r\n ---\r\n `timeouts` block supports the following:\r\n - `create` - (Defaults to 30 minutes) Used when creating the Network Security Rule.\r\n - `delete` - (Defaults to 30 minutes) Used when deleting the Network Security Rule.\r\n - `read` - (Defaults to 5 minutes) Used when retrieving the Network Security Rule.\r\n - `update` - (Defaults to 30 minutes) Used when updating the Network Security Rule.\r\n"
              },
              "tags": {
                "default": null,
                "description": "(Optional) A mapping of tags to assign to the resource."
              },
              "timeouts": {
                "default": null,
                "description": "- `create` - (Defaults to 30 minutes) Used when creating the Network Security Group.\r\n- `delete` - (Defaults to 30 minutes) Used when deleting the Network Security Group.\r\n- `read` - (Defaults to 5 minutes) Used when retrieving the Network Security Group.\r\n- `update` - (Defaults to 30 minutes) Used when updating the Network Security Group.\r\n"
              }
            }
          },
          "version_constraint": "0.3.0",
          "depends_on": [
            "module.lz_vending"
          ]
        },
        "avm-res-network-routetable": {
          "source": "Azure/avm-res-network-routetable/azurerm",
          "expressions": {
            "enable_telemetry": {
              "references": [
                "local.enable_telemetry"
              ]
            },
            "location": {
              "references": [
                "var.location"
              ]
            },
            "name": {
              "references": [
                "each.value.name",
                "each.value"
              ]
            },
            "resource_group_name": {
              "references": [
                "local.virtual_networks[\"vnet1\"].resource_group_name",
                "local.virtual_networks[\"vnet1\"]",
                "local.virtual_networks"
              ]
            },
            "routes": {
              "references": [
                "each.value.routes",
                "each.value"
              ]
            }
          },
          "for_each_expression": {
            "references": [
              "local.route_tables"
            ]
          },
          "module": {
            "outputs": {
              "name": {
                "expression": {
                  "references": [
                    "azurerm_route_table.this.name",
                    "azurerm_route_table.this"
                  ]
                },
                "description": "The route table name"
              },
              "resource": {
                "expression": {
                  "references": [
                    "azurerm_route_table.this"
                  ]
                },
                "description": "This is the full output for the route table."
              },
              "resource_id": {
                "expression": {
                  "references": [
                    "azurerm_route_table.this.id",
                    "azurerm_route_table.this"
                  ]
                },
                "description": "The ID of the route table"
              },
              "routes": {
                "expression": {
                  "references": [
                    "var.routes",
                    "azurerm_route.this"
                  ]
                },
                "description": "This is the full output of the routes."
              }
            },
            "resources": [
              {
                "address": "azurerm_management_lock.this",
                "mode": "managed",
                "type": "azurerm_management_lock",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "lock_level": {
                    "references": [
                      "var.lock.kind",
                      "var.lock"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.lock.name",
                      "var.lock",
                      "var.lock.kind",
                      "var.lock"
                    ]
                  },
                  "notes": {
                    "references": [
                      "var.lock.kind",
                      "var.lock"
                    ]
                  },
                  "scope": {
                    "references": [
                      "azurerm_route_table.this.id",
                      "azurerm_route_table.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.lock"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.this",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "condition": {
                    "references": [
                      "each.value.condition",
                      "each.value"
                    ]
                  },
                  "condition_version": {
                    "references": [
                      "each.value.condition_version",
                      "each.value"
                    ]
                  },
                  "delegated_managed_identity_resource_id": {
                    "references": [
                      "each.value.delegated_managed_identity_resource_id",
                      "each.value"
                    ]
                  },
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_id": {
                    "references": [
                      "each.value.role_definition_id_or_name",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_definition_id_or_name",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "references": [
                      "each.value.role_definition_id_or_name",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_definition_id_or_name",
                      "each.value"
                    ]
                  },
                  "scope": {
                    "references": [
                      "azurerm_route_table.this.id",
                      "azurerm_route_table.this"
                    ]
                  },
                  "skip_service_principal_aad_check": {
                    "references": [
                      "each.value.skip_service_principal_aad_check",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.role_assignments"
                  ]
                }
              },
              {
                "address": "azurerm_route.this",
                "mode": "managed",
                "type": "azurerm_route",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "address_prefix": {
                    "references": [
                      "each.value.address_prefix",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "next_hop_in_ip_address": {
                    "references": [
                      "each.value.next_hop_in_ip_address",
                      "each.value"
                    ]
                  },
                  "next_hop_type": {
                    "references": [
                      "each.value.next_hop_type",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_group_name"
                    ]
                  },
                  "route_table_name": {
                    "references": [
                      "azurerm_route_table.this.name",
                      "azurerm_route_table.this"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.routes"
                  ]
                }
              },
              {
                "address": "azurerm_route_table.this",
                "mode": "managed",
                "type": "azurerm_route_table",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "disable_bgp_route_propagation": {
                    "references": [
                      "var.disable_bgp_route_propagation"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_group_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "azurerm_subnet_route_table_association.this",
                "mode": "managed",
                "type": "azurerm_subnet_route_table_association",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "azurerm_route_table.this.id",
                      "azurerm_route_table.this"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.subnet_resource_ids"
                  ]
                }
              },
              {
                "address": "modtm_telemetry.telemetry",
                "mode": "managed",
                "type": "modtm_telemetry",
                "name": "telemetry",
                "provider_config_key": "module.avm-res-network-routetable:modtm",
                "expressions": {
                  "tags": {
                    "references": [
                      "data.azurerm_client_config.telemetry",
                      "data.azurerm_client_config.telemetry",
                      "data.modtm_module_source.telemetry",
                      "data.modtm_module_source.telemetry",
                      "random_uuid.telemetry"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_telemetry"
                  ]
                }
              },
              {
                "address": "random_uuid.telemetry",
                "mode": "managed",
                "type": "random_uuid",
                "name": "telemetry",
                "provider_config_key": "module.avm-res-network-routetable:random",
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_telemetry"
                  ]
                }
              },
              {
                "address": "data.azurerm_client_config.telemetry",
                "mode": "data",
                "type": "azurerm_client_config",
                "name": "telemetry",
                "provider_config_key": "azurerm",
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_telemetry"
                  ]
                }
              },
              {
                "address": "data.modtm_module_source.telemetry",
                "mode": "data",
                "type": "modtm_module_source",
                "name": "telemetry",
                "provider_config_key": "module.avm-res-network-routetable:modtm",
                "expressions": {
                  "module_path": {
                    "references": [
                      "path.module"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_telemetry"
                  ]
                }
              }
            ],
            "variables": {
              "disable_bgp_route_propagation": {
                "default": true,
                "description": "(Optional) Boolean flag which controls propagation of routes learned by BGP on that route table. True means disable."
              },
              "enable_telemetry": {
                "default": true,
                "description": "    (Optional) This variable controls whether or not telemetry is enabled for the module.\r\n    For more information see <https://aka.ms/avm/telemetryinfo>.\r\n    If it is set to false, then no telemetry will be collected.\r\n"
              },
              "location": {
                "description": "    (Required) Specifies the supported Azure location for the resource to be deployed. \r\n    Changing this forces a new resource to be created.\r\n"
              },
              "lock": {
                "default": null,
                "description": "    (Optional) Controls the Resource Lock configuration for this resource. The following properties can be specified:\r\n\r\n    - `kind` - (Required) The type of lock. Possible values are `\\\"CanNotDelete\\\"` and `\\\"ReadOnly\\\"`.\r\n    - `name` - (Optional) The name of the lock. If not specified, a name will be generated based on the `kind` value. Changing this forces the creation of a new resource.\r\n"
              },
              "name": {
                "description": "(Required) Specifies the name of the Route Table. Changing this forces a new resource to be created."
              },
              "resource_group_name": {
                "description": "(Required) The name of the resource group in which to create the resource. Changing this forces a new resource to be created."
              },
              "role_assignments": {
                "default": {},
                "description": "    (Optional) A map of role assignments to create on this resource. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\n    - `role_definition_id_or_name` - The ID or name of the role definition to assign to the principal.\r\n    - `principal_id` - The ID of the principal to assign the role to.\r\n    - `description` - The description of the role assignment.\r\n    - `skip_service_principal_aad_check` - If set to true, skips the Azure Active Directory check for the service principal in the tenant. Defaults to false.\r\n    - `condition` - The condition which will be used to scope the role assignment.\r\n    - `condition_version` - The version of the condition syntax. Valid values are '2.0'.\r\n\r\n    > Note: only set `skip_service_principal_aad_check` to true if you are assigning a role to a service principal.\r\n"
              },
              "routes": {
                "default": {},
                "description": "    (Optional) A map of route objects to create on the route table. \r\n\r\n    - `name` - (Required) The name of the route.\r\n    - `address_prefix` - (Required) The destination to which the route applies. Can be CIDR (such as 10.1.0.0/16) or Azure Service Tag (such as ApiManagement, AzureBackup or AzureMonitor) format.\r\n    - `next_hop_type` - (Required) The type of Azure hop the packet should be sent to. Possible values are VirtualNetworkGateway, VnetLocal, Internet, VirtualAppliance and None.\r\n    - `next_hop_in_ip_address` - (Optional) Contains the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance\r\n\r\n    Example Input:\r\n\r\n```terraform\r\nroutes = {\r\n    route1 = {\r\n      name           = \"test-route-vnetlocal\"\r\n      address_prefix = \"10.2.0.0/32\"\r\n      next_hop_type  = \"VnetLocal\"\r\n    }\r\n}\r\n```\r\n"
              },
              "subnet_resource_ids": {
                "default": {},
                "description": "    (Optional) A map of string subnet ID's to associate the route table to.\r\n    Each value in the map must be supplied in the form of an Azure resource ID: \r\n```yaml annotate \r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}\r\n```\r\n\r\n```terraform\r\nsubnet_resource_ids = {\r\n    subnet1 = azurerm_subnet.this.id,\r\n    subnet2 = \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}\"\r\n}\r\n```\r\n"
              },
              "tags": {
                "default": null,
                "description": "(Optional) Tags of the resource."
              }
            }
          },
          "version_constraint": "0.2.2",
          "depends_on": [
            "module.lz_vending"
          ]
        },
        "avm-res-network-subnet": {
          "source": "Azure/avm-res-network-virtualnetwork/azurerm//modules/subnet",
          "expressions": {
            "address_prefix": {
              "references": [
                "each.value.address_prefix",
                "each.value"
              ]
            },
            "default_outbound_access_enabled": {
              "constant_value": true
            },
            "delegation": {
              "references": [
                "each.value.delegation",
                "each.value"
              ]
            },
            "name": {
              "references": [
                "each.value.name",
                "each.value"
              ]
            },
            "network_security_group": {
              "references": [
                "each.value.has_nsg",
                "each.value",
                "module.avm-res-network-networksecuritygroup",
                "each.key"
              ]
            },
            "private_endpoint_network_policies": {
              "constant_value": "Enabled"
            },
            "private_link_service_network_policies_enabled": {
              "constant_value": "true"
            },
            "route_table": {
              "references": [
                "module.avm-res-network-routetable[\"tohub\"].resource_id",
                "module.avm-res-network-routetable[\"tohub\"]"
              ]
            },
            "virtual_network": {
              "references": [
                "module.lz_vending.virtual_network_resource_ids[\"vnet1\"]",
                "module.lz_vending.virtual_network_resource_ids",
                "module.lz_vending"
              ]
            }
          },
          "for_each_expression": {
            "references": [
              "local.subnets"
            ]
          },
          "module": {
            "outputs": {
              "application_gateway_ip_configuration_resource_id": {
                "expression": {
                  "references": [
                    "azapi_resource.subnet.body.properties.applicationGatewayIPConfigurations.id",
                    "azapi_resource.subnet.body.properties.applicationGatewayIPConfigurations",
                    "azapi_resource.subnet.body.properties",
                    "azapi_resource.subnet.body",
                    "azapi_resource.subnet"
                  ]
                },
                "description": "The application gateway ip configurations resource id."
              },
              "name": {
                "expression": {
                  "references": [
                    "azapi_resource.subnet.name",
                    "azapi_resource.subnet"
                  ]
                },
                "description": "The resource name of the subnet."
              },
              "resource": {
                "expression": {
                  "references": [
                    "azapi_resource.subnet"
                  ]
                },
                "description": "All attributes of the subnet"
              },
              "resource_id": {
                "expression": {
                  "references": [
                    "azapi_resource.subnet.id",
                    "azapi_resource.subnet"
                  ]
                },
                "description": "The resource ID of the subnet."
              }
            },
            "resources": [
              {
                "address": "azapi_resource.subnet",
                "mode": "managed",
                "type": "azapi_resource",
                "name": "subnet",
                "provider_config_key": "module.avm-res-network-subnet:azapi",
                "expressions": {
                  "body": {
                    "references": [
                      "var.address_prefix",
                      "var.address_prefixes",
                      "var.delegation",
                      "var.delegation",
                      "var.default_outbound_access_enabled",
                      "var.nat_gateway",
                      "var.nat_gateway.id",
                      "var.nat_gateway",
                      "var.network_security_group",
                      "var.network_security_group.id",
                      "var.network_security_group",
                      "var.private_endpoint_network_policies",
                      "var.private_link_service_network_policies_enabled",
                      "var.route_table",
                      "var.route_table.id",
                      "var.route_table",
                      "var.service_endpoints",
                      "var.service_endpoints",
                      "var.service_endpoint_policies",
                      "var.service_endpoint_policies",
                      "var.sharing_scope"
                    ]
                  },
                  "locks": {
                    "references": [
                      "var.virtual_network.resource_id",
                      "var.virtual_network"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "parent_id": {
                    "references": [
                      "var.virtual_network.resource_id",
                      "var.virtual_network"
                    ]
                  },
                  "schema_validation_enabled": {
                    "constant_value": true
                  },
                  "type": {
                    "constant_value": "Microsoft.Network/virtualNetworks/subnets@2023-11-01"
                  }
                },
                "schema_version": 1,
                "depends_on": [
                  "azapi_update_resource.allow_multiple_address_prefixes_on_subnet",
                  "azapi_update_resource.allow_deletion_of_ip_prefix_from_subnet",
                  "azapi_update_resource.enable_shared_vnet"
                ]
              },
              {
                "address": "azapi_update_resource.allow_deletion_of_ip_prefix_from_subnet",
                "mode": "managed",
                "type": "azapi_update_resource",
                "name": "allow_deletion_of_ip_prefix_from_subnet",
                "provider_config_key": "module.avm-res-network-subnet:azapi",
                "expressions": {
                  "body": {
                    "constant_value": {
                      "properties": {}
                    }
                  },
                  "resource_id": {
                    "references": [
                      "var.subscription_id"
                    ]
                  },
                  "type": {
                    "constant_value": "Microsoft.Features/featureProviders/subscriptionFeatureRegistrations@2021-07-01"
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.has_multiple_address_prefixes"
                  ]
                }
              },
              {
                "address": "azapi_update_resource.allow_multiple_address_prefixes_on_subnet",
                "mode": "managed",
                "type": "azapi_update_resource",
                "name": "allow_multiple_address_prefixes_on_subnet",
                "provider_config_key": "module.avm-res-network-subnet:azapi",
                "expressions": {
                  "body": {
                    "constant_value": {
                      "properties": {}
                    }
                  },
                  "resource_id": {
                    "references": [
                      "var.subscription_id"
                    ]
                  },
                  "type": {
                    "constant_value": "Microsoft.Features/featureProviders/subscriptionFeatureRegistrations@2021-07-01"
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.has_multiple_address_prefixes"
                  ]
                }
              },
              {
                "address": "azapi_update_resource.enable_shared_vnet",
                "mode": "managed",
                "type": "azapi_update_resource",
                "name": "enable_shared_vnet",
                "provider_config_key": "module.avm-res-network-subnet:azapi",
                "expressions": {
                  "body": {
                    "constant_value": {
                      "properties": {}
                    }
                  },
                  "resource_id": {
                    "references": [
                      "var.subscription_id"
                    ]
                  },
                  "type": {
                    "constant_value": "Microsoft.Features/featureProviders/subscriptionFeatureRegistrations@2021-07-01"
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.sharing_scope"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.subnet",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "subnet",
                "provider_config_key": "azurerm",
                "expressions": {
                  "condition": {
                    "references": [
                      "each.value.condition",
                      "each.value"
                    ]
                  },
                  "condition_version": {
                    "references": [
                      "each.value.condition_version",
                      "each.value"
                    ]
                  },
                  "delegated_managed_identity_resource_id": {
                    "references": [
                      "each.value.delegated_managed_identity_resource_id",
                      "each.value"
                    ]
                  },
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_id": {
                    "references": [
                      "each.value.role_definition_id_or_name",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_definition_id_or_name",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "references": [
                      "each.value.role_definition_id_or_name",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_definition_id_or_name",
                      "each.value"
                    ]
                  },
                  "scope": {
                    "references": [
                      "azapi_resource.subnet.id",
                      "azapi_resource.subnet"
                    ]
                  },
                  "skip_service_principal_aad_check": {
                    "references": [
                      "each.value.skip_service_principal_aad_check",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.role_assignments"
                  ]
                }
              }
            ],
            "variables": {
              "address_prefix": {
                "default": null,
                "description": "  (Optional) The address prefix for the subnet. One of `address_prefix` or `address_prefixes` must be supplied.\r\n"
              },
              "address_prefixes": {
                "default": null,
                "description": "  (Optional) The address prefixes for the subnet. You can supply more than one address prefix. One of `address_prefix` or `address_prefixes` must be supplied.\r\n"
              },
              "default_outbound_access_enabled": {
                "default": false,
                "description": "(Optional) Determines whether default outbound internet access is enabled for this subnet. This can only be set at create time.\r\n\r\nMore details here: https://learn.microsoft.com/en-gb/azure/virtual-network/ip-services/default-outbound-access\r\n"
              },
              "delegation": {
                "default": null,
                "description": "(Optional) A list of delegations to apply to the subnet. Each delegation supports the following:\r\n    \r\n    - `name` - (Required) A name for this delegation.\r\n    - `service_delegation` - (Required) A block defining the service to delegate to. It supports the\r\n      - `name` - (Required) The name of the service to delegate to.\r\n"
              },
              "name": {
                "description": "(Optional) The name of the subnet to create.\r\n"
              },
              "nat_gateway": {
                "default": null,
                "description": "(Optional) The ID of the NAT Gateway to associate with the subnet. Changing this forces a new resource to be created.\r\n"
              },
              "network_security_group": {
                "default": null,
                "description": "(Optional) The ID of the Network Security Group to associate with the subnet. Changing this forces a new resource to be created.\r\n"
              },
              "private_endpoint_network_policies": {
                "default": "Enabled",
                "description": "(Optional) Enable or Disable network policies for the private endpoint on the subnet. Possible values are `Disabled`, `Enabled`, `NetworkSecurityGroupEnabled` and `RouteTableEnabled`. Defaults to `Enabled`.\r\n"
              },
              "private_link_service_network_policies_enabled": {
                "default": true,
                "description": "(Optional) Enable or Disable network policies for the private link service on the subnet. Setting this to `true` will **Enable** the policy and setting this to `false` will **Disable** the policy. Defaults to `true`.\r\n"
              },
              "role_assignments": {
                "default": {},
                "description": "  (Optional) A map of role assignments to create on the subnet. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n  \r\n  - `role_definition_id_or_name` - The ID or name of the role definition to assign to the principal.\r\n  - `principal_id` - The ID of the principal to assign the role to.\r\n  - `description` - (Optional) The description of the role assignment.\r\n  - `skip_service_principal_aad_check` - (Optional) If set to true, skips the Azure Active Directory check for the service principal in the tenant. Defaults to false.\r\n  - `condition` - (Optional) The condition which will be used to scope the role assignment.\r\n  - `condition_version` - (Optional) The version of the condition syntax. Leave as `null` if you are not using a condition, if you are then valid values are '2.0'.\r\n  - `delegated_managed_identity_resource_id` - (Optional) The delegated Azure Resource Id which contains a Managed Identity. Changing this forces a new resource to be created. This field is only used in cross-tenant scenario.\r\n  - `principal_type` - (Optional) The type of the `principal_id`. Possible values are `User`, `Group` and `ServicePrincipal`. It is necessary to explicitly set this attribute when creating role assignments if the principal creating the assignment is constrained by ABAC rules that filters on the PrincipalType attribute.\r\n  \r\n  > Note: only set `skip_service_principal_aad_check` to true if you are assigning a role to a service principal.\r\n"
              },
              "route_table": {
                "default": null,
                "description": "(Optional) The ID of the route table to associate with the subnet.\r\n"
              },
              "service_endpoint_policies": {
                "default": null,
                "description": "(Optional) A set of service endpoint policy IDs to associate with the subnet.\r\n"
              },
              "service_endpoints": {
                "default": null,
                "description": "(Optional) A set of service endpoints to associate with the subnet. Changing this forces a new resource to be created.\r\n"
              },
              "sharing_scope": {
                "default": null,
                "description": "(Optional) The sharing scope for the subnet. Possible values are `DelegatedServices` and `Tenant`. Defaults to `DelegatedServices`.\r\n"
              },
              "subscription_id": {
                "default": null,
                "description": "  (Optional) The subscription ID to use for the feature registration.\r\n"
              },
              "virtual_network": {
                "description": "  (Required) The Virtual Network, into which the subnet will be created.\r\n\r\n  - resource_id - The ID of the Virtual Network.\r\n"
              }
            }
          },
          "version_constraint": "0.8.1",
          "depends_on": [
            "module.lz_vending",
            "module.avm-res-network-networksecuritygroup",
            "module.avm-res-network-routetable"
          ]
        },
        "avm-res-storage-storageaccount": {
          "source": "Azure/avm-res-storage-storageaccount/azurerm",
          "expressions": {
            "account_kind": {
              "constant_value": "StorageV2"
            },
            "account_replication_type": {
              "constant_value": "LRS"
            },
            "account_tier": {
              "constant_value": "Standard"
            },
            "blob_properties": {
              "constant_value": {
                "versioning_enabled": true
              }
            },
            "enable_telemetry": {
              "references": [
                "local.enable_telemetry"
              ]
            },
            "https_traffic_only_enabled": {
              "constant_value": true
            },
            "location": {
              "references": [
                "var.location"
              ]
            },
            "min_tls_version": {
              "constant_value": "TLS1_2"
            },
            "name": {
              "references": [
                "each.value.name",
                "each.value"
              ]
            },
            "network_rules": {
              "references": [
                "var.storageaccount_ip_rules"
              ]
            },
            "public_network_access_enabled": {
              "constant_value": true
            },
            "resource_group_name": {
              "references": [
                "local.resource_groups[\"sarg\"].name",
                "local.resource_groups[\"sarg\"]",
                "local.resource_groups"
              ]
            },
            "shared_access_key_enabled": {
              "constant_value": false
            }
          },
          "for_each_expression": {
            "references": [
              "local.storage_accounts"
            ]
          },
          "module": {
            "outputs": {
              "containers": {
                "expression": {
                  "references": [
                    "azapi_resource.containers"
                  ]
                },
                "description": "Map of storage containers that are created."
              },
              "fqdn": {
                "expression": {
                  "references": [
                    "local.endpoints",
                    "azurerm_storage_account.this.name",
                    "azurerm_storage_account.this"
                  ]
                },
                "description": "Fqdns for storage services."
              },
              "name": {
                "expression": {
                  "references": [
                    "azurerm_storage_account.this.name",
                    "azurerm_storage_account.this"
                  ]
                },
                "description": "The name of the storage account"
              },
              "private_endpoints": {
                "expression": {
                  "references": [
                    "azurerm_private_endpoint.this"
                  ]
                },
                "description": "A map of private endpoints. The map key is the supplied input to var.private_endpoints. The map value is the entire azurerm_private_endpoint resource."
              },
              "queues": {
                "expression": {
                  "references": [
                    "azapi_resource.queue"
                  ]
                },
                "description": "Map of storage queues that are created."
              },
              "resource": {
                "sensitive": true,
                "expression": {
                  "references": [
                    "azurerm_storage_account.this"
                  ]
                },
                "description": "This is the full resource output for the Storage Account resource."
              },
              "resource_id": {
                "expression": {
                  "references": [
                    "azurerm_storage_account.this.id",
                    "azurerm_storage_account.this"
                  ]
                },
                "description": "The ID of the Storage Account."
              },
              "shares": {
                "expression": {
                  "references": [
                    "azapi_resource.share"
                  ]
                },
                "description": "Map of storage storage shares that are created."
              },
              "tables": {
                "expression": {
                  "references": [
                    "azapi_resource.table",
                    "azurerm_storage_account.this.name",
                    "azurerm_storage_account.this"
                  ]
                },
                "description": "Map of storage tables that are created."
              }
            },
            "resources": [
              {
                "address": "azapi_resource.containers",
                "mode": "managed",
                "type": "azapi_resource",
                "name": "containers",
                "provider_config_key": "module.avm-res-storage-storageaccount:azapi",
                "expressions": {
                  "body": {
                    "references": [
                      "each.value.metadata",
                      "each.value",
                      "each.value.metadata",
                      "each.value",
                      "each.value.public_access",
                      "each.value",
                      "each.value.immutable_storage_with_versioning",
                      "each.value",
                      "each.value.immutable_storage_with_versioning",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "parent_id": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this"
                    ]
                  },
                  "schema_validation_enabled": {
                    "constant_value": false
                  },
                  "type": {
                    "constant_value": "Microsoft.Storage/storageAccounts/blobServices/containers@2023-01-01"
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "var.containers"
                  ]
                }
              },
              {
                "address": "azapi_resource.queue",
                "mode": "managed",
                "type": "azapi_resource",
                "name": "queue",
                "provider_config_key": "module.avm-res-storage-storageaccount:azapi",
                "expressions": {
                  "body": {
                    "references": [
                      "each.value.metadata",
                      "each.value",
                      "each.value.metadata",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "parent_id": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this"
                    ]
                  },
                  "schema_validation_enabled": {
                    "constant_value": false
                  },
                  "type": {
                    "constant_value": "Microsoft.Storage/storageAccounts/queueServices/queues@2023-01-01"
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "var.queues"
                  ]
                },
                "depends_on": [
                  "azurerm_storage_account.this"
                ]
              },
              {
                "address": "azapi_resource.share",
                "mode": "managed",
                "type": "azapi_resource",
                "name": "share",
                "provider_config_key": "module.avm-res-storage-storageaccount:azapi",
                "expressions": {
                  "body": {
                    "references": [
                      "each.value.metadata",
                      "each.value",
                      "each.value.access_tier",
                      "each.value",
                      "each.value.enabled_protocol",
                      "each.value",
                      "each.value.quota",
                      "each.value",
                      "each.value.root_squash",
                      "each.value",
                      "each.value.signed_identifiers",
                      "each.value",
                      "each.value.signed_identifiers",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "parent_id": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this"
                    ]
                  },
                  "schema_validation_enabled": {
                    "constant_value": false
                  },
                  "type": {
                    "constant_value": "Microsoft.Storage/storageAccounts/fileServices/shares@2023-01-01"
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "var.shares"
                  ]
                }
              },
              {
                "address": "azapi_resource.table",
                "mode": "managed",
                "type": "azapi_resource",
                "name": "table",
                "provider_config_key": "module.avm-res-storage-storageaccount:azapi",
                "expressions": {
                  "body": {
                    "references": [
                      "each.value.signed_identifiers",
                      "each.value",
                      "each.value.signed_identifiers",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "parent_id": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this"
                    ]
                  },
                  "schema_validation_enabled": {
                    "constant_value": false
                  },
                  "type": {
                    "constant_value": "Microsoft.Storage/storageAccounts/tableServices/tables@2023-01-01"
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "var.tables"
                  ]
                }
              },
              {
                "address": "azurerm_management_lock.this_storage_account",
                "mode": "managed",
                "type": "azurerm_management_lock",
                "name": "this_storage_account",
                "provider_config_key": "azurerm",
                "expressions": {
                  "lock_level": {
                    "references": [
                      "var.lock.kind",
                      "var.lock"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.lock.name",
                      "var.lock",
                      "var.name"
                    ]
                  },
                  "notes": {
                    "references": [
                      "var.lock.kind",
                      "var.lock"
                    ]
                  },
                  "scope": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.lock"
                  ]
                },
                "depends_on": [
                  "azurerm_storage_account.this"
                ]
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.azure_file",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "azure_file",
                "provider_config_key": "azurerm",
                "expressions": {
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "each.value.event_hub_authorization_rule_resource_id",
                      "each.value"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "each.value.event_hub_name",
                      "each.value"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "each.value.workspace_resource_id",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.diagnostic_settings_file",
                    "var.diagnostic_settings_file"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.blob",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "blob",
                "provider_config_key": "azurerm",
                "expressions": {
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "each.value.event_hub_authorization_rule_resource_id",
                      "each.value"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "each.value.event_hub_name",
                      "each.value"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "each.value.workspace_resource_id",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.diagnostic_settings_blob",
                    "var.diagnostic_settings_blob"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.queue",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "queue",
                "provider_config_key": "azurerm",
                "expressions": {
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "each.value.event_hub_authorization_rule_resource_id",
                      "each.value"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "each.value.event_hub_name",
                      "each.value"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "each.value.workspace_resource_id",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.diagnostic_settings_queue",
                    "var.diagnostic_settings_queue"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.storage_account",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "storage_account",
                "provider_config_key": "azurerm",
                "expressions": {
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "each.value.event_hub_authorization_rule_resource_id",
                      "each.value"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "each.value.event_hub_name",
                      "each.value"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "each.value.workspace_resource_id",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.diagnostic_settings_storage_account",
                    "var.diagnostic_settings_storage_account"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.table",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "table",
                "provider_config_key": "azurerm",
                "expressions": {
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "each.value.event_hub_authorization_rule_resource_id",
                      "each.value"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "each.value.event_hub_name",
                      "each.value"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "each.value.workspace_resource_id",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.diagnostic_settings_table",
                    "var.diagnostic_settings_table"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.this",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "custom_network_interface_name": {
                    "references": [
                      "each.value.network_interface_name",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "each.value.location",
                      "each.value",
                      "each.value.location",
                      "each.value",
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value",
                      "each.value.name",
                      "each.value",
                      "var.name"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.private_service_connection_name",
                          "each.value",
                          "each.value.private_service_connection_name",
                          "each.value",
                          "var.name"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_storage_account.this.id",
                          "azurerm_storage_account.this"
                        ]
                      },
                      "subresource_names": {
                        "references": [
                          "each.value.subresource_name",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.resource_group_name",
                      "each.value",
                      "each.value.resource_group_name",
                      "each.value",
                      "var.resource_group_name"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.subnet_resource_id",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tags",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.private_endpoints",
                    "var.private_endpoints_manage_dns_zone_group"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.this_unmanaged_dns_zone_groups",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "this_unmanaged_dns_zone_groups",
                "provider_config_key": "azurerm",
                "expressions": {
                  "custom_network_interface_name": {
                    "references": [
                      "each.value.network_interface_name",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "each.value.location",
                      "each.value",
                      "each.value.location",
                      "each.value",
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value",
                      "each.value.name",
                      "each.value",
                      "var.name"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.private_service_connection_name",
                          "each.value",
                          "each.value.private_service_connection_name",
                          "each.value",
                          "var.name"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_storage_account.this.id",
                          "azurerm_storage_account.this"
                        ]
                      },
                      "subresource_names": {
                        "references": [
                          "each.value.subresource_name",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.resource_group_name",
                      "each.value",
                      "each.value.resource_group_name",
                      "each.value",
                      "var.resource_group_name"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.subnet_resource_id",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tags",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.private_endpoints",
                    "var.private_endpoints_manage_dns_zone_group"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint_application_security_group_association.this",
                "mode": "managed",
                "type": "azurerm_private_endpoint_application_security_group_association",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "application_security_group_id": {
                    "references": [
                      "each.value.asg_resource_id",
                      "each.value"
                    ]
                  },
                  "private_endpoint_id": {
                    "references": [
                      "var.private_endpoints_manage_dns_zone_group",
                      "azurerm_private_endpoint.this",
                      "each.value.pe_key",
                      "each.value",
                      "azurerm_private_endpoint.this_unmanaged_dns_zone_groups",
                      "each.value.pe_key",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.private_endpoint_application_security_group_associations"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.containers",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "containers",
                "provider_config_key": "azurerm",
                "expressions": {
                  "condition": {
                    "references": [
                      "each.value.role_assignment.condition",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "condition_version": {
                    "references": [
                      "each.value.role_assignment.condition_version",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "delegated_managed_identity_resource_id": {
                    "references": [
                      "each.value.role_assignment.delegated_managed_identity_resource_id",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "principal_id": {
                    "references": [
                      "each.value.role_assignment.principal_id",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "role_definition_id": {
                    "references": [
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "references": [
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "scope": {
                    "references": [
                      "azapi_resource.containers",
                      "each.value.container_key",
                      "each.value"
                    ]
                  },
                  "skip_service_principal_aad_check": {
                    "references": [
                      "each.value.role_assignment.skip_service_principal_aad_check",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.containers_role_assignments"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.private_endpoint",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "private_endpoint",
                "provider_config_key": "azurerm",
                "expressions": {
                  "condition": {
                    "references": [
                      "each.value.role_assignment.condition",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "condition_version": {
                    "references": [
                      "each.value.role_assignment.condition_version",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "delegated_managed_identity_resource_id": {
                    "references": [
                      "each.value.role_assignment.delegated_managed_identity_resource_id",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "principal_id": {
                    "references": [
                      "each.value.role_assignment.principal_id",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "principal_type": {
                    "references": [
                      "each.value.role_assignment.principal_type",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "role_definition_id": {
                    "references": [
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "references": [
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "scope": {
                    "references": [
                      "azurerm_private_endpoint.this",
                      "each.value.private_endpoint_key",
                      "each.value",
                      "azurerm_private_endpoint.this_unmanaged_dns_zone_groups",
                      "each.value.private_endpoint_key",
                      "each.value"
                    ]
                  },
                  "skip_service_principal_aad_check": {
                    "references": [
                      "each.value.role_assignment.skip_service_principal_aad_check",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.pe_role_assignments"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.queues",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "queues",
                "provider_config_key": "azurerm",
                "expressions": {
                  "condition": {
                    "references": [
                      "each.value.role_assignment.condition",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "condition_version": {
                    "references": [
                      "each.value.role_assignment.condition_version",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "delegated_managed_identity_resource_id": {
                    "references": [
                      "each.value.role_assignment.delegated_managed_identity_resource_id",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "principal_id": {
                    "references": [
                      "each.value.role_assignment.principal_id",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "role_definition_id": {
                    "references": [
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "references": [
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "scope": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this",
                      "azapi_resource.queue",
                      "each.value.queue_key",
                      "each.value"
                    ]
                  },
                  "skip_service_principal_aad_check": {
                    "references": [
                      "each.value.role_assignment.skip_service_principal_aad_check",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.queues_role_assignments"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.shares",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "shares",
                "provider_config_key": "azurerm",
                "expressions": {
                  "condition": {
                    "references": [
                      "each.value.role_assignment.condition",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "condition_version": {
                    "references": [
                      "each.value.role_assignment.condition_version",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "delegated_managed_identity_resource_id": {
                    "references": [
                      "each.value.role_assignment.delegated_managed_identity_resource_id",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "principal_id": {
                    "references": [
                      "each.value.role_assignment.principal_id",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "role_definition_id": {
                    "references": [
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "references": [
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "scope": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this",
                      "azapi_resource.share",
                      "each.value.share_key",
                      "each.value"
                    ]
                  },
                  "skip_service_principal_aad_check": {
                    "references": [
                      "each.value.role_assignment.skip_service_principal_aad_check",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.shares_role_assignments"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.storage_account",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "storage_account",
                "provider_config_key": "azurerm",
                "expressions": {
                  "condition": {
                    "references": [
                      "each.value.condition",
                      "each.value"
                    ]
                  },
                  "condition_version": {
                    "references": [
                      "each.value.condition_version",
                      "each.value"
                    ]
                  },
                  "delegated_managed_identity_resource_id": {
                    "references": [
                      "each.value.delegated_managed_identity_resource_id",
                      "each.value"
                    ]
                  },
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_id": {
                    "references": [
                      "each.value.role_definition_id_or_name",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_definition_id_or_name",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "references": [
                      "each.value.role_definition_id_or_name",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_definition_id_or_name",
                      "each.value"
                    ]
                  },
                  "scope": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this"
                    ]
                  },
                  "skip_service_principal_aad_check": {
                    "references": [
                      "each.value.skip_service_principal_aad_check",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.role_assignments"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.tables",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "tables",
                "provider_config_key": "azurerm",
                "expressions": {
                  "condition": {
                    "references": [
                      "each.value.role_assignment.condition",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "condition_version": {
                    "references": [
                      "each.value.role_assignment.condition_version",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "delegated_managed_identity_resource_id": {
                    "references": [
                      "each.value.role_assignment.delegated_managed_identity_resource_id",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "principal_id": {
                    "references": [
                      "each.value.role_assignment.principal_id",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "role_definition_id": {
                    "references": [
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "references": [
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_assignment.role_definition_id_or_name",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  },
                  "scope": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this",
                      "azapi_resource.table",
                      "each.value.table_key",
                      "each.value"
                    ]
                  },
                  "skip_service_principal_aad_check": {
                    "references": [
                      "each.value.role_assignment.skip_service_principal_aad_check",
                      "each.value.role_assignment",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.tables_role_assignments"
                  ]
                }
              },
              {
                "address": "azurerm_storage_account.this",
                "mode": "managed",
                "type": "azurerm_storage_account",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "access_tier": {
                    "references": [
                      "var.account_kind",
                      "var.account_tier",
                      "var.access_tier"
                    ]
                  },
                  "account_kind": {
                    "references": [
                      "var.account_kind"
                    ]
                  },
                  "account_replication_type": {
                    "references": [
                      "var.account_replication_type"
                    ]
                  },
                  "account_tier": {
                    "references": [
                      "var.account_tier"
                    ]
                  },
                  "allow_nested_items_to_be_public": {
                    "references": [
                      "var.allow_nested_items_to_be_public"
                    ]
                  },
                  "allowed_copy_scope": {
                    "references": [
                      "var.allowed_copy_scope"
                    ]
                  },
                  "cross_tenant_replication_enabled": {
                    "references": [
                      "var.cross_tenant_replication_enabled"
                    ]
                  },
                  "default_to_oauth_authentication": {
                    "references": [
                      "var.default_to_oauth_authentication"
                    ]
                  },
                  "edge_zone": {
                    "references": [
                      "var.edge_zone"
                    ]
                  },
                  "https_traffic_only_enabled": {
                    "references": [
                      "var.https_traffic_only_enabled"
                    ]
                  },
                  "infrastructure_encryption_enabled": {
                    "references": [
                      "var.infrastructure_encryption_enabled"
                    ]
                  },
                  "is_hns_enabled": {
                    "references": [
                      "var.is_hns_enabled"
                    ]
                  },
                  "large_file_share_enabled": {
                    "references": [
                      "var.large_file_share_enabled"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "min_tls_version": {
                    "references": [
                      "var.min_tls_version"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "nfsv3_enabled": {
                    "references": [
                      "var.nfsv3_enabled"
                    ]
                  },
                  "public_network_access_enabled": {
                    "references": [
                      "var.public_network_access_enabled"
                    ]
                  },
                  "queue_encryption_key_type": {
                    "references": [
                      "var.queue_encryption_key_type"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_group_name"
                    ]
                  },
                  "sftp_enabled": {
                    "references": [
                      "var.sftp_enabled"
                    ]
                  },
                  "shared_access_key_enabled": {
                    "references": [
                      "var.shared_access_key_enabled"
                    ]
                  },
                  "table_encryption_key_type": {
                    "references": [
                      "var.table_encryption_key_type"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  }
                },
                "schema_version": 4
              },
              {
                "address": "azurerm_storage_account_customer_managed_key.this",
                "mode": "managed",
                "type": "azurerm_storage_account_customer_managed_key",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "key_name": {
                    "references": [
                      "var.customer_managed_key.key_name",
                      "var.customer_managed_key"
                    ]
                  },
                  "key_vault_id": {
                    "references": [
                      "var.customer_managed_key.key_vault_resource_id",
                      "var.customer_managed_key"
                    ]
                  },
                  "key_version": {
                    "references": [
                      "var.customer_managed_key.key_version",
                      "var.customer_managed_key"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this"
                    ]
                  },
                  "user_assigned_identity_id": {
                    "references": [
                      "var.customer_managed_key.user_assigned_identity.resource_id",
                      "var.customer_managed_key.user_assigned_identity",
                      "var.customer_managed_key"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.customer_managed_key"
                  ]
                }
              },
              {
                "address": "azurerm_storage_account_local_user.this",
                "mode": "managed",
                "type": "azurerm_storage_account_local_user",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "home_directory": {
                    "references": [
                      "each.value.home_directory",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "ssh_key_enabled": {
                    "references": [
                      "each.value.ssh_key_enabled",
                      "each.value"
                    ]
                  },
                  "ssh_password_enabled": {
                    "references": [
                      "each.value.ssh_password_enabled",
                      "each.value"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.local_user"
                  ]
                }
              },
              {
                "address": "azurerm_storage_data_lake_gen2_filesystem.this",
                "mode": "managed",
                "type": "azurerm_storage_data_lake_gen2_filesystem",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "default_encryption_scope": {
                    "references": [
                      "var.storage_data_lake_gen2_filesystem.default_encryption_scope",
                      "var.storage_data_lake_gen2_filesystem"
                    ]
                  },
                  "group": {
                    "references": [
                      "var.storage_data_lake_gen2_filesystem.group",
                      "var.storage_data_lake_gen2_filesystem"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.storage_data_lake_gen2_filesystem.name",
                      "var.storage_data_lake_gen2_filesystem"
                    ]
                  },
                  "owner": {
                    "references": [
                      "var.storage_data_lake_gen2_filesystem.owner",
                      "var.storage_data_lake_gen2_filesystem"
                    ]
                  },
                  "properties": {
                    "references": [
                      "var.storage_data_lake_gen2_filesystem.properties",
                      "var.storage_data_lake_gen2_filesystem"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.storage_data_lake_gen2_filesystem"
                  ]
                },
                "depends_on": [
                  "azurerm_storage_account.this"
                ]
              },
              {
                "address": "azurerm_storage_management_policy.this",
                "mode": "managed",
                "type": "azurerm_storage_management_policy",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "storage_account_id": {
                    "references": [
                      "azurerm_storage_account.this.id",
                      "azurerm_storage_account.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.has_management_policy"
                  ]
                }
              },
              {
                "address": "modtm_telemetry.telemetry",
                "mode": "managed",
                "type": "modtm_telemetry",
                "name": "telemetry",
                "provider_config_key": "module.avm-res-storage-storageaccount:modtm",
                "expressions": {
                  "tags": {
                    "references": [
                      "data.azurerm_client_config.telemetry",
                      "data.azurerm_client_config.telemetry",
                      "data.modtm_module_source.telemetry",
                      "data.modtm_module_source.telemetry",
                      "random_uuid.telemetry"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_telemetry"
                  ]
                }
              },
              {
                "address": "random_uuid.telemetry",
                "mode": "managed",
                "type": "random_uuid",
                "name": "telemetry",
                "provider_config_key": "module.avm-res-storage-storageaccount:random",
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_telemetry"
                  ]
                }
              },
              {
                "address": "data.azurerm_client_config.telemetry",
                "mode": "data",
                "type": "azurerm_client_config",
                "name": "telemetry",
                "provider_config_key": "azurerm",
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_telemetry"
                  ]
                }
              },
              {
                "address": "data.modtm_module_source.telemetry",
                "mode": "data",
                "type": "modtm_module_source",
                "name": "telemetry",
                "provider_config_key": "module.avm-res-storage-storageaccount:modtm",
                "expressions": {
                  "module_path": {
                    "references": [
                      "path.module"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_telemetry"
                  ]
                }
              }
            ],
            "variables": {
              "access_tier": {
                "default": "Hot",
                "description": "(Optional) Defines the access tier for `BlobStorage`, `FileStorage` and `StorageV2` accounts. Valid options are `Hot` and `Cool`, defaults to `Hot`."
              },
              "account_kind": {
                "default": "StorageV2",
                "description": "(Optional) Defines the Kind of account. Valid options are `BlobStorage`, `BlockBlobStorage`, `FileStorage`, `Storage` and `StorageV2`. Defaults to `StorageV2`."
              },
              "account_replication_type": {
                "default": "ZRS",
                "description": "(Required) Defines the type of replication to use for this storage account. Valid options are `LRS`, `GRS`, `RAGRS`, `ZRS`, `GZRS` and `RAGZRS`.  Defaults to `ZRS`"
              },
              "account_tier": {
                "default": "Standard",
                "description": "(Required) Defines the Tier to use for this storage account. Valid options are `Standard` and `Premium`. For `BlockBlobStorage` and `FileStorage` accounts only `Premium` is valid. Changing this forces a new resource to be created."
              },
              "allow_nested_items_to_be_public": {
                "default": false,
                "description": "(Optional) Allow or disallow nested items within this Account to opt into being public. Defaults to `false`."
              },
              "allowed_copy_scope": {
                "default": null,
                "description": "(Optional) Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. Possible values are `AAD` and `PrivateLink`."
              },
              "azure_files_authentication": {
                "default": null,
                "description": "- `directory_type` - (Required) Specifies the directory service used. Possible values are `AADDS`, `AD` and `AADKERB`.\r\n- `default_share_level_permission` - (Optional) Specifies the default share level permissions applied to all users. Possible values are StorageFileDataSmbShareReader, StorageFileDataSmbShareContributor, StorageFileDataSmbShareElevatedContributor, or None.\r\n\r\n---\r\n`active_directory` block supports the following:\r\n- `domain_guid` - (Required) Specifies the domain GUID.\r\n- `domain_name` - (Required) Specifies the primary domain that the AD DNS server is authoritative for.\r\n- `domain_sid` - (Required) Specifies the security identifier (SID).\r\n- `forest_name` - (Required) Specifies the Active Directory forest.\r\n- `netbios_domain_name` - (Required) Specifies the NetBIOS domain name.\r\n- `storage_sid` - (Required) Specifies the security identifier (SID) for Azure Storage.\r\n"
              },
              "blob_properties": {
                "default": null,
                "description": "- `change_feed_enabled` - (Optional) Is the blob service properties for change feed events enabled? Default to `false`.\r\n- `change_feed_retention_in_days` - (Optional) The duration of change feed events retention in days. The possible values are between 1 and 146000 days (400 years). Setting this to null (or omit this in the configuration file) indicates an infinite retention of the change feed.\r\n- `default_service_version` - (Optional) The API Version which should be used by default for requests to the Data Plane API if an incoming request doesn't specify an API Version.\r\n- `last_access_time_enabled` - (Optional) Is the last access time based tracking enabled? Default to `false`.\r\n- `versioning_enabled` - (Optional) Is versioning enabled? Default to `false`.\r\n\r\n---\r\n`container_delete_retention_policy` block supports the following:\r\n- `days` - (Optional) Specifies the number of days that the container should be retained, between `1` and `365` days. Defaults to `7`.\r\n\r\n---\r\n`cors_rule` block supports the following:\r\n- `allowed_headers` - (Required) A list of headers that are allowed to be a part of the cross-origin request.\r\n- `allowed_methods` - (Required) A list of HTTP methods that are allowed to be executed by the origin. Valid options are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PUT` or `PATCH`.\r\n- `allowed_origins` - (Required) A list of origin domains that will be allowed by CORS.\r\n- `exposed_headers` - (Required) A list of response headers that are exposed to CORS clients.\r\n- `max_age_in_seconds` - (Required) The number of seconds the client should cache a preflight response.\r\n\r\n---\r\n`delete_retention_policy` block supports the following:\r\n- `days` - (Optional) Specifies the number of days that the blob should be retained, between `1` and `365` days. Defaults to `7`.\r\n\r\n---\r\n`diagnostic_settings` block supports the following:\r\n- `name` - (Optional) The name of the diagnostic setting. Defaults to `null`.\r\n- `log_categories` - (Optional) A set of log categories to enable. Defaults to an empty set.\r\n- `log_groups` - (Optional) A set of log groups to enable. Defaults to `[\"allLogs\"]`.\r\n- `metric_categories` - (Optional) A set of metric categories to enable. Defaults to `[\"AllMetrics\"]`.\r\n- `log_analytics_destination_type` - (Optional) The destination type for log analytics. Defaults to `\"Dedicated\"`.\r\n- `workspace_resource_id` - (Optional) The resource ID of the Log Analytics workspace. Defaults to `null`.\r\n- `resource_id` - (Optional) The resource ID of the target resource for diagnostics. Defaults to `null`.\r\n- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the Event Hub authorization rule. Defaults to `null`.\r\n- `event_hub_name` - (Optional) The name of the Event Hub. Defaults to `null`.\r\n- `marketplace_partner_resource_id` - (Optional) The resource ID of the marketplace partner. Defaults to `null`.\r\n\r\n---\r\n`restore_policy` block supports the following:\r\n- `days` - (Required) Specifies the number of days that the blob can be restored, between `1` and `365` days. This must be less than the `days` specified for `delete_retention_policy`.\r\n"
              },
              "containers": {
                "default": {},
                "description": "- `container_access_type` - (Optional) The Access Level configured for this Container. Possible values are `Blob`, `Container` or `None`. Defaults to `None`.\r\n- `metadata` - (Optional) A mapping of MetaData for this Container. All metadata keys should be lowercase.\r\n- `name` - (Required) The name of the Container which should be created within the Storage Account. Changing this forces a new resource to be created.\r\n\r\nSupply role assignments in the same way as for `var.role_assignments`.\r\n\r\n---\r\n`timeouts` block supports the following:\r\n- `create` - (Defaults to 30 minutes) Used when creating the Storage Container.\r\n- `delete` - (Defaults to 30 minutes) Used when deleting the Storage Container.\r\n- `read` - (Defaults to 5 minutes) Used when retrieving the Storage Container.\r\n- `update` - (Defaults to 30 minutes) Used when updating the Storage Container.\r\n"
              },
              "cross_tenant_replication_enabled": {
                "default": false,
                "description": "(Optional) Should cross Tenant replication be enabled? Defaults to `false`."
              },
              "custom_domain": {
                "default": null,
                "description": "- `name` - (Required) The Custom Domain Name to use for the Storage Account, which will be validated by Azure.\r\n- `use_subdomain` - (Optional) Should the Custom Domain Name be validated by using indirect CNAME validation?\r\n"
              },
              "customer_managed_key": {
                "default": null,
                "description": "    Defines a customer managed key to use for encryption.\r\n\r\n    object({\r\n      key_vault_resource_id              = (Required) - The full Azure Resource ID of the key_vault where the customer managed key will be referenced from.\r\n      key_name                           = (Required) - The key name for the customer managed key in the key vault.\r\n      key_version                        = (Optional) - The version of the key to use\r\n      user_assigned_identity_resource_id = (Optional) - The user assigned identity to use when access the key vault\r\n    })\r\n\r\n    Example Inputs:\r\n    ```terraform\r\n    customer_managed_key = {\r\n      key_vault_resource_id = \"/subscriptions/0000000-0000-0000-0000-000000000000/resourceGroups/test-resource-group/providers/Microsoft.KeyVault/vaults/example-key-vault\"\r\n      key_name              = \"sample-customer-key\"\r\n    }\r\n    ```\r\n"
              },
              "default_to_oauth_authentication": {
                "default": null,
                "description": "(Optional) Default to Azure Active Directory authorization in the Azure portal when accessing the Storage Account. The default value is `false`"
              },
              "diagnostic_settings_blob": {
                "default": {},
                "description": "A map of diagnostic settings to create on the Blob Storage within Storage Account. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\n- `name` - (Optional) The name of the diagnostic setting. One will be generated if not set, however this will not be unique if you want to create multiple diagnostic setting resources.\r\n- `log_categories` - (Optional) A set of log categories to send to the log analytics workspace. Defaults to `[]`.\r\n- `log_groups` - (Optional) A set of log groups to send to the log analytics workspace. Defaults to `[\"allLogs\"]`.\r\n- `metric_categories` - (Optional) A set of metric categories to send to the log analytics workspace. Defaults to `[\"AllMetrics\"]`.\r\n- `log_analytics_destination_type` - (Optional) The destination type for the diagnostic setting. Possible values are `Dedicated` and `AzureDiagnostics`. Defaults to `Dedicated`.\r\n- `workspace_resource_id` - (Optional) The resource ID of the log analytics workspace to send logs and metrics to.\r\n- `storage_account_resource_id` - (Optional) The resource ID of the storage account to send logs and metrics to.\r\n- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the event hub authorization rule to send logs and metrics to.\r\n- `event_hub_name` - (Optional) The name of the event hub. If none is specified, the default event hub will be selected.\r\n- `marketplace_partner_resource_id` - (Optional) The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic LogsLogs.\r\n"
              },
              "diagnostic_settings_file": {
                "default": {},
                "description": "A map of diagnostic settings to create on the Azure Files Storage within Storage Account. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\n- `name` - (Optional) The name of the diagnostic setting. One will be generated if not set, however this will not be unique if you want to create multiple diagnostic setting resources.\r\n- `log_categories` - (Optional) A set of log categories to send to the log analytics workspace. Defaults to `[]`.\r\n- `log_groups` - (Optional) A set of log groups to send to the log analytics workspace. Defaults to `[\"allLogs\"]`.\r\n- `metric_categories` - (Optional) A set of metric categories to send to the log analytics workspace. Defaults to `[\"AllMetrics\"]`.\r\n- `log_analytics_destination_type` - (Optional) The destination type for the diagnostic setting. Possible values are `Dedicated` and `AzureDiagnostics`. Defaults to `Dedicated`.\r\n- `workspace_resource_id` - (Optional) The resource ID of the log analytics workspace to send logs and metrics to.\r\n- `storage_account_resource_id` - (Optional) The resource ID of the storage account to send logs and metrics to.\r\n- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the event hub authorization rule to send logs and metrics to.\r\n- `event_hub_name` - (Optional) The name of the event hub. If none is specified, the default event hub will be selected.\r\n- `marketplace_partner_resource_id` - (Optional) The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic LogsLogs.\r\n"
              },
              "diagnostic_settings_queue": {
                "default": {},
                "description": "A map of diagnostic settings to create on the Queue Storage within Storage Account. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\n- `name` - (Optional) The name of the diagnostic setting. One will be generated if not set, however this will not be unique if you want to create multiple diagnostic setting resources.\r\n- `log_categories` - (Optional) A set of log categories to send to the log analytics workspace. Defaults to `[]`.\r\n- `log_groups` - (Optional) A set of log groups to send to the log analytics workspace. Defaults to `[\"allLogs\"]`.\r\n- `metric_categories` - (Optional) A set of metric categories to send to the log analytics workspace. Defaults to `[\"AllMetrics\"]`.\r\n- `log_analytics_destination_type` - (Optional) The destination type for the diagnostic setting. Possible values are `Dedicated` and `AzureDiagnostics`. Defaults to `Dedicated`.\r\n- `workspace_resource_id` - (Optional) The resource ID of the log analytics workspace to send logs and metrics to.\r\n- `storage_account_resource_id` - (Optional) The resource ID of the storage account to send logs and metrics to.\r\n- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the event hub authorization rule to send logs and metrics to.\r\n- `event_hub_name` - (Optional) The name of the event hub. If none is specified, the default event hub will be selected.\r\n- `marketplace_partner_resource_id` - (Optional) The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic LogsLogs.\r\n"
              },
              "diagnostic_settings_storage_account": {
                "default": {},
                "description": "A map of diagnostic settings to create on the Storage Account. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\n- `name` - (Optional) The name of the diagnostic setting. One will be generated if not set, however this will not be unique if you want to create multiple diagnostic setting resources.\r\n- `log_categories` - (Optional) A set of log categories to send to the log analytics workspace. Defaults to `[]`.\r\n- `log_groups` - (Optional) A set of log groups to send to the log analytics workspace. Defaults to `[\"allLogs\"]`.\r\n- `metric_categories` - (Optional) A set of metric categories to send to the log analytics workspace. Defaults to `[\"AllMetrics\"]`.\r\n- `log_analytics_destination_type` - (Optional) The destination type for the diagnostic setting. Possible values are `Dedicated` and `AzureDiagnostics`. Defaults to `Dedicated`.\r\n- `workspace_resource_id` - (Optional) The resource ID of the log analytics workspace to send logs and metrics to.\r\n- `storage_account_resource_id` - (Optional) The resource ID of the storage account to send logs and metrics to.\r\n- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the event hub authorization rule to send logs and metrics to.\r\n- `event_hub_name` - (Optional) The name of the event hub. If none is specified, the default event hub will be selected.\r\n- `marketplace_partner_resource_id` - (Optional) The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic LogsLogs.\r\n"
              },
              "diagnostic_settings_table": {
                "default": {},
                "description": "A map of diagnostic settings to create on the Table Storage within the Storage Account. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\n- `name` - (Optional) The name of the diagnostic setting. One will be generated if not set, however this will not be unique if you want to create multiple diagnostic setting resources.\r\n- `log_categories` - (Optional) A set of log categories to send to the log analytics workspace. Defaults to `[]`.\r\n- `log_groups` - (Optional) A set of log groups to send to the log analytics workspace. Defaults to `[\"allLogs\"]`.\r\n- `metric_categories` - (Optional) A set of metric categories to send to the log analytics workspace. Defaults to `[\"AllMetrics\"]`.\r\n- `log_analytics_destination_type` - (Optional) The destination type for the diagnostic setting. Possible values are `Dedicated` and `AzureDiagnostics`. Defaults to `Dedicated`.\r\n- `workspace_resource_id` - (Optional) The resource ID of the log analytics workspace to send logs and metrics to.\r\n- `storage_account_resource_id` - (Optional) The resource ID of the storage account to send logs and metrics to.\r\n- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the event hub authorization rule to send logs and metrics to.\r\n- `event_hub_name` - (Optional) The name of the event hub. If none is specified, the default event hub will be selected.\r\n- `marketplace_partner_resource_id` - (Optional) The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic LogsLogs.\r\n"
              },
              "edge_zone": {
                "default": null,
                "description": "(Optional) Specifies the Edge Zone within the Azure Region where this Storage Account should exist. Changing this forces a new Storage Account to be created."
              },
              "enable_telemetry": {
                "default": true,
                "description": "This variable controls whether or not telemetry is enabled for the module.\r\nFor more information see https://aka.ms/avm/telemetryinfo.\r\nIf it is set to false, then no telemetry will be collected.\r\n"
              },
              "https_traffic_only_enabled": {
                "default": true,
                "description": "(Optional) Boolean flag which forces HTTPS if enabled, see [here](https://docs.microsoft.com/azure/storage/storage-require-secure-transfer/) for more information. Defaults to `true`."
              },
              "immutability_policy": {
                "default": null,
                "description": "- `allow_protected_append_writes` - (Required) When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.\r\n- `period_since_creation_in_days` - (Required) The immutability period for the blobs in the container since the policy creation, in days.\r\n- `state` - (Required) Defines the mode of the policy. `Disabled` state disables the policy, `Unlocked` state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, `Locked` state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.\r\n"
              },
              "infrastructure_encryption_enabled": {
                "default": false,
                "description": "(Optional) Is infrastructure encryption enabled? Changing this forces a new resource to be created. Defaults to `false`."
              },
              "is_hns_enabled": {
                "default": null,
                "description": "(Optional) Is Hierarchical Namespace enabled? This can be used with Azure Data Lake Storage Gen 2 ([see here for more information](https://docs.microsoft.com/azure/storage/blobs/data-lake-storage-quickstart-create-account/)). Changing this forces a new resource to be created."
              },
              "large_file_share_enabled": {
                "default": null,
                "description": "(Optional) Is Large File Share Enabled?"
              },
              "local_user": {
                "default": {},
                "description": "- `home_directory` - (Optional) The home directory of the Storage Account Local User.\r\n- `name` - (Required) The name which should be used for this Storage Account Local User. Changing this forces a new Storage Account Local User to be created.\r\n- `ssh_key_enabled` - (Optional) Specifies whether SSH Key Authentication is enabled. Defaults to `false`.\r\n- `ssh_password_enabled` - (Optional) Specifies whether SSH Password Authentication is enabled. Defaults to `false`.\r\n\r\n---\r\n`permission_scope` block supports the following:\r\n- `resource_name` - (Required) The container name (when `service` is set to `blob`) or the file share name (when `service` is set to `file`), used by the Storage Account Local User.\r\n- `service` - (Required) The storage service used by this Storage Account Local User. Possible values are `blob` and `file`.\r\n\r\n---\r\n`permissions` block supports the following:\r\n- `create` - (Optional) Specifies if the Local User has the create permission for this scope. Defaults to `false`.\r\n- `delete` - (Optional) Specifies if the Local User has the delete permission for this scope. Defaults to `false`.\r\n- `list` - (Optional) Specifies if the Local User has the list permission for this scope. Defaults to `false`.\r\n- `read` - (Optional) Specifies if the Local User has the read permission for this scope. Defaults to `false`.\r\n- `write` - (Optional) Specifies if the Local User has the write permission for this scope. Defaults to `false`.\r\n\r\n---\r\n`ssh_authorized_key` block supports the following:\r\n- `description` - (Optional) The description of this SSH authorized key.\r\n- `key` - (Required) The public key value of this SSH authorized key.\r\n\r\n---\r\n`timeouts` block supports the following:\r\n- `create` - (Defaults to 30 minutes) Used when creating the Storage Account Local User.\r\n- `delete` - (Defaults to 30 minutes) Used when deleting the Storage Account Local User.\r\n- `read` - (Defaults to 5 minutes) Used when retrieving the Storage Account Local User.\r\n- `update` - (Defaults to 30 minutes) Used when updating the Storage Account Local User.\r\n"
              },
              "location": {
                "description": "Azure region where the resource should be deployed.\r\nIf null, the location will be inferred from the resource group location.\r\n"
              },
              "lock": {
                "default": null,
                "description": "The lock level to apply. Default is `None`. Possible values are `None`, `CanNotDelete`, and `ReadOnly`."
              },
              "managed_identities": {
                "default": {
                  "system_assigned": false,
                  "user_assigned_resource_ids": []
                },
                "description": "  Controls the Managed Identity configuration on this resource. The following properties can be specified:\r\n\r\n  - `system_assigned` - (Optional) Specifies if the System Assigned Managed Identity should be enabled.\r\n  - `user_assigned_resource_ids` - (Optional) Specifies a list of User Assigned Managed Identity resource IDs to be assigned to this resource.\r\n"
              },
              "min_tls_version": {
                "default": "TLS1_2",
                "description": "(Optional) The minimum supported TLS version for the storage account. Possible values are `TLS1_0`, `TLS1_1`, and `TLS1_2`. Defaults to `TLS1_2` for new storage accounts."
              },
              "name": {
                "description": "The name of the resource."
              },
              "network_rules": {
                "default": {
                  "bypass": [
                    "AzureServices"
                  ],
                  "default_action": "Deny",
                  "ip_rules": [],
                  "private_link_access": null,
                  "timeouts": null,
                  "virtual_network_subnet_ids": []
                },
                "description": "> Note the default value for this variable will block all public access to the storage account. If you want to disable all network rules, set this value to `null`.\r\n\r\n- `bypass` - (Optional) Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are any combination of `Logging`, `Metrics`, `AzureServices`, or `None`.\r\n- `default_action` - (Required) Specifies the default action of allow or deny when no other rules match. Valid options are `Deny` or `Allow`.\r\n- `ip_rules` - (Optional) List of public IP or IP ranges in CIDR Format. Only IPv4 addresses are allowed. Private IP address ranges (as defined in [RFC 1918](https://tools.ietf.org/html/rfc1918#section-3)) are not allowed.\r\n- `storage_account_id` - (Required) Specifies the ID of the storage account. Changing this forces a new resource to be created.\r\n- `virtual_network_subnet_ids` - (Optional) A list of virtual network subnet ids to secure the storage account.\r\n\r\n---\r\n`private_link_access` block supports the following:\r\n- `endpoint_resource_id` - (Required) The resource id of the resource access rule to be granted access.\r\n- `endpoint_tenant_id` - (Optional) The tenant id of the resource of the resource access rule to be granted access. Defaults to the current tenant id.\r\n\r\n---\r\n`timeouts` block supports the following:\r\n- `create` - (Defaults to 60 minutes) Used when creating the  Network Rules for this Storage Account.\r\n- `delete` - (Defaults to 60 minutes) Used when deleting the Network Rules for this Storage Account.\r\n- `read` - (Defaults to 5 minutes) Used when retrieving the Network Rules for this Storage Account.\r\n- `update` - (Defaults to 60 minutes) Used when updating the Network Rules for this Storage Account.\r\n"
              },
              "nfsv3_enabled": {
                "default": false,
                "description": "(Optional) Is NFSv3 protocol enabled? Changing this forces a new resource to be created. Defaults to `false`."
              },
              "private_endpoints": {
                "default": {},
                "description": "A map of private endpoints to create on the resource. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\n- `name` - (Optional) The name of the private endpoint. One will be generated if not set.\r\n- `role_assignments` - (Optional) A map of role assignments to create on the private endpoint. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time. See `var.role_assignments` for more information.\r\n- `lock` - (Optional) The lock level to apply to the private endpoint. Default is `None`. Possible values are `None`, `CanNotDelete`, and `ReadOnly`.\r\n- `tags` - (Optional) A mapping of tags to assign to the private endpoint.\r\n- `subnet_resource_id` - The resource ID of the subnet to deploy the private endpoint in.\r\n- `subresource_name` - The service name of the private endpoint.  Possible value are `blob`, 'dfs', 'file', `queue`, `table`, and `web`.\r\n- `private_dns_zone_group_name` - (Optional) The name of the private DNS zone group. One will be generated if not set.\r\n- `private_dns_zone_resource_ids` - (Optional) A set of resource IDs of private DNS zones to associate with the private endpoint. If not set, no zone groups will be created and the private endpoint will not be associated with any private DNS zones. DNS records must be managed external to this module.\r\n- `application_security_group_resource_ids` - (Optional) A map of resource IDs of application security groups to associate with the private endpoint. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n- `private_service_connection_name` - (Optional) The name of the private service connection. One will be generated if not set.\r\n- `network_interface_name` - (Optional) The name of the network interface. One will be generated if not set.\r\n- `location` - (Optional) The Azure location where the resources will be deployed. Defaults to the location of the resource group.\r\n- `resource_group_name` - (Optional) The resource group where the resources will be deployed. Defaults to the resource group of the resource.\r\n- `ip_configurations` - (Optional) A map of IP configurations to create on the private endpoint. If not specified the platform will create one. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n  - `name` - The name of the IP configuration.\r\n  - `private_ip_address` - The private IP address of the IP configuration.\r\n"
              },
              "private_endpoints_manage_dns_zone_group": {
                "default": true,
                "description": "Whether to manage private DNS zone groups with this module. If set to false, you must manage private DNS zone groups externally, e.g. using Azure Policy."
              },
              "public_network_access_enabled": {
                "default": false,
                "description": "(Optional) Whether the public network access is enabled? Defaults to `false`."
              },
              "queue_encryption_key_type": {
                "default": null,
                "description": "(Optional) The encryption type of the queue service. Possible values are `Service` and `Account`. Changing this forces a new resource to be created. Default value is `Service`."
              },
              "queue_properties": {
                "default": null,
                "description": "\r\n---\r\n`cors_rule` block supports the following:\r\n- `allowed_headers` - (Required) A list of headers that are allowed to be a part of the cross-origin request.\r\n- `allowed_methods` - (Required) A list of HTTP methods that are allowed to be executed by the origin. Valid options are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PUT` or `PATCH`.\r\n- `allowed_origins` - (Required) A list of origin domains that will be allowed by CORS.\r\n- `exposed_headers` - (Required) A list of response headers that are exposed to CORS clients.\r\n- `max_age_in_seconds` - (Required) The number of seconds the client should cache a preflight response.\r\n\r\n---\r\n`diagnostic_settings` block supports the following:\r\n- `name` - (Optional) The name of the diagnostic setting. Defaults to `null`.\r\n- `log_categories` - (Optional) A set of log categories to enable. Defaults to an empty set.\r\n- `log_groups` - (Optional) A set of log groups to enable. Defaults to `[\"allLogs\"]`.\r\n- `metric_categories` - (Optional) A set of metric categories to enable. Defaults to `[\"AllMetrics\"]`.\r\n- `log_analytics_destination_type` - (Optional) The destination type for log analytics. Defaults to `\"Dedicated\"`.\r\n- `workspace_resource_id` - (Optional) The resource ID of the Log Analytics workspace. Defaults to `null`.\r\n- `resource_id` - (Optional) The resource ID of the target resource for diagnostics. Defaults to `null`.\r\n- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the Event Hub authorization rule. Defaults to `null`.\r\n- `event_hub_name` - (Optional) The name of the Event Hub. Defaults to `null`.\r\n- `marketplace_partner_resource_id` - (Optional) The resource ID of the marketplace partner. Defaults to `null`.\r\n\r\n---\r\n`hour_metrics` block supports the following:\r\n- `enabled` - (Required) Indicates whether hour metrics are enabled for the Queue service.\r\n- `include_apis` - (Optional) Indicates whether metrics should generate summary statistics for called API operations.\r\n- `retention_policy_days` - (Optional) Specifies the number of days that logs will be retained.\r\n- `version` - (Required) The version of storage analytics to configure.\r\n\r\n---\r\n`logging` block supports the following:\r\n- `delete` - (Required) Indicates whether all delete requests should be logged.\r\n- `read` - (Required) Indicates whether all read requests should be logged.\r\n- `retention_policy_days` - (Optional) Specifies the number of days that logs will be retained.\r\n- `version` - (Required) The version of storage analytics to configure.\r\n- `write` - (Required) Indicates whether all write requests should be logged.\r\n\r\n---\r\n`minute_metrics` block supports the following:\r\n- `enabled` - (Required) Indicates whether minute metrics are enabled for the Queue service.\r\n- `include_apis` - (Optional) Indicates whether metrics should generate summary statistics for called API operations.\r\n- `retention_policy_days` - (Optional) Specifies the number of days that logs will be retained.\r\n- `version` - (Required) The version of storage analytics to configure.\r\n\r\n"
              },
              "queues": {
                "default": {},
                "description": " - `metadata` - (Optional) A mapping of MetaData which should be assigned to this Storage Queue.\r\n - `name` - (Required) The name of the Queue which should be created within the Storage Account. Must be unique within the storage account the queue is located. Changing this forces a new resource to be created.\r\n\r\nSupply role assignments in the same way as for `var.role_assignments`.\r\n\r\n ---\r\n `timeouts` block supports the following:\r\n - `create` - (Defaults to 30 minutes) Used when creating the Storage Queue.\r\n - `delete` - (Defaults to 30 minutes) Used when deleting the Storage Queue.\r\n - `read` - (Defaults to 5 minutes) Used when retrieving the Storage Queue.\r\n - `update` - (Defaults to 30 minutes) Used when updating the Storage Queue.\r\n"
              },
              "resource_group_name": {
                "description": "The resource group where the resources will be deployed."
              },
              "role_assignments": {
                "default": {},
                "description": "A map of role assignments to create on the resource. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\n- `role_definition_id_or_name` - The ID or name of the role definition to assign to the principal.\r\n- `principal_id` - The ID of the principal to assign the role to.\r\n- `description` - The description of the role assignment.\r\n- `skip_service_principal_aad_check` - If set to true, skips the Azure Active Directory check for the service principal in the tenant. Defaults to false.\r\n- `condition` - The condition which will be used to scope the role assignment.\r\n- `condition_version` - The version of the condition syntax. Valid values are '2.0'.\r\n\r\n> Note: only set `skip_service_principal_aad_check` to true if you are assigning a role to a service principal.\r\n"
              },
              "routing": {
                "default": null,
                "description": "- `choice` - (Optional) Specifies the kind of network routing opted by the user. Possible values are `InternetRouting` and `MicrosoftRouting`. Defaults to `MicrosoftRouting`.\r\n- `publish_internet_endpoints` - (Optional) Should internet routing storage endpoints be published? Defaults to `false`.\r\n- `publish_microsoft_endpoints` - (Optional) Should Microsoft routing storage endpoints be published? Defaults to `false`.\r\n"
              },
              "sas_policy": {
                "default": null,
                "description": "- `expiration_action` - (Optional) The SAS expiration action. The only possible value is `Log` at this moment. Defaults to `Log`.\r\n- `expiration_period` - (Required) The SAS expiration period in format of `DD.HH:MM:SS`.\r\n"
              },
              "sftp_enabled": {
                "default": false,
                "description": "(Optional) Boolean, enable SFTP for the storage account.  Defaults to `false`."
              },
              "share_properties": {
                "default": null,
                "description": "\r\n---\r\n`cors_rule` block supports the following:\r\n- `allowed_headers` - (Required) A list of headers that are allowed to be a part of the cross-origin request.\r\n- `allowed_methods` - (Required) A list of HTTP methods that are allowed to be executed by the origin. Valid options are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PUT` or `PATCH`.\r\n- `allowed_origins` - (Required) A list of origin domains that will be allowed by CORS.\r\n- `exposed_headers` - (Required) A list of response headers that are exposed to CORS clients.\r\n- `max_age_in_seconds` - (Required) The number of seconds the client should cache a preflight response.\r\n\r\n---\r\n`diagnostic_settings` block supports the following:\r\n- `name` - (Optional) The name of the diagnostic setting. Defaults to `null`.\r\n- `log_categories` - (Optional) A set of log categories to enable. Defaults to an empty set.\r\n- `log_groups` - (Optional) A set of log groups to enable. Defaults to `[\"allLogs\"]`.\r\n- `metric_categories` - (Optional) A set of metric categories to enable. Defaults to `[\"AllMetrics\"]`.\r\n- `log_analytics_destination_type` - (Optional) The destination type for log analytics. Defaults to `\"Dedicated\"`.\r\n- `workspace_resource_id` - (Optional) The resource ID of the Log Analytics workspace. Defaults to `null`.\r\n- `resource_id` - (Optional) The resource ID of the target resource for diagnostics. Defaults to `null`.\r\n- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the Event Hub authorization rule. Defaults to `null`.\r\n- `event_hub_name` - (Optional) The name of the Event Hub. Defaults to `null`.\r\n- `marketplace_partner_resource_id` - (Optional) The resource ID of the marketplace partner. Defaults to `null`.\r\n\r\n---\r\n`retention_policy` block supports the following:\r\n- `days` - (Optional) Specifies the number of days that the `azurerm_shares` should be retained, between `1` and `365` days. Defaults to `7`.\r\n\r\n---\r\n`smb` block supports the following:\r\n- `authentication_types` - (Optional) A set of SMB authentication methods. Possible values are `NTLMv2`, and `Kerberos`.\r\n- `channel_encryption_type` - (Optional) A set of SMB channel encryption. Possible values are `AES-128-CCM`, `AES-128-GCM`, and `AES-256-GCM`.\r\n- `kerberos_ticket_encryption_type` - (Optional) A set of Kerberos ticket encryption. Possible values are `RC4-HMAC`, and `AES-256`.\r\n- `multichannel_enabled` - (Optional) Indicates whether multichannel is enabled. Defaults to `false`. This is only supported on Premium storage accounts.\r\n- `versions` - (Optional) A set of SMB protocol versions. Possible values are `SMB2.1`, `SMB3.0`, and `SMB3.1.1`.\r\n"
              },
              "shared_access_key_enabled": {
                "default": false,
                "description": "(Optional) Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is `false`."
              },
              "shares": {
                "default": {},
                "description": " - `access_tier` - (Optional) The access tier of the File Share. Possible values are `Hot`, `Cool` and `TransactionOptimized`, `Premium`.\r\n - `enabled_protocol` - (Optional) The protocol used for the share. Possible values are `SMB` and `NFS`. The `SMB` indicates the share can be accessed by SMBv3.0, SMBv2.1 and REST. The `NFS` indicates the share can be accessed by NFSv4.1. Defaults to `SMB`. Changing this forces a new resource to be created.\r\n - `metadata` - (Optional) A mapping of MetaData for this File Share.\r\n - `name` - (Required) The name of the share. Must be unique within the storage account where the share is located. Changing this forces a new resource to be created.\r\n - `quota` - (Required) The maximum size of the share, in gigabytes. For Standard storage accounts, this must be `1`GB (or higher) and at most `5120` GB (`5` TB). For Premium FileStorage storage accounts, this must be greater than 100 GB and at most `102400` GB (`100` TB).\r\n\r\n ---\r\n `acl` block supports the following:\r\n - `id` - (Required) The ID which should be used for this Shared Identifier.\r\n\r\n ---\r\n `access_policy` block supports the following:\r\n - `expiry` - (Optional) The time at which this Access Policy should be valid until, in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format.\r\n - `permissions` - (Required) The permissions which should be associated with this Shared Identifier. Possible value is combination of `r` (read), `w` (write), `d` (delete), and `l` (list).\r\n - `start` - (Optional) The time at which this Access Policy should be valid from, in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format.\r\n\r\n ---\r\n `timeouts` block supports the following:\r\n - `create` - (Defaults to 30 minutes) Used when creating the Storage Share.\r\n - `delete` - (Defaults to 30 minutes) Used when deleting the Storage Share.\r\n - `read` - (Defaults to 5 minutes) Used when retrieving the Storage Share.\r\n - `update` - (Defaults to 30 minutes) Used when updating the Storage Share.\r\n\r\nSupply role assignments in the same way as for `var.role_assignments`.\r\n\r\n"
              },
              "static_website": {
                "default": null,
                "description": "- `error_404_document` - (Optional) The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.\r\n- `index_document` - (Optional) The webpage that Azure Storage serves for requests to the root of a website or any subfolder. For example, index.html. The value is case-sensitive.\r\n"
              },
              "storage_data_lake_gen2_filesystem": {
                "default": null,
                "description": "- `default_encryption_scope` - (Optional) The default encryption scope to use for this filesystem. Changing this forces a new resource to be created.\r\n- `group` - (Optional) Specifies the Object ID of the Azure Active Directory Group to make the owning group of the root path (i.e. `/`). Possible values also include `$superuser`.\r\n- `name` - (Required) The name of the Data Lake Gen2 File System which should be created within the Storage Account. Must be unique within the storage account the queue is located. Changing this forces a new resource to be created.\r\n- `owner` - (Optional) Specifies the Object ID of the Azure Active Directory User to make the owning user of the root path (i.e. `/`). Possible values also include `$superuser`.\r\n- `properties` - (Optional) A mapping of Key to Base64-Encoded Values which should be assigned to this Data Lake Gen2 File System.\r\n---\r\n`ace` block supports the following:\r\n- `id` - (Optional) Specifies the Object ID of the Azure Active Directory User or Group that the entry relates to. Only valid for `user` or `group` entries.\r\n- `permissions` - (Required) Specifies the permissions for the entry in `rwx` form. For example, `rwx` gives full permissions but `r--` only gives read permissions.\r\n- `scope` - (Optional) Specifies whether the ACE represents an `access` entry or a `default` entry. Default value is `access`.\r\n- `type` - (Required) Specifies the type of entry. Can be `user`, `group`, `mask` or `other`.\r\n\r\n---\r\n`timeouts` block supports the following:\r\n- `create` - (Defaults to 30 minutes) Used when creating the Data Lake Gen2 File System.\r\n- `delete` - (Defaults to 30 minutes) Used when deleting the Data Lake Gen2 File System.\r\n- `read` - (Defaults to 5 minutes) Used when retrieving the Data Lake Gen2 File System.\r\n- `update` - (Defaults to 30 minutes) Used when updating the Data Lake Gen2 File System.\r\n"
              },
              "storage_management_policy_rule": {
                "default": {},
                "description": "- `enabled` - (Required) Boolean to specify whether the rule is enabled.\r\n- `name` - (Required) The name of the rule. Rule name is case-sensitive. It must be unique within a policy.\r\n\r\n---\r\n`actions` block supports the following:\r\n\r\n---\r\n`base_blob` block supports the following:\r\n- `auto_tier_to_hot_from_cool_enabled` - (Optional) Whether a blob should automatically be tiered from cool back to hot if it's accessed again after being tiered to cool. Defaults to `false`.\r\n- `delete_after_days_since_creation_greater_than` - (Optional) The age in days after creation to delete the blob. Must be between `0` and `99999`. Defaults to `-1`.\r\n- `delete_after_days_since_last_access_time_greater_than` - (Optional) The age in days after last access time to delete the blob. Must be between `0` and `99999`. Defaults to `-1`.\r\n- `delete_after_days_since_modification_greater_than` - (Optional) The age in days after last modification to delete the blob. Must be between 0 and 99999. Defaults to `-1`.\r\n- `tier_to_archive_after_days_since_creation_greater_than` - (Optional) The age in days after creation to archive storage. Supports blob currently at Hot or Cool tier. Must be between `0` and`99999`. Defaults to `-1`.\r\n- `tier_to_archive_after_days_since_last_access_time_greater_than` - (Optional) The age in days after last access time to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between `0` and`99999`. Defaults to `-1`.\r\n- `tier_to_archive_after_days_since_last_tier_change_greater_than` - (Optional) The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to `-1`.\r\n- `tier_to_archive_after_days_since_modification_greater_than` - (Optional) The age in days after last modification to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and 99999. Defaults to `-1`.\r\n- `tier_to_cold_after_days_since_creation_greater_than` - (Optional) The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.\r\n- `tier_to_cold_after_days_since_last_access_time_greater_than` - (Optional) The age in days after last access time to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.\r\n- `tier_to_cold_after_days_since_modification_greater_than` - (Optional) The age in days after last modification to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to `-1`.\r\n- `tier_to_cool_after_days_since_creation_greater_than` - (Optional) The age in days after creation to cool storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.\r\n- `tier_to_cool_after_days_since_last_access_time_greater_than` - (Optional) The age in days after last access time to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.\r\n- `tier_to_cool_after_days_since_modification_greater_than` - (Optional) The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to `-1`.\r\n\r\n---\r\n`snapshot` block supports the following:\r\n- `change_tier_to_archive_after_days_since_creation` - (Optional) The age in days after creation to tier blob snapshot to archive storage. Must be between 0 and 99999. Defaults to `-1`.\r\n- `change_tier_to_cool_after_days_since_creation` - (Optional) The age in days after creation to tier blob snapshot to cool storage. Must be between 0 and 99999. Defaults to `-1`.\r\n- `delete_after_days_since_creation_greater_than` - (Optional) The age in days after creation to delete the blob snapshot. Must be between 0 and 99999. Defaults to `-1`.\r\n- `tier_to_archive_after_days_since_last_tier_change_greater_than` - (Optional) The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to `-1`.\r\n- `tier_to_cold_after_days_since_creation_greater_than` - (Optional) The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.\r\n\r\n---\r\n`version` block supports the following:\r\n- `change_tier_to_archive_after_days_since_creation` - (Optional) The age in days after creation to tier blob version to archive storage. Must be between 0 and 99999. Defaults to `-1`.\r\n- `change_tier_to_cool_after_days_since_creation` - (Optional) The age in days creation create to tier blob version to cool storage. Must be between 0 and 99999. Defaults to `-1`.\r\n- `delete_after_days_since_creation` - (Optional) The age in days after creation to delete the blob version. Must be between 0 and 99999. Defaults to `-1`.\r\n- `tier_to_archive_after_days_since_last_tier_change_greater_than` - (Optional) The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to `-1`.\r\n- `tier_to_cold_after_days_since_creation_greater_than` - (Optional) The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.\r\n\r\n---\r\n`filters` block supports the following:\r\n- `blob_types` - (Required) An array of predefined values. Valid options are `blockBlob` and `appendBlob`.\r\n- `prefix_match` - (Optional) An array of strings for prefixes to be matched.\r\n\r\n---\r\n`match_blob_index_tag` block supports the following:\r\n- `name` - (Required) The filter tag name used for tag based filtering for blob objects.\r\n- `operation` - (Optional) The comparison operator which is used for object comparison and filtering. Possible value is `==`. Defaults to `==`.\r\n- `value` - (Required) The filter tag value used for tag based filtering for blob objects.\r\n"
              },
              "storage_management_policy_timeouts": {
                "default": null,
                "description": "- `create` - (Defaults to 30 minutes) Used when creating the Storage Account Management Policy.\r\n- `delete` - (Defaults to 30 minutes) Used when deleting the Storage Account Management Policy.\r\n- `read` - (Defaults to 5 minutes) Used when retrieving the Storage Account Management Policy.\r\n- `update` - (Defaults to 30 minutes) Used when updating the Storage Account Management Policy.\r\n"
              },
              "table_encryption_key_type": {
                "default": null,
                "description": "(Optional) The encryption type of the table service. Possible values are `Service` and `Account`. Changing this forces a new resource to be created. Default value is `Service`."
              },
              "tables": {
                "default": {},
                "description": " - `name` - (Required) The name of the storage table. Only Alphanumeric characters allowed, starting with a letter. Must be unique within the storage account the table is located. Changing this forces a new resource to be created.\r\n\r\n ---\r\n `acl` block supports the following:\r\n - `id` - (Required) The ID which should be used for this Shared Identifier.\r\n\r\n ---\r\n `access_policy` block supports the following:\r\n - `expiry` - (Required) The ISO8061 UTC time at which this Access Policy should be valid until.\r\n - `permissions` - (Required) The permissions which should associated with this Shared Identifier.\r\n - `start` - (Required) The ISO8061 UTC time at which this Access Policy should be valid from.\r\n\r\n ---\r\n `timeouts` block supports the following:\r\n - `create` - (Defaults to 30 minutes) Used when creating the Storage Table.\r\n - `delete` - (Defaults to 30 minutes) Used when deleting the Storage Table.\r\n - `read` - (Defaults to 5 minutes) Used when retrieving the Storage Table.\r\n - `update` - (Defaults to 30 minutes) Used when updating the Storage Table.\r\n\r\nSupply role assignments in the same way as for `var.role_assignments`.\r\n\r\n"
              },
              "tags": {
                "default": null,
                "description": "Custom tags to apply to the resource."
              },
              "timeouts": {
                "default": null,
                "description": "- `create` - (Defaults to 60 minutes) Used when creating the Storage Account.\r\n- `delete` - (Defaults to 60 minutes) Used when deleting the Storage Account.\r\n- `read` - (Defaults to 5 minutes) Used when retrieving the Storage Account.\r\n- `update` - (Defaults to 60 minutes) Used when updating the Storage Account.\r\n"
              }
            }
          },
          "version_constraint": "0.5.0",
          "depends_on": [
            "module.lz_vending"
          ]
        },
        "keyvault": {
          "source": "Azure/avm-res-keyvault-vault/azurerm",
          "expressions": {
            "enable_telemetry": {
              "references": [
                "local.enable_telemetry"
              ]
            },
            "location": {
              "references": [
                "var.location"
              ]
            },
            "name": {
              "references": [
                "each.value.name",
                "each.value"
              ]
            },
            "public_network_access_enabled": {
              "constant_value": true
            },
            "purge_protection_enabled": {
              "constant_value": true
            },
            "resource_group_name": {
              "references": [
                "local.resource_groups[\"akvrg\"].name",
                "local.resource_groups[\"akvrg\"]",
                "local.resource_groups"
              ]
            },
            "sku_name": {
              "constant_value": "standard"
            },
            "tenant_id": {
              "references": [
                "data.azurerm_client_config.this.tenant_id",
                "data.azurerm_client_config.this"
              ]
            }
          },
          "for_each_expression": {
            "references": [
              "local.key_vaults"
            ]
          },
          "module": {
            "outputs": {
              "keys_resource_ids": {
                "expression": {
                  "references": [
                    "module.keys"
                  ]
                },
                "description": "A map of key keys to resource ids."
              },
              "private_endpoints": {
                "expression": {
                  "references": [
                    "azurerm_private_endpoint.this"
                  ]
                },
                "description": "A map of private endpoints. The map key is the supplied input to var.private_endpoints. The map value is the entire azurerm_private_endpoint resource."
              },
              "resource_id": {
                "expression": {
                  "references": [
                    "azurerm_key_vault.this.id",
                    "azurerm_key_vault.this"
                  ]
                },
                "description": "The Azure resource id of the key vault."
              },
              "secrets_resource_ids": {
                "expression": {
                  "references": [
                    "module.secrets"
                  ]
                },
                "description": "A map of secret keys to resource ids."
              },
              "uri": {
                "expression": {
                  "references": [
                    "azurerm_key_vault.this.vault_uri",
                    "azurerm_key_vault.this"
                  ]
                },
                "description": "The URI of the vault for performing operations on keys and secrets"
              }
            },
            "resources": [
              {
                "address": "azurerm_key_vault.this",
                "mode": "managed",
                "type": "azurerm_key_vault",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enable_rbac_authorization": {
                    "references": [
                      "var.legacy_access_policies_enabled"
                    ]
                  },
                  "enabled_for_deployment": {
                    "references": [
                      "var.enabled_for_deployment"
                    ]
                  },
                  "enabled_for_disk_encryption": {
                    "references": [
                      "var.enabled_for_disk_encryption"
                    ]
                  },
                  "enabled_for_template_deployment": {
                    "references": [
                      "var.enabled_for_template_deployment"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "public_network_access_enabled": {
                    "references": [
                      "var.public_network_access_enabled"
                    ]
                  },
                  "purge_protection_enabled": {
                    "references": [
                      "var.purge_protection_enabled"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_group_name"
                    ]
                  },
                  "sku_name": {
                    "references": [
                      "var.sku_name"
                    ]
                  },
                  "soft_delete_retention_days": {
                    "references": [
                      "var.soft_delete_retention_days"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  },
                  "tenant_id": {
                    "references": [
                      "var.tenant_id"
                    ]
                  }
                },
                "schema_version": 2
              },
              {
                "address": "azurerm_key_vault_access_policy.this",
                "mode": "managed",
                "type": "azurerm_key_vault_access_policy",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "application_id": {
                    "references": [
                      "each.value.application_id",
                      "each.value"
                    ]
                  },
                  "certificate_permissions": {
                    "references": [
                      "each.value.certificate_permissions",
                      "each.value"
                    ]
                  },
                  "key_permissions": {
                    "references": [
                      "each.value.key_permissions",
                      "each.value"
                    ]
                  },
                  "key_vault_id": {
                    "references": [
                      "azurerm_key_vault.this.id",
                      "azurerm_key_vault.this"
                    ]
                  },
                  "object_id": {
                    "references": [
                      "each.value.object_id",
                      "each.value"
                    ]
                  },
                  "secret_permissions": {
                    "references": [
                      "each.value.secret_permissions",
                      "each.value"
                    ]
                  },
                  "storage_permissions": {
                    "references": [
                      "each.value.storage_permissions",
                      "each.value"
                    ]
                  },
                  "tenant_id": {
                    "references": [
                      "var.tenant_id"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.legacy_access_policies_enabled",
                    "var.legacy_access_policies"
                  ]
                }
              },
              {
                "address": "azurerm_key_vault_certificate_contacts.this",
                "mode": "managed",
                "type": "azurerm_key_vault_certificate_contacts",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "key_vault_id": {
                    "references": [
                      "azurerm_key_vault.this.id",
                      "azurerm_key_vault.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.contacts"
                  ]
                },
                "depends_on": [
                  "time_sleep.wait_for_rbac_before_contact_operations"
                ]
              },
              {
                "address": "azurerm_management_lock.this",
                "mode": "managed",
                "type": "azurerm_management_lock",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "lock_level": {
                    "references": [
                      "var.lock.kind",
                      "var.lock"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.lock.name",
                      "var.lock",
                      "var.name"
                    ]
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.this.id",
                      "azurerm_key_vault.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.lock"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.this",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "each.value.event_hub_authorization_rule_resource_id",
                      "each.value"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "each.value.event_hub_name",
                      "each.value"
                    ]
                  },
                  "log_analytics_destination_type": {
                    "references": [
                      "each.value.log_analytics_destination_type",
                      "each.value"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "each.value.workspace_resource_id",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value",
                      "each.value.name",
                      "each.value",
                      "var.name"
                    ]
                  },
                  "partner_solution_id": {
                    "references": [
                      "each.value.marketplace_partner_resource_id",
                      "each.value"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "each.value.storage_account_resource_id",
                      "each.value"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_key_vault.this.id",
                      "azurerm_key_vault.this"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.diagnostic_settings"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.this",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "custom_network_interface_name": {
                    "references": [
                      "each.value.network_interface_name",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "each.value.location",
                      "each.value",
                      "each.value.location",
                      "each.value",
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value",
                      "each.value.name",
                      "each.value",
                      "var.name"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.private_service_connection_name",
                          "each.value",
                          "each.value.private_service_connection_name",
                          "each.value",
                          "var.name"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_key_vault.this.id",
                          "azurerm_key_vault.this"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "vault"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.resource_group_name",
                      "each.value",
                      "each.value.resource_group_name",
                      "each.value",
                      "var.resource_group_name"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.subnet_resource_id",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tags",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.private_endpoints",
                    "var.private_endpoints_manage_dns_zone_group"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.this_unmanaged_dns_zone_groups",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "this_unmanaged_dns_zone_groups",
                "provider_config_key": "azurerm",
                "expressions": {
                  "custom_network_interface_name": {
                    "references": [
                      "each.value.network_interface_name",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "each.value.location",
                      "each.value",
                      "each.value.location",
                      "each.value",
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value",
                      "each.value.name",
                      "each.value",
                      "var.name"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.private_service_connection_name",
                          "each.value",
                          "each.value.private_service_connection_name",
                          "each.value",
                          "var.name"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_key_vault.this.id",
                          "azurerm_key_vault.this"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "vault"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.resource_group_name",
                      "each.value",
                      "each.value.resource_group_name",
                      "each.value",
                      "var.resource_group_name"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.subnet_resource_id",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tags",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.private_endpoints",
                    "var.private_endpoints_manage_dns_zone_group"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint_application_security_group_association.this",
                "mode": "managed",
                "type": "azurerm_private_endpoint_application_security_group_association",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "application_security_group_id": {
                    "references": [
                      "each.value.asg_resource_id",
                      "each.value"
                    ]
                  },
                  "private_endpoint_id": {
                    "references": [
                      "azurerm_private_endpoint.this",
                      "each.value.pe_key",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.private_endpoint_application_security_group_associations"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.this",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "this",
                "provider_config_key": "azurerm",
                "expressions": {
                  "condition": {
                    "references": [
                      "each.value.condition",
                      "each.value"
                    ]
                  },
                  "condition_version": {
                    "references": [
                      "each.value.condition_version",
                      "each.value"
                    ]
                  },
                  "delegated_managed_identity_resource_id": {
                    "references": [
                      "each.value.delegated_managed_identity_resource_id",
                      "each.value"
                    ]
                  },
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "principal_type": {
                    "references": [
                      "each.value.principal_type",
                      "each.value"
                    ]
                  },
                  "role_definition_id": {
                    "references": [
                      "each.value.role_definition_id_or_name",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_definition_id_or_name",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "references": [
                      "each.value.role_definition_id_or_name",
                      "each.value",
                      "local.role_definition_resource_substring",
                      "each.value.role_definition_id_or_name",
                      "each.value"
                    ]
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.this.id",
                      "azurerm_key_vault.this"
                    ]
                  },
                  "skip_service_principal_aad_check": {
                    "references": [
                      "each.value.skip_service_principal_aad_check",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.role_assignments"
                  ]
                }
              },
              {
                "address": "modtm_telemetry.telemetry",
                "mode": "managed",
                "type": "modtm_telemetry",
                "name": "telemetry",
                "provider_config_key": "module.keyvault:modtm",
                "expressions": {
                  "tags": {
                    "references": [
                      "data.azurerm_client_config.telemetry",
                      "data.azurerm_client_config.telemetry",
                      "data.modtm_module_source.telemetry",
                      "data.modtm_module_source.telemetry",
                      "random_uuid.telemetry"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_telemetry"
                  ]
                }
              },
              {
                "address": "random_uuid.telemetry",
                "mode": "managed",
                "type": "random_uuid",
                "name": "telemetry",
                "provider_config_key": "module.keyvault:random",
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_telemetry"
                  ]
                }
              },
              {
                "address": "time_sleep.wait_for_rbac_before_contact_operations",
                "mode": "managed",
                "type": "time_sleep",
                "name": "wait_for_rbac_before_contact_operations",
                "provider_config_key": "module.keyvault:time",
                "expressions": {
                  "create_duration": {
                    "references": [
                      "var.wait_for_rbac_before_contact_operations.create",
                      "var.wait_for_rbac_before_contact_operations"
                    ]
                  },
                  "destroy_duration": {
                    "references": [
                      "var.wait_for_rbac_before_contact_operations.destroy",
                      "var.wait_for_rbac_before_contact_operations"
                    ]
                  },
                  "triggers": {
                    "references": [
                      "var.contacts"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.contacts"
                  ]
                }
              },
              {
                "address": "time_sleep.wait_for_rbac_before_key_operations",
                "mode": "managed",
                "type": "time_sleep",
                "name": "wait_for_rbac_before_key_operations",
                "provider_config_key": "module.keyvault:time",
                "expressions": {
                  "create_duration": {
                    "references": [
                      "var.wait_for_rbac_before_key_operations.create",
                      "var.wait_for_rbac_before_key_operations"
                    ]
                  },
                  "destroy_duration": {
                    "references": [
                      "var.wait_for_rbac_before_key_operations.destroy",
                      "var.wait_for_rbac_before_key_operations"
                    ]
                  },
                  "triggers": {
                    "references": [
                      "var.role_assignments"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.role_assignments",
                    "var.keys"
                  ]
                },
                "depends_on": [
                  "azurerm_role_assignment.this"
                ]
              },
              {
                "address": "time_sleep.wait_for_rbac_before_secret_operations",
                "mode": "managed",
                "type": "time_sleep",
                "name": "wait_for_rbac_before_secret_operations",
                "provider_config_key": "module.keyvault:time",
                "expressions": {
                  "create_duration": {
                    "references": [
                      "var.wait_for_rbac_before_secret_operations.create",
                      "var.wait_for_rbac_before_secret_operations"
                    ]
                  },
                  "destroy_duration": {
                    "references": [
                      "var.wait_for_rbac_before_secret_operations.destroy",
                      "var.wait_for_rbac_before_secret_operations"
                    ]
                  },
                  "triggers": {
                    "references": [
                      "var.role_assignments"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.role_assignments",
                    "var.secrets"
                  ]
                },
                "depends_on": [
                  "azurerm_role_assignment.this"
                ]
              },
              {
                "address": "data.azurerm_client_config.telemetry",
                "mode": "data",
                "type": "azurerm_client_config",
                "name": "telemetry",
                "provider_config_key": "azurerm",
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_telemetry"
                  ]
                }
              },
              {
                "address": "data.modtm_module_source.telemetry",
                "mode": "data",
                "type": "modtm_module_source",
                "name": "telemetry",
                "provider_config_key": "module.keyvault:modtm",
                "expressions": {
                  "module_path": {
                    "references": [
                      "path.module"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_telemetry"
                  ]
                }
              }
            ],
            "module_calls": {
              "keys": {
                "source": "./modules/key",
                "expressions": {
                  "curve": {
                    "references": [
                      "each.value.curve",
                      "each.value"
                    ]
                  },
                  "expiration_date": {
                    "references": [
                      "each.value.expiration_date",
                      "each.value"
                    ]
                  },
                  "key_vault_resource_id": {
                    "references": [
                      "azurerm_key_vault.this.id",
                      "azurerm_key_vault.this"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "not_before_date": {
                    "references": [
                      "each.value.not_before_date",
                      "each.value"
                    ]
                  },
                  "opts": {
                    "references": [
                      "each.value.key_opts",
                      "each.value"
                    ]
                  },
                  "role_assignments": {
                    "references": [
                      "each.value.role_assignments",
                      "each.value"
                    ]
                  },
                  "rotation_policy": {
                    "references": [
                      "each.value.rotation_policy",
                      "each.value"
                    ]
                  },
                  "size": {
                    "references": [
                      "each.value.key_size",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tags",
                      "each.value"
                    ]
                  },
                  "type": {
                    "references": [
                      "each.value.key_type",
                      "each.value"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "var.keys"
                  ]
                },
                "module": {
                  "outputs": {
                    "id": {
                      "expression": {
                        "references": [
                          "azurerm_key_vault_key.this.id",
                          "azurerm_key_vault_key.this"
                        ]
                      },
                      "description": "The Key Vault Key ID"
                    },
                    "resource_id": {
                      "expression": {
                        "references": [
                          "azurerm_key_vault_key.this.resource_id",
                          "azurerm_key_vault_key.this"
                        ]
                      },
                      "description": "The Azure resource id of the secret."
                    },
                    "resource_versionless_id": {
                      "expression": {
                        "references": [
                          "azurerm_key_vault_key.this.resource_versionless_id",
                          "azurerm_key_vault_key.this"
                        ]
                      },
                      "description": "The versionless Azure resource id of the secret."
                    },
                    "versionless_id": {
                      "expression": {
                        "references": [
                          "azurerm_key_vault_key.this.versionless_id",
                          "azurerm_key_vault_key.this"
                        ]
                      },
                      "description": "The Base ID of the Key Vault Key"
                    }
                  },
                  "resources": [
                    {
                      "address": "azurerm_key_vault_key.this",
                      "mode": "managed",
                      "type": "azurerm_key_vault_key",
                      "name": "this",
                      "provider_config_key": "azurerm",
                      "expressions": {
                        "curve": {
                          "references": [
                            "var.curve"
                          ]
                        },
                        "expiration_date": {
                          "references": [
                            "var.expiration_date"
                          ]
                        },
                        "key_opts": {
                          "references": [
                            "var.opts"
                          ]
                        },
                        "key_size": {
                          "references": [
                            "var.size"
                          ]
                        },
                        "key_type": {
                          "references": [
                            "var.type"
                          ]
                        },
                        "key_vault_id": {
                          "references": [
                            "var.key_vault_resource_id"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.name"
                          ]
                        },
                        "not_before_date": {
                          "references": [
                            "var.not_before_date"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "azurerm_role_assignment.this",
                      "mode": "managed",
                      "type": "azurerm_role_assignment",
                      "name": "this",
                      "provider_config_key": "azurerm",
                      "expressions": {
                        "condition": {
                          "references": [
                            "each.value.condition",
                            "each.value"
                          ]
                        },
                        "condition_version": {
                          "references": [
                            "each.value.condition_version",
                            "each.value"
                          ]
                        },
                        "delegated_managed_identity_resource_id": {
                          "references": [
                            "each.value.delegated_managed_identity_resource_id",
                            "each.value"
                          ]
                        },
                        "principal_id": {
                          "references": [
                            "each.value.principal_id",
                            "each.value"
                          ]
                        },
                        "principal_type": {
                          "references": [
                            "each.value.principal_type",
                            "each.value"
                          ]
                        },
                        "role_definition_id": {
                          "references": [
                            "each.value.role_definition_id_or_name",
                            "each.value",
                            "local.role_definition_resource_substring",
                            "each.value.role_definition_id_or_name",
                            "each.value"
                          ]
                        },
                        "role_definition_name": {
                          "references": [
                            "each.value.role_definition_id_or_name",
                            "each.value",
                            "local.role_definition_resource_substring",
                            "each.value.role_definition_id_or_name",
                            "each.value"
                          ]
                        },
                        "scope": {
                          "references": [
                            "azurerm_key_vault_key.this.resource_versionless_id",
                            "azurerm_key_vault_key.this"
                          ]
                        },
                        "skip_service_principal_aad_check": {
                          "references": [
                            "each.value.skip_service_principal_aad_check",
                            "each.value"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "for_each_expression": {
                        "references": [
                          "var.role_assignments"
                        ]
                      }
                    }
                  ],
                  "variables": {
                    "curve": {
                      "default": null,
                      "description": "The curve of the EC key. Required if `type` is `EC`. Possible values are `P-256`, `P-256K`, `P-384`, and `P-521`. This field will be required in a future release if key_type is EC or EC-HSM. The API will default to `P-256` if nothing is specified."
                    },
                    "expiration_date": {
                      "default": null,
                      "description": "The expiration date of the key as a UTC datetime (Y-m-d'T'H:M:S'Z')."
                    },
                    "key_vault_resource_id": {
                      "description": "The ID of the Key Vault where the key should be created."
                    },
                    "name": {
                      "description": "The name of the key."
                    },
                    "not_before_date": {
                      "default": null,
                      "description": "key not usable before as a UTC datetime (Y-m-d'T'H:M:S'Z')."
                    },
                    "opts": {
                      "default": [],
                      "description": "The options to apply to the key. Possible values are `decrypt`, `encrypt`, `sign`, `wrapKey`, `unwrapKey`, and `verify`."
                    },
                    "role_assignments": {
                      "default": {},
                      "description": "A map of role assignments to create on the key. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\n- `role_definition_id_or_name` - The ID or name of the role definition to assign to the principal.\r\n- `principal_id` - The ID of the principal to assign the role to.\r\n- `description` - The description of the role assignment.\r\n- `skip_service_principal_aad_check` - If set to true, skips the Azure Active Directory check for the service principal in the tenant. Defaults to false.\r\n- `condition` - The condition which will be used to scope the role assignment.\r\n- `condition_version` - The version of the condition syntax. If you are using a condition, valid values are '2.0'.\r\n\r\n> Note: only set `skip_service_principal_aad_check` to true if you are assigning a role to a service principal.\r\n"
                    },
                    "rotation_policy": {
                      "default": null,
                      "description": "The rotation policy of the key:\r\n\r\n- `automatic` - The automatic rotation policy of the key.\r\n  - `time_after_creation` - The time after creation of the key before it is automatically rotated as an ISO 8601 duration.\r\n  - `time_before_expiry` - The time before expiry of the key before it is automatically rotated as an ISO 8601 duration.\r\n- `expire_after` - The time after which the key expires.\r\n- `notify_before_expiry` - The time before expiry of the key when notification emails will be sent as an ISO 8601 duration.\r\n"
                    },
                    "size": {
                      "default": null,
                      "description": "The size of the RSA key. Required if `type` is `RSA` or `RSA-HSM`."
                    },
                    "tags": {
                      "default": null,
                      "description": "The tags to assign to the key."
                    },
                    "type": {
                      "description": "The type of the key. Possible values are `EC` and `RSA`."
                    }
                  }
                },
                "depends_on": [
                  "azurerm_private_endpoint.this",
                  "time_sleep.wait_for_rbac_before_key_operations"
                ]
              },
              "secrets": {
                "source": "./modules/secret",
                "expressions": {
                  "content_type": {
                    "references": [
                      "each.value.content_type",
                      "each.value"
                    ]
                  },
                  "expiration_date": {
                    "references": [
                      "each.value.expiration_date",
                      "each.value"
                    ]
                  },
                  "key_vault_resource_id": {
                    "references": [
                      "azurerm_key_vault.this.id",
                      "azurerm_key_vault.this"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "not_before_date": {
                    "references": [
                      "each.value.not_before_date",
                      "each.value"
                    ]
                  },
                  "role_assignments": {
                    "references": [
                      "each.value.role_assignments",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tags",
                      "each.value"
                    ]
                  },
                  "value": {
                    "references": [
                      "var.secrets_value",
                      "each.key"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "var.secrets"
                  ]
                },
                "module": {
                  "outputs": {
                    "id": {
                      "expression": {
                        "references": [
                          "azurerm_key_vault_secret.this.id",
                          "azurerm_key_vault_secret.this"
                        ]
                      },
                      "description": "The Key Vault Secret ID"
                    },
                    "resource_id": {
                      "expression": {
                        "references": [
                          "azurerm_key_vault_secret.this.resource_id",
                          "azurerm_key_vault_secret.this"
                        ]
                      },
                      "description": "The Azure resource id of the secret."
                    },
                    "resource_versionless_id": {
                      "expression": {
                        "references": [
                          "azurerm_key_vault_secret.this.resource_versionless_id",
                          "azurerm_key_vault_secret.this"
                        ]
                      },
                      "description": "The versionless Azure resource id of the secret."
                    },
                    "versionless_id": {
                      "expression": {
                        "references": [
                          "azurerm_key_vault_secret.this.versionless_id",
                          "azurerm_key_vault_secret.this"
                        ]
                      },
                      "description": "The Base ID of the Key Vault Secret"
                    }
                  },
                  "resources": [
                    {
                      "address": "azurerm_key_vault_secret.this",
                      "mode": "managed",
                      "type": "azurerm_key_vault_secret",
                      "name": "this",
                      "provider_config_key": "azurerm",
                      "expressions": {
                        "content_type": {
                          "references": [
                            "var.content_type"
                          ]
                        },
                        "expiration_date": {
                          "references": [
                            "var.expiration_date"
                          ]
                        },
                        "key_vault_id": {
                          "references": [
                            "var.key_vault_resource_id"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.name"
                          ]
                        },
                        "not_before_date": {
                          "references": [
                            "var.not_before_date"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "value": {
                          "references": [
                            "var.value"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "azurerm_role_assignment.this",
                      "mode": "managed",
                      "type": "azurerm_role_assignment",
                      "name": "this",
                      "provider_config_key": "azurerm",
                      "expressions": {
                        "condition": {
                          "references": [
                            "each.value.condition",
                            "each.value"
                          ]
                        },
                        "condition_version": {
                          "references": [
                            "each.value.condition_version",
                            "each.value"
                          ]
                        },
                        "delegated_managed_identity_resource_id": {
                          "references": [
                            "each.value.delegated_managed_identity_resource_id",
                            "each.value"
                          ]
                        },
                        "principal_id": {
                          "references": [
                            "each.value.principal_id",
                            "each.value"
                          ]
                        },
                        "principal_type": {
                          "references": [
                            "each.value.principal_type",
                            "each.value"
                          ]
                        },
                        "role_definition_id": {
                          "references": [
                            "each.value.role_definition_id_or_name",
                            "each.value",
                            "local.role_definition_resource_substring",
                            "each.value.role_definition_id_or_name",
                            "each.value"
                          ]
                        },
                        "role_definition_name": {
                          "references": [
                            "each.value.role_definition_id_or_name",
                            "each.value",
                            "local.role_definition_resource_substring",
                            "each.value.role_definition_id_or_name",
                            "each.value"
                          ]
                        },
                        "scope": {
                          "references": [
                            "azurerm_key_vault_secret.this.resource_versionless_id",
                            "azurerm_key_vault_secret.this"
                          ]
                        },
                        "skip_service_principal_aad_check": {
                          "references": [
                            "each.value.skip_service_principal_aad_check",
                            "each.value"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "for_each_expression": {
                        "references": [
                          "var.role_assignments"
                        ]
                      }
                    }
                  ],
                  "variables": {
                    "content_type": {
                      "default": null,
                      "description": "The content type of the secret."
                    },
                    "expiration_date": {
                      "default": null,
                      "description": "The expiration date of the secret as a UTC datetime (Y-m-d'T'H:M:S'Z')."
                    },
                    "key_vault_resource_id": {
                      "description": "The ID of the Key Vault where the secret should be created."
                    },
                    "name": {
                      "description": "The name of the secret."
                    },
                    "not_before_date": {
                      "default": null,
                      "description": "Secret not usable before as a UTC datetime (Y-m-d'T'H:M:S'Z')."
                    },
                    "role_assignments": {
                      "default": {},
                      "description": "A map of role assignments to create on the secret. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\n- `role_definition_id_or_name` - The ID or name of the role definition to assign to the principal.\r\n- `principal_id` - The ID of the principal to assign the role to.\r\n- `description` - The description of the role assignment.\r\n- `skip_service_principal_aad_check` - If set to true, skips the Azure Active Directory check for the service principal in the tenant. Defaults to false.\r\n- `condition` - The condition which will be used to scope the role assignment.\r\n- `condition_version` - The version of the condition syntax. If you are using a condition, valid values are '2.0'.\r\n\r\n> Note: only set `skip_service_principal_aad_check` to true if you are assigning a role to a service principal.\r\n"
                    },
                    "tags": {
                      "default": null,
                      "description": "The tags to assign to the secret."
                    },
                    "value": {
                      "description": "The value for the secret.",
                      "sensitive": true
                    }
                  }
                },
                "depends_on": [
                  "azurerm_private_endpoint.this",
                  "time_sleep.wait_for_rbac_before_secret_operations"
                ]
              }
            },
            "variables": {
              "contacts": {
                "default": {},
                "description": "A map of contacts for the Key Vault. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time."
              },
              "diagnostic_settings": {
                "default": {},
                "description": "A map of diagnostic settings to create on the Key Vault. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\n- `name` - (Optional) The name of the diagnostic setting. One will be generated if not set, however this will not be unique if you want to create multiple diagnostic setting resources.\r\n- `log_categories` - (Optional) A set of log categories to send to the log analytics workspace. Defaults to `[]`.\r\n- `log_groups` - (Optional) A set of log groups to send to the log analytics workspace. Defaults to `[\"allLogs\"]`.\r\n- `metric_categories` - (Optional) A set of metric categories to send to the log analytics workspace. Defaults to `[\"AllMetrics\"]`.\r\n- `log_analytics_destination_type` - (Optional) The destination type for the diagnostic setting. Possible values are `Dedicated` and `AzureDiagnostics`. Defaults to `Dedicated`.\r\n- `workspace_resource_id` - (Optional) The resource ID of the log analytics workspace to send logs and metrics to.\r\n- `storage_account_resource_id` - (Optional) The resource ID of the storage account to send logs and metrics to.\r\n- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the event hub authorization rule to send logs and metrics to.\r\n- `event_hub_name` - (Optional) The name of the event hub. If none is specified, the default event hub will be selected.\r\n- `marketplace_partner_resource_id` - (Optional) The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic LogsLogs.\r\n"
              },
              "enable_telemetry": {
                "default": true,
                "description": "This variable controls whether or not telemetry is enabled for the module.\r\nFor more information see https://aka.ms/avm/telemetryinfo.\r\nIf it is set to false, then no telemetry will be collected.\r\n"
              },
              "enabled_for_deployment": {
                "default": false,
                "description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the vault."
              },
              "enabled_for_disk_encryption": {
                "default": false,
                "description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
              },
              "enabled_for_template_deployment": {
                "default": false,
                "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the vault."
              },
              "keys": {
                "default": {},
                "description": "A map of keys to create on the Key Vault. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\n- `name` - The name of the key.\r\n- `key_type` - The type of the key. Possible values are `EC` and `RSA`.\r\n- `key_opts` - A list of key options. Possible values are `decrypt`, `encrypt`, `sign`, `unwrapKey`, `verify`, and `wrapKey`.\r\n- `key_size` - The size of the key. Required for `RSA` keys.\r\n- `curve` - The curve of the key. Required for `EC` keys.  Possible values are `P-256`, `P-256K`, `P-384`, and `P-521`. The API will default to `P-256` if nothing is specified.\r\n- `not_before_date` - The not before date of the key.\r\n- `expiration_date` - The expiration date of the key.\r\n- `tags` - A mapping of tags to assign to the key.\r\n- `rotation_policy` - The rotation policy of the key.\r\n  - `automatic` - The automatic rotation policy of the key.\r\n    - `time_after_creation` - The time after creation of the key before it is automatically rotated.\r\n    - `time_before_expiry` - The time before expiry of the key before it is automatically rotated.\r\n  - `expire_after` - The time after which the key expires.\r\n  - `notify_before_expiry` - The time before expiry of the key when notification emails will be sent.\r\n\r\nSupply role assignments in the same way as for `var.role_assignments`.\r\n"
              },
              "legacy_access_policies": {
                "default": {},
                "description": "A map of legacy access policies to create on the Key Vault. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\nRequires `var.legacy_access_policies_enabled` to be `true`.\r\n\r\n- `object_id` - (Required) The object ID of the principal to assign the access policy to.\r\n- `application_id` - (Optional) The object ID of an Application in Azure Active Directory. Changing this forces a new resource to be created.\r\n- `certifiate_permissions` - (Optional) A list of certificate permissions. Possible values are: `Backup`, `Create`, `Delete`, `DeleteIssuers`, `Get`, `GetIssuers`, `Import`, `List`, `ListIssuers`, `ManageContacts`, `ManageIssuers`, `Purge`, `Recover`, `Restore`, `SetIssuers`, and `Update`.\r\n- `key_permissions` - (Optional) A list of key permissions. Possible value are: `Backup`, `Create`, `Decrypt`, `Delete`, `Encrypt`, `Get`, `Import`, `List`, `Purge`, `Recover`, `Restore`, `Sign`, `UnwrapKey`, `Update`, `Verify`, `WrapKey`, `Release`, `Rotate`, `GetRotationPolicy`, and `SetRotationPolicy`.\r\n- `secret_permissions` - (Optional) A list of secret permissions. Possible values are: `Backup`, `Delete`, `Get`, `List`, `Purge`, `Recover`, `Restore`, and `Set`.\r\n- `storage_permissions` - (Optional) A list of storage permissions. Possible values are: `Backup`, `Delete`, `DeleteSAS`, `Get`, `GetSAS`, `List`, `ListSas`, `Purge`, `Recover`, `RegenerateKey`, `Restore`, `Set`, `SetSAS`, and `Update`.\r\n"
              },
              "legacy_access_policies_enabled": {
                "default": false,
                "description": "Specifies whether legacy access policies are enabled for this Key Vault. Prevents use of Azure RBAC for data plane."
              },
              "location": {
                "description": "The Azure location where the resources will be deployed."
              },
              "lock": {
                "default": null,
                "description": "The lock level to apply to the Key Vault. Default is `None`. Possible values are `None`, `CanNotDelete`, and `ReadOnly`."
              },
              "name": {
                "description": "The name of the Key Vault."
              },
              "network_acls": {
                "default": {
                  "bypass": "None",
                  "default_action": "Deny",
                  "ip_rules": [],
                  "virtual_network_subnet_ids": []
                },
                "description": "The network ACL configuration for the Key Vault.\r\nIf not specified then the Key Vault will be created with a firewall that blocks access.\r\nSpecify `null` to create the Key Vault with no firewall.\r\n\r\n- `bypass` - (Optional) Should Azure Services bypass the ACL. Possible values are `AzureServices` and `None`. Defaults to `None`.\r\n- `default_action` - (Optional) The default action when no rule matches. Possible values are `Allow` and `Deny`. Defaults to `Deny`.\r\n- `ip_rules` - (Optional) A list of IP rules in CIDR format. Defaults to `[]`.\r\n- `virtual_network_subnet_ids` - (Optional) When using with Service Endpoints, a list of subnet IDs to associate with the Key Vault. Defaults to `[]`.\r\n"
              },
              "private_endpoints": {
                "default": {},
                "description": "A map of private endpoints to create on the Key Vault. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\n- `name` - (Optional) The name of the private endpoint. One will be generated if not set.\r\n- `role_assignments` - (Optional) A map of role assignments to create on the private endpoint. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time. See `var.role_assignments` for more information.\r\n- `lock` - (Optional) The lock level to apply to the private endpoint. Default is `None`. Possible values are `None`, `CanNotDelete`, and `ReadOnly`.\r\n- `tags` - (Optional) A mapping of tags to assign to the private endpoint.\r\n- `subnet_resource_id` - The resource ID of the subnet to deploy the private endpoint in.\r\n- `private_dns_zone_group_name` - (Optional) The name of the private DNS zone group. One will be generated if not set.\r\n- `private_dns_zone_resource_ids` - (Optional) A set of resource IDs of private DNS zones to associate with the private endpoint. If not set, no zone groups will be created and the private endpoint will not be associated with any private DNS zones. DNS records must be managed external to this module.\r\n- `application_security_group_resource_ids` - (Optional) A map of resource IDs of application security groups to associate with the private endpoint. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n- `private_service_connection_name` - (Optional) The name of the private service connection. One will be generated if not set.\r\n- `network_interface_name` - (Optional) The name of the network interface. One will be generated if not set.\r\n- `location` - (Optional) The Azure location where the resources will be deployed. Defaults to the location of the resource group.\r\n- `resource_group_name` - (Optional) The resource group where the resources will be deployed. Defaults to the resource group of the Key Vault.\r\n- `ip_configurations` - (Optional) A map of IP configurations to create on the private endpoint. If not specified the platform will create one. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n  - `name` - The name of the IP configuration.\r\n  - `private_ip_address` - The private IP address of the IP configuration.\r\n"
              },
              "private_endpoints_manage_dns_zone_group": {
                "default": true,
                "description": "Whether to manage private DNS zone groups with this module. If set to false, you must manage private DNS zone groups externally, e.g. using Azure Policy."
              },
              "public_network_access_enabled": {
                "default": true,
                "description": "Specifies whether public access is permitted."
              },
              "purge_protection_enabled": {
                "default": true,
                "description": "Specifies whether protection against purge is enabled for this Key Vault. Note once enabled this cannot be disabled."
              },
              "resource_group_name": {
                "description": "The resource group where the resources will be deployed."
              },
              "role_assignments": {
                "default": {},
                "description": "A map of role assignments to create on the Key Vault. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\n- `role_definition_id_or_name` - The ID or name of the role definition to assign to the principal.\r\n- `principal_id` - The ID of the principal to assign the role to.\r\n- `description` - The description of the role assignment.\r\n- `skip_service_principal_aad_check` - If set to true, skips the Azure Active Directory check for the service principal in the tenant. Defaults to false.\r\n- `condition` - The condition which will be used to scope the role assignment.\r\n- `condition_version` - The version of the condition syntax. If you are using a condition, valid values are '2.0'.\r\n\r\n> Note: only set `skip_service_principal_aad_check` to true if you are assigning a role to a service principal.\r\n"
              },
              "secrets": {
                "default": {},
                "description": "A map of secrets to create on the Key Vault. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.\r\n\r\n- `name` - The name of the secret.\r\n- `content_type` - The content type of the secret.\r\n- `tags` - A mapping of tags to assign to the secret.\r\n- `not_before_date` - The not before date of the secret.\r\n- `expiration_date` - The expiration date of the secret.\r\n\r\nSupply role assignments in the same way as for `var.role_assignments`.\r\n\r\n> Note: the `value` of the secret is supplied via the `var.secrets_value` variable. Make sure to use the same map key.\r\n"
              },
              "secrets_value": {
                "default": null,
                "description": "A map of secret keys to values.\r\nThe map key is the supplied input to `var.secrets`.\r\nThe map value is the secret value.\r\n\r\nThis is a separate variable to `var.secrets` because it is sensitive and therefore cannot be used in a `for_each` loop.\r\n",
                "sensitive": true
              },
              "sku_name": {
                "default": "premium",
                "description": "The SKU name of the Key Vault. Default is `premium`. Possible values are `standard` and `premium`."
              },
              "soft_delete_retention_days": {
                "default": null,
                "description": "The number of days that items should be retained for once soft-deleted. This value can be between 7 and 90 (the default) days.\r\n"
              },
              "tags": {
                "default": null,
                "description": "Map of tags to assign to the Key Vault resource."
              },
              "tenant_id": {
                "description": "The Azure tenant ID used for authenticating requests to Key Vault. You can use the `azurerm_client_config` data source to retrieve it."
              },
              "wait_for_rbac_before_contact_operations": {
                "default": {
                  "create": "30s",
                  "destroy": "0s"
                },
                "description": "This variable controls the amount of time to wait before performing contact operations.\r\nIt only applies when `var.role_assignments` and `var.contacts` are both set.\r\nThis is useful when you are creating role assignments on the key vault and immediately creating keys in it.\r\nThe default is 30 seconds for create and 0 seconds for destroy.\r\n"
              },
              "wait_for_rbac_before_key_operations": {
                "default": {
                  "create": "30s",
                  "destroy": "0s"
                },
                "description": "This variable controls the amount of time to wait before performing key operations.\r\nIt only applies when `var.role_assignments` and `var.keys` are both set.\r\nThis is useful when you are creating role assignments on the key vault and immediately creating keys in it.\r\nThe default is 30 seconds for create and 0 seconds for destroy.\r\n"
              },
              "wait_for_rbac_before_secret_operations": {
                "default": {
                  "create": "30s",
                  "destroy": "0s"
                },
                "description": "This variable controls the amount of time to wait before performing secret operations.\r\nIt only applies when `var.role_assignments` and `var.secrets` are both set.\r\nThis is useful when you are creating role assignments on the key vault and immediately creating secrets in it.\r\nThe default is 30 seconds for create and 0 seconds for destroy.\r\n"
              }
            }
          },
          "version_constraint": "0.9.1",
          "depends_on": [
            "module.lz_vending"
          ]
        },
        "lz_vending": {
          "source": "Azure/lz-vending/azurerm",
          "expressions": {
            "location": {
              "references": [
                "var.location"
              ]
            },
            "network_watcher_resource_group_enabled": {
              "constant_value": false
            },
            "resource_group_creation_enabled": {
              "constant_value": true
            },
            "resource_groups": {
              "references": [
                "local.resource_groups"
              ]
            },
            "role_assignment_enabled": {
              "constant_value": false
            },
            "subscription_id": {
              "references": [
                "var.wl_subscription_id"
              ]
            },
            "virtual_network_enabled": {
              "constant_value": true
            },
            "virtual_networks": {
              "references": [
                "local.virtual_networks"
              ]
            }
          },
          "module": {
            "outputs": {
              "management_group_subscription_association_id": {
                "expression": {
                  "references": [
                    "var.subscription_management_group_association_enabled",
                    "module.subscription[0].management_group_subscription_association_id",
                    "module.subscription[0]"
                  ]
                },
                "description": "The management_group_subscription_association_id output is the ID of the management group subscription association.\r\nValue will be null if `var.subscription_management_group_association_enabled` is false.\r\n"
              },
              "subscription_id": {
                "expression": {
                  "references": [
                    "local.subscription_id"
                  ]
                },
                "description": "The subscription_id is the Azure subscription id that resources have been deployed into."
              },
              "subscription_resource_id": {
                "expression": {
                  "references": [
                    "local.subscription_resource_id"
                  ]
                },
                "description": "The subscription_resource_id is the Azure subscription resource id that resources have been deployed into"
              },
              "umi_client_id": {
                "expression": {
                  "references": [
                    "module.usermanagedidentity",
                    "module.usermanagedidentity"
                  ]
                },
                "description": "The client id of the user managed identity.\r\nValue will be null if `var.umi_enabled` is false.\r\n"
              },
              "umi_id": {
                "expression": {
                  "references": [
                    "module.usermanagedidentity",
                    "module.usermanagedidentity"
                  ]
                },
                "description": "The Azure resource id of the user managed identity.\r\nValue will be null if `var.umi_enabled` is false.\r\n"
              },
              "umi_principal_id": {
                "expression": {
                  "references": [
                    "module.usermanagedidentity",
                    "module.usermanagedidentity"
                  ]
                },
                "description": "The principal id of the user managed identity, sometimes known as the object id.\r\nValue will be null if `var.umi_enabled` is false.\r\n"
              },
              "umi_tenant_id": {
                "expression": {
                  "references": [
                    "module.usermanagedidentity",
                    "module.usermanagedidentity"
                  ]
                },
                "description": "The tenant id of the user managed identity.\r\nValue will be null if `var.umi_enabled` is false.\r\n"
              },
              "virtual_network_resource_group_ids": {
                "expression": {
                  "references": [
                    "local.virtual_network_resource_group_ids"
                  ]
                },
                "description": "A map of resource group ids, keyed by the var.virtual_networks input map. Only populated if the virtualnetwork submodule is enabled."
              },
              "virtual_network_resource_ids": {
                "expression": {
                  "references": [
                    "local.virtual_network_resource_ids"
                  ]
                },
                "description": "A map of virtual network resource ids, keyed by the var.virtual_networks input map. Only populated if the virtualnetwork submodule is enabled."
              }
            },
            "resources": [
              {
                "address": "azapi_resource.telemetry_root",
                "mode": "managed",
                "type": "azapi_resource",
                "name": "telemetry_root",
                "provider_config_key": "module.lz_vending:azapi",
                "expressions": {
                  "body": {
                    "references": [
                      "local.telem_arm_subscription_template"
                    ]
                  },
                  "ignore_missing_property": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.telem_root_arm_deployment_name"
                    ]
                  },
                  "parent_id": {
                    "references": [
                      "local.subscription_resource_id"
                    ]
                  },
                  "type": {
                    "constant_value": "Microsoft.Resources/deployments@2021-04-01"
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.disable_telemetry"
                  ]
                }
              }
            ],
            "module_calls": {
              "budget": {
                "source": "./modules/budget",
                "expressions": {
                  "budget_amount": {
                    "references": [
                      "each.value.amount",
                      "each.value"
                    ]
                  },
                  "budget_name": {
                    "references": [
                      "each.key"
                    ]
                  },
                  "budget_notifications": {
                    "references": [
                      "each.value.notifications",
                      "each.value"
                    ]
                  },
                  "budget_scope": {
                    "references": [
                      "local.subscription_resource_id",
                      "each.value.relative_scope",
                      "each.value"
                    ]
                  },
                  "budget_time_grain": {
                    "references": [
                      "each.value.time_grain",
                      "each.value"
                    ]
                  },
                  "budget_time_period": {
                    "references": [
                      "each.value.time_period_end",
                      "each.value",
                      "each.value.time_period_start",
                      "each.value"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "var.budgets",
                    "var.budget_enabled"
                  ]
                },
                "module": {
                  "resources": [
                    {
                      "address": "azapi_resource.budget",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "budget",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {
                          "references": [
                            "var.budget_amount",
                            "local.notifications",
                            "var.budget_time_grain",
                            "var.budget_time_period.end_date",
                            "var.budget_time_period",
                            "var.budget_time_period.start_date",
                            "var.budget_time_period"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.budget_name"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "var.budget_scope"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Consumption/budgets@2021-10-01"
                        }
                      },
                      "schema_version": 1
                    }
                  ],
                  "variables": {
                    "budget_amount": {
                      "description": "The total amount of cost to track with the budget."
                    },
                    "budget_name": {
                      "description": "The name of the budget."
                    },
                    "budget_notifications": {
                      "default": {},
                      "description": "The notifications for the budget."
                    },
                    "budget_scope": {
                      "description": "The scope of the budget."
                    },
                    "budget_time_grain": {
                      "description": "The time grain of the budget."
                    },
                    "budget_time_period": {
                      "description": "The time period of the budget."
                    }
                  }
                },
                "depends_on": [
                  "module.resourcegroup_networkwatcherrg",
                  "module.resourcegroup",
                  "module.subscription",
                  "module.usermanagedidentity",
                  "module.virtualnetwork"
                ]
              },
              "resourcegroup": {
                "source": "./modules/resourcegroup",
                "expressions": {
                  "location": {
                    "references": [
                      "each.value.location",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "subscription_id": {
                    "references": [
                      "local.subscription_id"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tags",
                      "each.value"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "var.resource_group_creation_enabled",
                    "var.resource_groups"
                  ]
                },
                "module": {
                  "resources": [
                    {
                      "address": "azapi_resource.rg",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "rg",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {},
                        "location": {
                          "references": [
                            "var.location"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "var.subscription_id"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Resources/resourceGroups@2021-04-01"
                        }
                      },
                      "schema_version": 1
                    }
                  ],
                  "variables": {
                    "location": {
                      "description": "The Azure region to deploy resources into. E.g. `eastus`"
                    },
                    "resource_group_name": {
                      "description": "The name of the resource group E.g. `rg-test`"
                    },
                    "subscription_id": {
                      "description": "The ID of the subscription to deploy resources into. E.g. `00000000-0000-0000-0000-000000000000`"
                    },
                    "tags": {
                      "default": {},
                      "description": "Map of tags to be applied to the resource group"
                    }
                  }
                }
              },
              "resourcegroup_networkwatcherrg": {
                "source": "./modules/resourcegroup",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "resource_group_name": {
                    "constant_value": "NetworkWatcherRG"
                  },
                  "subscription_id": {
                    "references": [
                      "local.subscription_id"
                    ]
                  },
                  "tags": {
                    "constant_value": {}
                  }
                },
                "count_expression": {
                  "references": [
                    "var.network_watcher_resource_group_enabled"
                  ]
                },
                "module": {
                  "resources": [
                    {
                      "address": "azapi_resource.rg",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "rg",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {},
                        "location": {
                          "references": [
                            "var.location"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "var.subscription_id"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Resources/resourceGroups@2021-04-01"
                        }
                      },
                      "schema_version": 1
                    }
                  ],
                  "variables": {
                    "location": {
                      "description": "The Azure region to deploy resources into. E.g. `eastus`"
                    },
                    "resource_group_name": {
                      "description": "The name of the resource group E.g. `rg-test`"
                    },
                    "subscription_id": {
                      "description": "The ID of the subscription to deploy resources into. E.g. `00000000-0000-0000-0000-000000000000`"
                    },
                    "tags": {
                      "default": {},
                      "description": "Map of tags to be applied to the resource group"
                    }
                  }
                }
              },
              "resourceproviders": {
                "source": "./modules/resourceprovider",
                "expressions": {
                  "features": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "resource_provider": {
                    "references": [
                      "each.key"
                    ]
                  },
                  "subscription_id": {
                    "references": [
                      "local.subscription_id"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "var.subscription_register_resource_providers_and_features",
                    "var.subscription_register_resource_providers_enabled"
                  ]
                },
                "module": {
                  "resources": [
                    {
                      "address": "azapi_resource_action.resource_provider_feature_registration",
                      "mode": "managed",
                      "type": "azapi_resource_action",
                      "name": "resource_provider_feature_registration",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "action": {
                          "constant_value": "register"
                        },
                        "method": {
                          "constant_value": "POST"
                        },
                        "resource_id": {
                          "references": [
                            "var.subscription_id",
                            "var.resource_provider",
                            "each.value"
                          ]
                        },
                        "type": {
                          "references": [
                            "var.resource_provider"
                          ]
                        }
                      },
                      "schema_version": 1,
                      "for_each_expression": {
                        "references": [
                          "var.features"
                        ]
                      }
                    },
                    {
                      "address": "azapi_resource_action.resource_provider_registration",
                      "mode": "managed",
                      "type": "azapi_resource_action",
                      "name": "resource_provider_registration",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "action": {
                          "references": [
                            "var.resource_provider"
                          ]
                        },
                        "method": {
                          "constant_value": "POST"
                        },
                        "resource_id": {
                          "references": [
                            "var.subscription_id"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Resources/subscriptions@2021-04-01"
                        }
                      },
                      "schema_version": 1
                    }
                  ],
                  "variables": {
                    "features": {
                      "default": [],
                      "description": "The resource provider features to register, e.g. [`MyFeature`]\r\n"
                    },
                    "resource_provider": {
                      "description": "The resource provider namespace, e.g. `Microsoft.Compute`.\r\n"
                    },
                    "subscription_id": {
                      "description": "The subscription id to register the resource providers in.\r\n"
                    }
                  }
                },
                "depends_on": [
                  "module.resourcegroup",
                  "module.resourcegroup_networkwatcherrg",
                  "module.roleassignment",
                  "module.roleassignment_umi",
                  "module.subscription",
                  "module.usermanagedidentity",
                  "module.virtualnetwork"
                ]
              },
              "roleassignment": {
                "source": "./modules/roleassignment",
                "expressions": {
                  "role_assignment_condition": {
                    "references": [
                      "each.value.condition",
                      "each.value"
                    ]
                  },
                  "role_assignment_condition_version": {
                    "references": [
                      "each.value.condition_version",
                      "each.value"
                    ]
                  },
                  "role_assignment_definition": {
                    "references": [
                      "each.value.definition",
                      "each.value"
                    ]
                  },
                  "role_assignment_principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_assignment_scope": {
                    "references": [
                      "local.subscription_resource_id",
                      "each.value.relative_scope",
                      "each.value"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "var.role_assignments",
                    "var.role_assignment_enabled"
                  ]
                },
                "module": {
                  "outputs": {
                    "role_assignment_id": {
                      "expression": {
                        "references": [
                          "azurerm_role_assignment.this.id",
                          "azurerm_role_assignment.this"
                        ]
                      },
                      "description": "The Azure resource id of the created role assignment."
                    },
                    "role_assignment_name": {
                      "expression": {
                        "references": [
                          "azurerm_role_assignment.this.name",
                          "azurerm_role_assignment.this"
                        ]
                      },
                      "description": "The Azure name (uuid) of the created role assignment."
                    }
                  },
                  "resources": [
                    {
                      "address": "azurerm_role_assignment.this",
                      "mode": "managed",
                      "type": "azurerm_role_assignment",
                      "name": "this",
                      "provider_config_key": "module.lz_vending.module.roleassignment:azurerm",
                      "expressions": {
                        "condition": {
                          "references": [
                            "local.role_assignment_condition"
                          ]
                        },
                        "condition_version": {
                          "references": [
                            "local.role_assignment_condition_version"
                          ]
                        },
                        "principal_id": {
                          "references": [
                            "var.role_assignment_principal_id"
                          ]
                        },
                        "role_definition_id": {
                          "references": [
                            "local.role_assignment_definition_id"
                          ]
                        },
                        "role_definition_name": {
                          "references": [
                            "local.role_assignment_definition_name"
                          ]
                        },
                        "scope": {
                          "references": [
                            "var.role_assignment_scope"
                          ]
                        }
                      },
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "role_assignment_condition": {
                      "description": "(Optional) The condition that limits the resources that the role can be assigned to.\r\n"
                    },
                    "role_assignment_condition_version": {
                      "description": "The version of the condition. Possible values are `\"\"`, 1.0 or 2.0. If `\"\"`, null will be set in role_assignment_condition and role_assignment_condition_version.\r\n"
                    },
                    "role_assignment_definition": {
                      "description": "Either the role definition resource id, e.g. `/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c`.\r\nOr, the role definition name, e.g. `Contributor`.\r\n"
                    },
                    "role_assignment_principal_id": {
                      "description": "The principal (object) ID of the role assignment.\r\nNote, for a service principal, this is not the application id.\r\n\r\nCan be user, group or service principal.\r\n"
                    },
                    "role_assignment_scope": {
                      "description": "The scope of the role assignment.\r\n\r\nMust begin with `/subscriptions/{subscription-id}` to avoid accidentally creating a role assignment at higher scopes.\r\n"
                    }
                  }
                },
                "depends_on": [
                  "module.resourcegroup_networkwatcherrg",
                  "module.resourcegroup",
                  "module.subscription",
                  "module.usermanagedidentity",
                  "module.virtualnetwork"
                ]
              },
              "roleassignment_umi": {
                "source": "./modules/roleassignment",
                "expressions": {
                  "role_assignment_condition": {
                    "references": [
                      "each.value.condition",
                      "each.value"
                    ]
                  },
                  "role_assignment_condition_version": {
                    "references": [
                      "each.value.condition_version",
                      "each.value"
                    ]
                  },
                  "role_assignment_definition": {
                    "references": [
                      "each.value.definition",
                      "each.value"
                    ]
                  },
                  "role_assignment_principal_id": {
                    "references": [
                      "module.usermanagedidentity"
                    ]
                  },
                  "role_assignment_scope": {
                    "references": [
                      "local.subscription_resource_id",
                      "each.value.relative_scope",
                      "each.value"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "var.umi_role_assignments",
                    "var.umi_enabled"
                  ]
                },
                "module": {
                  "outputs": {
                    "role_assignment_id": {
                      "expression": {
                        "references": [
                          "azurerm_role_assignment.this.id",
                          "azurerm_role_assignment.this"
                        ]
                      },
                      "description": "The Azure resource id of the created role assignment."
                    },
                    "role_assignment_name": {
                      "expression": {
                        "references": [
                          "azurerm_role_assignment.this.name",
                          "azurerm_role_assignment.this"
                        ]
                      },
                      "description": "The Azure name (uuid) of the created role assignment."
                    }
                  },
                  "resources": [
                    {
                      "address": "azurerm_role_assignment.this",
                      "mode": "managed",
                      "type": "azurerm_role_assignment",
                      "name": "this",
                      "provider_config_key": "module.lz_vending.module.roleassignment_umi:azurerm",
                      "expressions": {
                        "condition": {
                          "references": [
                            "local.role_assignment_condition"
                          ]
                        },
                        "condition_version": {
                          "references": [
                            "local.role_assignment_condition_version"
                          ]
                        },
                        "principal_id": {
                          "references": [
                            "var.role_assignment_principal_id"
                          ]
                        },
                        "role_definition_id": {
                          "references": [
                            "local.role_assignment_definition_id"
                          ]
                        },
                        "role_definition_name": {
                          "references": [
                            "local.role_assignment_definition_name"
                          ]
                        },
                        "scope": {
                          "references": [
                            "var.role_assignment_scope"
                          ]
                        }
                      },
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "role_assignment_condition": {
                      "description": "(Optional) The condition that limits the resources that the role can be assigned to.\r\n"
                    },
                    "role_assignment_condition_version": {
                      "description": "The version of the condition. Possible values are `\"\"`, 1.0 or 2.0. If `\"\"`, null will be set in role_assignment_condition and role_assignment_condition_version.\r\n"
                    },
                    "role_assignment_definition": {
                      "description": "Either the role definition resource id, e.g. `/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c`.\r\nOr, the role definition name, e.g. `Contributor`.\r\n"
                    },
                    "role_assignment_principal_id": {
                      "description": "The principal (object) ID of the role assignment.\r\nNote, for a service principal, this is not the application id.\r\n\r\nCan be user, group or service principal.\r\n"
                    },
                    "role_assignment_scope": {
                      "description": "The scope of the role assignment.\r\n\r\nMust begin with `/subscriptions/{subscription-id}` to avoid accidentally creating a role assignment at higher scopes.\r\n"
                    }
                  }
                },
                "depends_on": [
                  "module.resourcegroup_networkwatcherrg",
                  "module.resourcegroup",
                  "module.subscription",
                  "module.usermanagedidentity",
                  "module.virtualnetwork"
                ]
              },
              "subscription": {
                "source": "./modules/subscription",
                "expressions": {
                  "subscription_alias_enabled": {
                    "references": [
                      "var.subscription_alias_enabled"
                    ]
                  },
                  "subscription_alias_name": {
                    "references": [
                      "var.subscription_alias_name"
                    ]
                  },
                  "subscription_billing_scope": {
                    "references": [
                      "var.subscription_billing_scope"
                    ]
                  },
                  "subscription_display_name": {
                    "references": [
                      "var.subscription_display_name"
                    ]
                  },
                  "subscription_id": {
                    "references": [
                      "var.subscription_id"
                    ]
                  },
                  "subscription_management_group_association_enabled": {
                    "references": [
                      "var.subscription_management_group_association_enabled"
                    ]
                  },
                  "subscription_management_group_id": {
                    "references": [
                      "var.subscription_management_group_id"
                    ]
                  },
                  "subscription_tags": {
                    "references": [
                      "var.subscription_tags"
                    ]
                  },
                  "subscription_update_existing": {
                    "references": [
                      "var.subscription_update_existing"
                    ]
                  },
                  "subscription_use_azapi": {
                    "references": [
                      "var.subscription_use_azapi"
                    ]
                  },
                  "subscription_workload": {
                    "references": [
                      "var.subscription_workload"
                    ]
                  },
                  "wait_for_subscription_before_subscription_operations": {
                    "references": [
                      "var.wait_for_subscription_before_subscription_operations"
                    ]
                  }
                },
                "count_expression": {
                  "references": [
                    "var.subscription_id",
                    "var.subscription_update_existing",
                    "var.subscription_alias_enabled",
                    "var.subscription_management_group_association_enabled"
                  ]
                },
                "module": {
                  "outputs": {
                    "management_group_subscription_association_id": {
                      "expression": {
                        "references": [
                          "var.subscription_management_group_association_enabled",
                          "azurerm_management_group_subscription_association.this[0].id",
                          "azurerm_management_group_subscription_association.this[0]",
                          "azurerm_management_group_subscription_association.this"
                        ]
                      },
                      "description": "The management_group_subscription_association_id output is the ID of the management group subscription association.\r\nValue will be null if `var.subscription_management_group_association_enabled` is false.\r\n"
                    },
                    "subscription_id": {
                      "expression": {
                        "references": [
                          "local.subscription_id"
                        ]
                      },
                      "description": "The subscription_id is the id of the newly created subscription, or that of the supplied var.subscription_id.\r\nValue will be null if `var.subscription_id` is blank and `var.subscription_alias_enabled` is false.\r\n"
                    },
                    "subscription_resource_id": {
                      "expression": {
                        "references": [
                          "local.subscription_id",
                          "local.subscription_id"
                        ]
                      },
                      "description": "The subscription_resource_id output is the Azure resource id for the newly created subscription.\r\nValue will be null if `var.subscription_id` is blank and `var.subscription_alias_enabled` is false.\r\n"
                    }
                  },
                  "resources": [
                    {
                      "address": "azapi_resource.subscription",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "subscription",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {
                          "references": [
                            "var.subscription_display_name",
                            "var.subscription_workload",
                            "var.subscription_billing_scope",
                            "var.subscription_management_group_association_enabled",
                            "var.subscription_management_group_id",
                            "var.subscription_tags"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.subscription_alias_name"
                          ]
                        },
                        "parent_id": {
                          "constant_value": "/"
                        },
                        "response_export_values": {
                          "constant_value": [
                            "properties.subscriptionId"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Subscription/aliases@2021-10-01"
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "var.subscription_alias_enabled",
                          "var.subscription_use_azapi"
                        ]
                      }
                    },
                    {
                      "address": "azapi_resource_action.subscription_association",
                      "mode": "managed",
                      "type": "azapi_resource_action",
                      "name": "subscription_association",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "method": {
                          "constant_value": "PUT"
                        },
                        "resource_id": {
                          "references": [
                            "var.subscription_management_group_id",
                            "local.subscription_id"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Management/managementGroups/subscriptions@2021-04-01"
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "var.subscription_management_group_association_enabled",
                          "var.subscription_use_azapi"
                        ]
                      },
                      "depends_on": [
                        "time_sleep.wait_for_subscription_before_subscription_operations"
                      ]
                    },
                    {
                      "address": "azapi_resource_action.subscription_cancel",
                      "mode": "managed",
                      "type": "azapi_resource_action",
                      "name": "subscription_cancel",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "action": {
                          "constant_value": "providers/Microsoft.Subscription/cancel"
                        },
                        "method": {
                          "constant_value": "POST"
                        },
                        "resource_id": {
                          "references": [
                            "local.subscription_id"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Resources/subscriptions@2021-10-01"
                        },
                        "when": {
                          "constant_value": "destroy"
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "var.subscription_alias_enabled",
                          "var.subscription_use_azapi"
                        ]
                      },
                      "depends_on": [
                        "time_sleep.wait_for_subscription_before_subscription_operations"
                      ]
                    },
                    {
                      "address": "azapi_resource_action.subscription_rename",
                      "mode": "managed",
                      "type": "azapi_resource_action",
                      "name": "subscription_rename",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "action": {
                          "constant_value": "providers/Microsoft.Subscription/rename"
                        },
                        "body": {
                          "references": [
                            "var.subscription_display_name"
                          ]
                        },
                        "method": {
                          "constant_value": "POST"
                        },
                        "resource_id": {
                          "references": [
                            "local.subscription_id"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Resources/subscriptions@2021-10-01"
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "var.subscription_alias_enabled",
                          "var.subscription_use_azapi",
                          "var.subscription_id",
                          "var.subscription_update_existing"
                        ]
                      },
                      "depends_on": [
                        "time_sleep.wait_for_subscription_before_subscription_operations"
                      ]
                    },
                    {
                      "address": "azapi_update_resource.subscription_tags",
                      "mode": "managed",
                      "type": "azapi_update_resource",
                      "name": "subscription_tags",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {
                          "references": [
                            "var.subscription_tags"
                          ]
                        },
                        "resource_id": {
                          "references": [
                            "local.subscription_id"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Resources/tags@2022-09-01"
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "var.subscription_alias_enabled",
                          "var.subscription_use_azapi",
                          "var.subscription_id",
                          "var.subscription_update_existing"
                        ]
                      },
                      "depends_on": [
                        "time_sleep.wait_for_subscription_before_subscription_operations"
                      ]
                    },
                    {
                      "address": "azurerm_management_group_subscription_association.this",
                      "mode": "managed",
                      "type": "azurerm_management_group_subscription_association",
                      "name": "this",
                      "provider_config_key": "module.lz_vending.module.subscription:azurerm",
                      "expressions": {
                        "management_group_id": {
                          "references": [
                            "var.subscription_management_group_id"
                          ]
                        },
                        "subscription_id": {
                          "references": [
                            "local.subscription_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.subscription_management_group_association_enabled",
                          "var.subscription_use_azapi"
                        ]
                      }
                    },
                    {
                      "address": "azurerm_subscription.this",
                      "mode": "managed",
                      "type": "azurerm_subscription",
                      "name": "this",
                      "provider_config_key": "module.lz_vending.module.subscription:azurerm",
                      "expressions": {
                        "alias": {
                          "references": [
                            "var.subscription_alias_name"
                          ]
                        },
                        "billing_scope_id": {
                          "references": [
                            "var.subscription_billing_scope"
                          ]
                        },
                        "subscription_name": {
                          "references": [
                            "var.subscription_display_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.subscription_tags"
                          ]
                        },
                        "workload": {
                          "references": [
                            "var.subscription_workload"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.subscription_alias_enabled",
                          "var.subscription_use_azapi"
                        ]
                      }
                    },
                    {
                      "address": "terraform_data.replacement",
                      "mode": "managed",
                      "type": "terraform_data",
                      "name": "replacement",
                      "provider_config_key": "module.lz_vending.module.subscription:terraform",
                      "expressions": {
                        "input": {
                          "references": [
                            "local.is_subscription_associated_to_management_group"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.subscription_management_group_association_enabled",
                          "var.subscription_use_azapi"
                        ]
                      }
                    },
                    {
                      "address": "time_sleep.wait_for_subscription_before_subscription_operations",
                      "mode": "managed",
                      "type": "time_sleep",
                      "name": "wait_for_subscription_before_subscription_operations",
                      "provider_config_key": "module.lz_vending.module.subscription:time",
                      "expressions": {
                        "create_duration": {
                          "references": [
                            "var.wait_for_subscription_before_subscription_operations.create",
                            "var.wait_for_subscription_before_subscription_operations"
                          ]
                        },
                        "destroy_duration": {
                          "references": [
                            "var.wait_for_subscription_before_subscription_operations.destroy",
                            "var.wait_for_subscription_before_subscription_operations"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.subscription_alias_enabled",
                          "var.subscription_use_azapi"
                        ]
                      },
                      "depends_on": [
                        "azapi_resource.subscription"
                      ]
                    },
                    {
                      "address": "data.azapi_resource_list.subscription_management_group_association",
                      "mode": "data",
                      "type": "azapi_resource_list",
                      "name": "subscription_management_group_association",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "parent_id": {
                          "references": [
                            "var.subscription_management_group_id"
                          ]
                        },
                        "response_export_values": {
                          "constant_value": [
                            "*"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Management/managementGroups/subscriptions@2020-05-01"
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.subscription_management_group_association_enabled",
                          "var.subscription_use_azapi"
                        ]
                      }
                    },
                    {
                      "address": "data.azapi_resource_list.subscriptions",
                      "mode": "data",
                      "type": "azapi_resource_list",
                      "name": "subscriptions",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "parent_id": {
                          "constant_value": "/"
                        },
                        "response_export_values": {
                          "constant_value": [
                            "*"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Resources/subscriptions@2022-12-01"
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.subscription_management_group_association_enabled",
                          "var.subscription_use_azapi"
                        ]
                      }
                    }
                  ],
                  "variables": {
                    "subscription_alias_enabled": {
                      "default": false,
                      "description": "Whether to create a new subscription using the subscription alias resource.\r\n\r\nIf enabled, the following must also be supplied:\r\n\r\n- `subscription_alias_name`\r\n- `subscription_display_name`\r\n- `subscription_billing_scope`\r\n- `subscription_workload`\r\n\r\nOptionally, supply the following to enable the placement of the subscription into a management group:\r\n\r\n- `subscription_management_group_id`\r\n- `subscription_management_group_association_enabled`\r\n\r\nIf disabled, supply the `subscription_id` variable to use an existing subscription instead.\r\n\r\n> **Note**: When the subscription is destroyed, this module will try to remove the NetworkWatcherRG resource group using `az cli`.\r\n> This requires the `az cli` tool be installed and authenticated.\r\n> If the command fails for any reason, the provider will attempt to cancel the subscription anyway.\r\n"
                    },
                    "subscription_alias_name": {
                      "default": "",
                      "description": "The name of the subscription alias.\r\n\r\nThe string must be comprised of a-z, A-Z, 0-9, - and _.\r\nThe maximum length is 63 characters.\r\n\r\nYou may also supply an empty string if you do not want to create a new subscription alias.\r\nIn this scenario, `subscription_enabled` should be set to `false` and `subscription_id` must be supplied.\r\n"
                    },
                    "subscription_billing_scope": {
                      "default": "",
                      "description": "The billing scope for the new subscription alias.\r\n\r\nA valid billing scope starts with `/providers/Microsoft.Billing/billingAccounts/` and is case sensitive.\r\n\r\nE.g.\r\n\r\n- For CustomerLed and FieldLed, e.g. MCA - `/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}`\r\n- For PartnerLed, e.g. MPA - `/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerName}`\r\n- For Legacy EA - `/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/enrollmentAccounts/{enrollmentAccountName}`\r\n\r\nYou may also supply an empty string if you do not want to create a new subscription alias.\r\nIn this scenario, `subscription_enabled` should be set to `false` and `subscription_id` must be supplied.\r\n"
                    },
                    "subscription_display_name": {
                      "default": "",
                      "description": "The display name of the subscription alias.\r\n\r\nThe string must be comprised of a-z, A-Z, 0-9, -, _ and space.\r\nThe maximum length is 64 characters.\r\n\r\nYou may also supply an empty string if you do not want to create a new subscription alias.\r\nIn this scenario, `subscription_enabled` should be set to `false` and `subscription_id` must be supplied.\r\n"
                    },
                    "subscription_id": {
                      "default": ""
                    },
                    "subscription_management_group_association_enabled": {
                      "default": false,
                      "description": "Whether to create the `azurerm_management_group_subscription_association` resource.\r\n\r\nIf enabled, the `subscription_management_group_id` must also be supplied.\r\n"
                    },
                    "subscription_management_group_id": {
                      "default": "",
                      "description": "The destination management group ID for the new subscription.\r\n\r\n**Note:** Do not supply the display name.\r\nThe management group ID forms part of the Azure resource ID. E.g.,\r\n`/providers/Microsoft.Management/managementGroups/{managementGroupId}`.\r\n"
                    },
                    "subscription_tags": {
                      "default": {},
                      "description": "A map of tags to assign to the newly created subscription.\r\nOnly valid when `subsciption_alias_enabled` is set to `true`.\r\n\r\nExample value:\r\n\r\n```terraform\r\nsubscription_tags = {\r\n  mytag  = \"myvalue\"\r\n  mytag2 = \"myvalue2\"\r\n}\r\n```\r\n"
                    },
                    "subscription_update_existing": {
                      "default": false,
                      "description": "Whether to update an existing subscription with the supplied tags and display name.\r\nIf enabled, the following must also be supplied:\r\n- `subscription_id`\r\n"
                    },
                    "subscription_use_azapi": {
                      "default": false,
                      "description": "Whether to use the azapi_resource resource to create the subscription alias. This includes the subscription alias in the management group.\r\n"
                    },
                    "subscription_workload": {
                      "default": "",
                      "description": "The billing scope for the new subscription alias.\r\n\r\nThe workload type can be either `Production` or `DevTest` and is case sensitive.\r\n\r\nYou may also supply an empty string if you do not want to create a new subscription alias.\r\nIn this scenario, `subscription_enabled` should be set to `false` and `subscription_id` must be supplied.\r\n"
                    },
                    "wait_for_subscription_before_subscription_operations": {
                      "default": {
                        "create": "30s",
                        "destroy": "0s"
                      },
                      "description": "The duration to wait after vending a subscription before performing subscription operations.\r\n"
                    }
                  }
                }
              },
              "usermanagedidentity": {
                "source": "./modules/usermanagedidentity",
                "expressions": {
                  "federated_credentials_advanced": {
                    "references": [
                      "var.umi_federated_credentials_advanced"
                    ]
                  },
                  "federated_credentials_github": {
                    "references": [
                      "var.umi_federated_credentials_github"
                    ]
                  },
                  "federated_credentials_terraform_cloud": {
                    "references": [
                      "var.umi_federated_credentials_terraform_cloud"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.umi_name"
                    ]
                  },
                  "resource_group_creation_enabled": {
                    "references": [
                      "var.umi_resource_group_creation_enabled"
                    ]
                  },
                  "resource_group_lock_enabled": {
                    "references": [
                      "var.umi_resource_group_lock_enabled"
                    ]
                  },
                  "resource_group_lock_name": {
                    "references": [
                      "var.umi_resource_group_lock_name"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.umi_resource_group_name"
                    ]
                  },
                  "resource_group_tags": {
                    "references": [
                      "var.umi_resource_group_tags"
                    ]
                  },
                  "subscription_id": {
                    "references": [
                      "local.subscription_id"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.umi_tags"
                    ]
                  }
                },
                "count_expression": {
                  "references": [
                    "var.umi_enabled"
                  ]
                },
                "module": {
                  "outputs": {
                    "client_id": {
                      "expression": {
                        "references": [
                          "local.umi_output.properties.clientId",
                          "local.umi_output.properties",
                          "local.umi_output"
                        ]
                      },
                      "description": "The client id of the user managed identity"
                    },
                    "principal_id": {
                      "expression": {
                        "references": [
                          "local.umi_output.properties.principalId",
                          "local.umi_output.properties",
                          "local.umi_output"
                        ]
                      },
                      "description": "The object id of the user managed identity"
                    },
                    "tenant_id": {
                      "expression": {
                        "references": [
                          "local.umi_output.properties.tenantId",
                          "local.umi_output.properties",
                          "local.umi_output"
                        ]
                      },
                      "description": "The tenant id of the user managed identity"
                    },
                    "umi_id": {
                      "expression": {
                        "references": [
                          "azapi_resource.umi.id",
                          "azapi_resource.umi"
                        ]
                      },
                      "description": "The resource id of the user managed identity"
                    }
                  },
                  "resources": [
                    {
                      "address": "azapi_resource.rg",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "rg",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "location": {
                          "references": [
                            "var.location"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.resource_group_name"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "var.subscription_id"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.resource_group_tags"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Resources/resourceGroups@2022-09-01"
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "var.resource_group_creation_enabled"
                        ]
                      }
                    },
                    {
                      "address": "azapi_resource.rg_lock",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "rg_lock",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {},
                        "name": {
                          "references": [
                            "var.resource_group_lock_name",
                            "azapi_resource.rg"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "azapi_resource.rg"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Authorization/locks@2020-05-01"
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "var.resource_group_lock_enabled",
                          "var.resource_group_creation_enabled"
                        ]
                      },
                      "depends_on": [
                        "azapi_resource.rg",
                        "azapi_resource.umi",
                        "azapi_resource.umi_federated_credential_github_branch",
                        "azapi_resource.umi_federated_credential_github_tag",
                        "azapi_resource.umi_federated_credential_github_environment",
                        "azapi_resource.umi_federated_credential_github_pull_request",
                        "azapi_resource.umi_federated_credential_terraform_cloud",
                        "azapi_resource.umi_federated_credential_advanced"
                      ]
                    },
                    {
                      "address": "azapi_resource.umi",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "umi",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {},
                        "location": {
                          "references": [
                            "var.location"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.name"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "var.resource_group_creation_enabled",
                            "azapi_resource.rg",
                            "var.subscription_id",
                            "var.resource_group_name"
                          ]
                        },
                        "response_export_values": {
                          "constant_value": [
                            "properties.principalId",
                            "properties.clientId",
                            "properties.tenantId"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.ManagedIdentity/userAssignedIdentities@2023-01-31"
                        }
                      },
                      "schema_version": 1
                    },
                    {
                      "address": "azapi_resource.umi_federated_credential_advanced",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "umi_federated_credential_advanced",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {
                          "references": [
                            "each.value.audiences",
                            "each.value",
                            "each.value.issuer_url",
                            "each.value",
                            "each.value.subject_identifier",
                            "each.value"
                          ]
                        },
                        "locks": {
                          "references": [
                            "azapi_resource.umi.id",
                            "azapi_resource.umi"
                          ]
                        },
                        "name": {
                          "references": [
                            "each.value.name",
                            "each.value"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "azapi_resource.umi.id",
                            "azapi_resource.umi"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.ManagedIdentity/userAssignedIdentities/federatedIdentityCredentials@2023-01-31"
                        }
                      },
                      "schema_version": 1,
                      "for_each_expression": {
                        "references": [
                          "var.federated_credentials_advanced"
                        ]
                      }
                    },
                    {
                      "address": "azapi_resource.umi_federated_credential_github_branch",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "umi_federated_credential_github_branch",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {
                          "references": [
                            "each.value.organization",
                            "each.value",
                            "each.value.repository",
                            "each.value",
                            "each.value.value",
                            "each.value"
                          ]
                        },
                        "locks": {
                          "references": [
                            "azapi_resource.umi.id",
                            "azapi_resource.umi"
                          ]
                        },
                        "name": {
                          "references": [
                            "each.value.name",
                            "each.value",
                            "each.value.organization",
                            "each.value",
                            "each.value.repository",
                            "each.value",
                            "each.value.value",
                            "each.value"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "azapi_resource.umi.id",
                            "azapi_resource.umi"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.ManagedIdentity/userAssignedIdentities/federatedIdentityCredentials@2023-01-31"
                        }
                      },
                      "schema_version": 1,
                      "for_each_expression": {
                        "references": [
                          "var.federated_credentials_github"
                        ]
                      }
                    },
                    {
                      "address": "azapi_resource.umi_federated_credential_github_environment",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "umi_federated_credential_github_environment",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {
                          "references": [
                            "each.value.organization",
                            "each.value",
                            "each.value.repository",
                            "each.value",
                            "each.value.value",
                            "each.value"
                          ]
                        },
                        "locks": {
                          "references": [
                            "azapi_resource.umi.id",
                            "azapi_resource.umi"
                          ]
                        },
                        "name": {
                          "references": [
                            "each.value.name",
                            "each.value",
                            "each.value.organization",
                            "each.value",
                            "each.value.repository",
                            "each.value",
                            "each.value.value",
                            "each.value"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "azapi_resource.umi.id",
                            "azapi_resource.umi"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.ManagedIdentity/userAssignedIdentities/federatedIdentityCredentials@2023-01-31"
                        }
                      },
                      "schema_version": 1,
                      "for_each_expression": {
                        "references": [
                          "var.federated_credentials_github"
                        ]
                      }
                    },
                    {
                      "address": "azapi_resource.umi_federated_credential_github_pull_request",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "umi_federated_credential_github_pull_request",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {
                          "references": [
                            "each.value.organization",
                            "each.value",
                            "each.value.repository",
                            "each.value"
                          ]
                        },
                        "locks": {
                          "references": [
                            "azapi_resource.umi.id",
                            "azapi_resource.umi"
                          ]
                        },
                        "name": {
                          "references": [
                            "each.value.name",
                            "each.value",
                            "each.value.organization",
                            "each.value",
                            "each.value.repository",
                            "each.value"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "azapi_resource.umi.id",
                            "azapi_resource.umi"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.ManagedIdentity/userAssignedIdentities/federatedIdentityCredentials@2023-01-31"
                        }
                      },
                      "schema_version": 1,
                      "for_each_expression": {
                        "references": [
                          "var.federated_credentials_github"
                        ]
                      }
                    },
                    {
                      "address": "azapi_resource.umi_federated_credential_github_tag",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "umi_federated_credential_github_tag",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {
                          "references": [
                            "each.value.organization",
                            "each.value",
                            "each.value.repository",
                            "each.value",
                            "each.value.value",
                            "each.value"
                          ]
                        },
                        "locks": {
                          "references": [
                            "azapi_resource.umi.id",
                            "azapi_resource.umi"
                          ]
                        },
                        "name": {
                          "references": [
                            "each.value.name",
                            "each.value",
                            "each.value.organization",
                            "each.value",
                            "each.value.repository",
                            "each.value",
                            "each.value.value",
                            "each.value"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "azapi_resource.umi.id",
                            "azapi_resource.umi"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.ManagedIdentity/userAssignedIdentities/federatedIdentityCredentials@2023-01-31"
                        }
                      },
                      "schema_version": 1,
                      "for_each_expression": {
                        "references": [
                          "var.federated_credentials_github"
                        ]
                      }
                    },
                    {
                      "address": "azapi_resource.umi_federated_credential_terraform_cloud",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "umi_federated_credential_terraform_cloud",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {
                          "references": [
                            "each.value.organization",
                            "each.value",
                            "each.value.project",
                            "each.value",
                            "each.value.workspace",
                            "each.value",
                            "each.value.run_phase",
                            "each.value"
                          ]
                        },
                        "locks": {
                          "references": [
                            "azapi_resource.umi.id",
                            "azapi_resource.umi"
                          ]
                        },
                        "name": {
                          "references": [
                            "each.value.name",
                            "each.value",
                            "each.value.organization",
                            "each.value",
                            "each.value.project",
                            "each.value",
                            "each.value.workspace",
                            "each.value",
                            "each.value.run_phase",
                            "each.value"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "azapi_resource.umi.id",
                            "azapi_resource.umi"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.ManagedIdentity/userAssignedIdentities/federatedIdentityCredentials@2023-01-31"
                        }
                      },
                      "schema_version": 1,
                      "for_each_expression": {
                        "references": [
                          "var.federated_credentials_terraform_cloud"
                        ]
                      }
                    }
                  ],
                  "variables": {
                    "federated_credentials_advanced": {
                      "default": {},
                      "description": "Configure federated identity credentials, using OpenID Connect, for use scenarios outside GitHub Actions and Terraform Cloud.\r\n\r\nThe may key is arbitrary and only used for the `for_each` in the resource declaration.\r\n\r\nThe map value is an object with the following attributes:\r\n\r\n- `name` - the name of the federated credential resource, the last segment of the Azure resource id.\r\n- `subject_identifier` - The subject of the token.\r\n- `issuer_url` - the URL of the token issuer, should begin with `https://`\r\n- `audiences` - (optional) a set of strings containing the token audiences, defaults to `[\"api://AzureADTokenExchange\"]`.\r\n"
                    },
                    "federated_credentials_github": {
                      "default": {},
                      "description": "Configure federated identity credentials, using OpenID Connect, for use in GitHub actions.\r\n\r\nThe may key is arbitrary and only used for the `for_each` in the resource declaration.\r\n\r\nThe map value is an object with the following attributes:\r\n\r\n- `name` - the name of the federated credential resource, the last segment of the Azure resource id.\r\n- `organization` - the name of the GitHub organization, e.g. `Azure` in `https://github.com/Azure/terraform-azurerm-lz-vending`.\r\n- `repository` - the name of the GitHub respository, e.g. `terraform-azurerm-lz-vending` in `https://github.com/Azure/terraform-azurerm-lz-vending`.\r\n- `entity` - one of 'environment', 'pull_request', 'tag', or 'branch'\r\n- `value` - identifies the `entity` type, e.g. `main` when using entity is `branch`. Should be blank when `entity` is `pull_request`.\r\n"
                    },
                    "federated_credentials_terraform_cloud": {
                      "default": {},
                      "description": "Configure federated identity credentials, using OpenID Connect, for use in Terraform Cloud.\r\n\r\nThe may key is arbitrary and only used for the `for_each` in the resource declaration.\r\n\r\nThe map value is an object with the following attributes:\r\n\r\n- `name` - the name of the federated credential resource, the last segment of the Azure resource id.\r\n- `organization` - the name of the Terraform Cloud organization.\r\n- `project` - the name of the Terraform Cloud project.\r\n- `workspace` - the name of the Terraform Cloud workspace.\r\n- `run_phase` - one of `plan`, or `apply`.\r\n"
                    },
                    "location": {
                      "description": "The name of the user-assigned managed identity"
                    },
                    "name": {
                      "description": "The name of the user managed identity"
                    },
                    "resource_group_creation_enabled": {
                      "default": true,
                      "description": "Whether to create the supplied resource group for the user-assigned managed identity"
                    },
                    "resource_group_lock_enabled": {
                      "default": true,
                      "description": "Whether to enable resource group lock for the user-assigned managed identity resource group"
                    },
                    "resource_group_lock_name": {
                      "default": "",
                      "description": "The name of the resource group lock for the user-assigned managed identity resource group, if blank will be set to `lock-<resource_group_name>`"
                    },
                    "resource_group_name": {
                      "description": "The name of the resource group in which to create the user-assigned managed identity"
                    },
                    "resource_group_tags": {
                      "default": {},
                      "description": "The tags to apply to the user-assigned managed identity resource group, if we create it."
                    },
                    "subscription_id": {
                      "description": "The id of the target subscription. Must be a GUID in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx. All letters must be lowercase."
                    },
                    "tags": {
                      "default": {},
                      "description": "The tags to apply to the user-assigned managed identity"
                    }
                  }
                }
              },
              "virtualnetwork": {
                "source": "./modules/virtualnetwork",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "subscription_id": {
                    "references": [
                      "local.subscription_id"
                    ]
                  },
                  "virtual_networks": {
                    "references": [
                      "var.virtual_networks"
                    ]
                  }
                },
                "count_expression": {
                  "references": [
                    "var.virtual_network_enabled"
                  ]
                },
                "module": {
                  "outputs": {
                    "resource_group_ids": {
                      "expression": {
                        "references": [
                          "azapi_resource.rg"
                        ]
                      },
                      "description": "The created resource group IDs, expressed as a map."
                    },
                    "virtual_network_resource_ids": {
                      "expression": {
                        "references": [
                          "azapi_resource.vnet"
                        ]
                      },
                      "description": "The created virtual network resource IDs, expressed as a map."
                    }
                  },
                  "resources": [
                    {
                      "address": "azapi_resource.peering_hub_inbound",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "peering_hub_inbound",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {
                          "references": [
                            "each.value[\"inbound\"].remote_resource_id",
                            "each.value[\"inbound\"]",
                            "each.value"
                          ]
                        },
                        "name": {
                          "references": [
                            "each.value[\"inbound\"].name",
                            "each.value[\"inbound\"]",
                            "each.value"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "each.value[\"inbound\"].this_resource_id",
                            "each.value[\"inbound\"]",
                            "each.value"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings@2021-08-01"
                        }
                      },
                      "schema_version": 1,
                      "for_each_expression": {
                        "references": [
                          "local.hub_peering_map",
                          "local.peering_direction_tohub"
                        ]
                      }
                    },
                    {
                      "address": "azapi_resource.peering_hub_outbound",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "peering_hub_outbound",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {
                          "references": [
                            "each.value[\"outbound\"].remote_resource_id",
                            "each.value[\"outbound\"]",
                            "each.value",
                            "each.value.use_remote_gateways",
                            "each.value"
                          ]
                        },
                        "name": {
                          "references": [
                            "each.value[\"outbound\"].name",
                            "each.value[\"outbound\"]",
                            "each.value"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "each.value[\"outbound\"].this_resource_id",
                            "each.value[\"outbound\"]",
                            "each.value"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings@2021-08-01"
                        }
                      },
                      "schema_version": 1,
                      "for_each_expression": {
                        "references": [
                          "local.hub_peering_map",
                          "local.peering_direction_fromhub"
                        ]
                      }
                    },
                    {
                      "address": "azapi_resource.peering_mesh",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "peering_mesh",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {
                          "references": [
                            "each.value.remote_resource_id",
                            "each.value",
                            "each.value.allow_forwarded_traffic",
                            "each.value"
                          ]
                        },
                        "name": {
                          "references": [
                            "each.value.name",
                            "each.value"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "each.value.this_resource_id",
                            "each.value"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings@2022-05-01"
                        }
                      },
                      "schema_version": 1,
                      "for_each_expression": {
                        "references": [
                          "local.virtual_networks_mesh_peering_list"
                        ]
                      }
                    },
                    {
                      "address": "azapi_resource.rg",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "rg",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "location": {
                          "references": [
                            "each.value.location",
                            "each.value"
                          ]
                        },
                        "name": {
                          "references": [
                            "each.key"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "local.subscription_resource_id"
                          ]
                        },
                        "tags": {
                          "references": [
                            "each.value.tags",
                            "each.value"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Resources/resourceGroups@2021-04-01"
                        }
                      },
                      "schema_version": 1,
                      "for_each_expression": {
                        "references": [
                          "local.resource_group_data"
                        ]
                      }
                    },
                    {
                      "address": "azapi_resource.rg_lock",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "rg_lock",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {},
                        "name": {
                          "references": [
                            "each.value.lock_name",
                            "each.value",
                            "each.key"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "azapi_resource.rg",
                            "each.key"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Authorization/locks@2017-04-01"
                        }
                      },
                      "schema_version": 1,
                      "for_each_expression": {
                        "references": [
                          "local.resource_group_data"
                        ]
                      },
                      "depends_on": [
                        "azapi_resource.vnet",
                        "azapi_update_resource.vnet",
                        "azapi_resource.peering_hub_outbound",
                        "azapi_resource.peering_hub_inbound",
                        "azapi_resource.peering_mesh",
                        "azapi_resource.vhubconnection"
                      ]
                    },
                    {
                      "address": "azapi_resource.vhubconnection",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "vhubconnection",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {
                          "references": [
                            "each.value.vwan_security_configuration.secure_internet_traffic",
                            "each.value.vwan_security_configuration",
                            "each.value",
                            "local.virtual_network_resource_ids",
                            "each.key",
                            "each.value.vwan_security_configuration.routing_intent_enabled",
                            "each.value.vwan_security_configuration",
                            "each.value",
                            "each.value.vwan_associated_routetable_resource_id",
                            "each.value",
                            "each.value.vwan_associated_routetable_resource_id",
                            "each.value",
                            "each.value.vwan_hub_resource_id",
                            "each.value",
                            "each.value.vwan_security_configuration.secure_private_traffic",
                            "each.value.vwan_security_configuration",
                            "each.value",
                            "local.vwan_propagated_noneroutetables_resource_ids",
                            "each.key",
                            "local.vwan_propagated_routetables_resource_ids",
                            "each.key",
                            "each.value.vwan_security_configuration.secure_private_traffic",
                            "each.value.vwan_security_configuration",
                            "each.value",
                            "local.vwan_propagated_routetables_labels",
                            "each.key"
                          ]
                        },
                        "ignore_body_changes": {
                          "references": [
                            "each.value.vwan_security_configuration.routing_intent_enabled",
                            "each.value.vwan_security_configuration",
                            "each.value"
                          ]
                        },
                        "name": {
                          "references": [
                            "each.value.vwan_connection_name",
                            "each.value",
                            "azapi_resource.vnet",
                            "each.key"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "each.value.vwan_hub_resource_id",
                            "each.value"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections@2022-07-01"
                        }
                      },
                      "schema_version": 1,
                      "for_each_expression": {
                        "references": [
                          "var.virtual_networks"
                        ]
                      }
                    },
                    {
                      "address": "azapi_resource.vnet",
                      "mode": "managed",
                      "type": "azapi_resource",
                      "name": "vnet",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {
                          "references": [
                            "each.value.address_space",
                            "each.value",
                            "each.value.dns_servers",
                            "each.value",
                            "each.value.ddos_protection_enabled",
                            "each.value",
                            "each.value.ddos_protection_plan_id",
                            "each.value"
                          ]
                        },
                        "location": {
                          "references": [
                            "each.value.location",
                            "each.value",
                            "var.location"
                          ]
                        },
                        "name": {
                          "references": [
                            "each.value.name",
                            "each.value"
                          ]
                        },
                        "parent_id": {
                          "references": [
                            "local.subscription_resource_id",
                            "each.value.resource_group_name",
                            "each.value"
                          ]
                        },
                        "tags": {
                          "references": [
                            "each.value.tags",
                            "each.value"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Network/virtualNetworks@2021-08-01"
                        }
                      },
                      "schema_version": 1,
                      "for_each_expression": {
                        "references": [
                          "var.virtual_networks"
                        ]
                      },
                      "depends_on": [
                        "azapi_resource.rg"
                      ]
                    },
                    {
                      "address": "azapi_update_resource.vnet",
                      "mode": "managed",
                      "type": "azapi_update_resource",
                      "name": "vnet",
                      "provider_config_key": "module.lz_vending:azapi",
                      "expressions": {
                        "body": {
                          "references": [
                            "each.value.address_space",
                            "each.value",
                            "each.value.dns_servers",
                            "each.value",
                            "each.value.ddos_protection_enabled",
                            "each.value",
                            "each.value.ddos_protection_plan_id",
                            "each.value",
                            "each.value.tags",
                            "each.value"
                          ]
                        },
                        "resource_id": {
                          "references": [
                            "azapi_resource.vnet",
                            "each.key"
                          ]
                        },
                        "type": {
                          "constant_value": "Microsoft.Network/virtualNetworks@2021-08-01"
                        }
                      },
                      "schema_version": 1,
                      "for_each_expression": {
                        "references": [
                          "var.virtual_networks"
                        ]
                      }
                    }
                  ],
                  "variables": {
                    "location": {
                      "default": "",
                      "description": "The default location of resources created by this module.\r\nVirtual networks will be created in this location unless overridden by the `location` attribute.\r\n"
                    },
                    "subscription_id": {
                      "description": "The subscription ID of the subscription to create the virtual network in.\r\n"
                    },
                    "virtual_networks": {
                      "description": "A map of the virtual networks to create. The map key must be known at the plan stage, e.g. must not be calculated and known only after apply.\r\n\r\n### Required fields\r\n\r\n- `name`: The name of the virtual network. [required]\r\n- `address_space`: The address space of the virtual network as a list of strings in CIDR format, e.g. `[\"192.168.0.0/24\", \"10.0.0.0/24\"]`. [required]\r\n- `resource_group_name`: The name of the resource group to create the virtual network in. The default is that the resource group will be created by this module. [required]\r\n\r\n### DNS servers\r\n\r\n- `dns_servers`: A list of DNS servers to use for the virtual network, e.g. `[\"192.168.0.1\", \"10.0.0.1]`. If empty will use the Azure default DNS. [optional - default empty list]\r\nDNS. [optional - default empty list]\r\n\r\n### DDOS protection plan\r\n\r\n- `ddos_protection_enabled`: Whether to enable ddos protection. [optional]\r\n- `ddos_protection_plan_id`: The resource ID of the protection plan to attach the vnet. [optional - but required if ddos_protection_enabled is `true`]\r\n\r\n### Location\r\n\r\n- `location`: The location of the virtual network (and resource group if creation is enabled). [optional, will use `var.location` if not specified or empty string]\r\n\r\n> Note at least one of `location` or `var.location` must be specified.\r\n> If both are empty then the module will fail.\r\n\r\n### Hub network peering values\r\n\r\nThe following values configure bi-directional hub & spoke peering for the given virtual network.\r\n\r\n- `hub_peering_enabled`: Whether to enable hub peering. [optional - default `false`]\r\n- `hub_network_resource_id`: The resource ID of the hub network to peer with. [optional - but required if hub_peering_enabled is `true`]\r\n- `hub_peering_name_tohub`: The name of the peering to the hub network. [optional - leave empty to use calculated name]\r\n- `hub_peering_name_fromhub`: The name of the peering from the hub network. [optional - leave empty to use calculated name]\r\n- `hub_peering_use_remote_gateways`: Whether to use remote gateways for the hub peering. [optional - default true]\r\n\r\n### Mesh peering values\r\n\r\nMesh peering is the capability to create a bi-directional peerings between all supplied virtual networks in `var.virtual_networks`.\r\nPeerings will only be created between virtual networks with the `mesh_peering_enabled` value set to `true`.\r\n\r\n- `mesh_peering_enabled`: Whether to enable mesh peering for this virtual network. Must be enabled on more than one virtual network for any peerings to be created. [optional]\r\n- `mesh_peering_allow_forwarded_traffic`: Whether to allow forwarded traffic for the mesh peering. [optional - default false]\r\n\r\n### Resource group values\r\n\r\nThe default is that a resource group will be created for each resource_group_name specified in the `var.virtual_networks` map.\r\nIt is possible to use a pre-existing resource group by setting `resource_group_creation_enabled` to `false`.\r\nWe recommend using resource groups aligned to the region of the virtual network,\r\nhowever if you want multiple virtual networks in more than one location to share a resource group,\r\nonly one of the virtual networks should have `resource_group_creation_enabled` set to `true`.\r\n\r\n- `resource_group_creation_enabled`: Whether to create a resource group for the virtual network. [optional - default `true`]\r\n- `resource_group_lock_enabled`: Whether to create a `CanNotDelete` resource lock on the resource group. [optional - default `true`]\r\n- `resource_group_lock_name`: The name of the resource lock. [optional - leave empty to use calculated name]\r\n- `resource_group_tags`: A map of tags to apply to the resource group, e.g. `{ mytag = \"myvalue\", mytag2 = \"myvalue2\" }`. [optional - default empty]\r\n\r\n### Virtual WAN values\r\n\r\n- `vwan_associated_routetable_resource_id`: The resource ID of the route table to associate with the virtual network. [optional - leave empty to use `defaultRouteTable` on hub]\r\n- `vwan_connection_enabled`: Whether to create a connection to a Virtual WAN. [optional - default false]\r\n- `vwan_connection_name`: The name of the connection to the Virtual WAN. [optional - leave empty to use calculated name]\r\n- `vwan_hub_resource_id`: The resource ID of the hub to connect to. [optional - but required if vwan_connection_enabled is `true`]\r\n- `vwan_propagated_routetables_labels`: A list of labels of route tables to propagate to the virtual network. [optional - leave empty to use `[\"default\"]`]\r\n- `vwan_propagated_routetables_resource_ids`: A list of resource IDs of route tables to propagate to the virtual network. [optional - leave empty to use `defaultRouteTable` on hub]\r\n- `vwan_security_configuration`: A map of security configuration values for VWAN hub connection - see below. [optional - default empty]\r\n  - `secure_internet_traffic`: Whether to forward internet-bound traffic to the destination specified in the routing policy. [optional - default `false`]\r\n  - `secure_private_traffic`: Whether to all internal traffic to the destination specified in the routing policy. Not compatible with `routing_intent_enabled`. [optional - default `false`]\r\n  - `routing_intent_enabled`: Enable to use with a Virtual WAN hub with routing intent enabled. Routing intent on hub is configured outside this module. [optional - default `false`]\r\n\r\n### Tags\r\n\r\n- `tags`: A map of tags to apply to the virtual network. [optional - default empty]\r\n"
                    }
                  }
                },
                "depends_on": [
                  "module.resourcegroup_networkwatcherrg"
                ]
              }
            },
            "variables": {
              "budget_enabled": {
                "default": false,
                "description": "Whether to create budgets.\r\nIf enabled, supply the list of budgets in `var.budgets`.\r\n"
              },
              "budgets": {
                "default": {},
                "description": "Map of budgets to create for the subscription.\r\n\r\n- `amount` - The total amount of cost to track with the budget.\r\n- `time_grain` - The time grain for the budget. Must be one of Annually, BillingAnnual, BillingMonth, BillingQuarter, Monthly, or Quarterly.\r\n- `time_period_start` - The start date for the budget.\r\n- `time_period_end` - The end date for the budget.\r\n- `relative_scope` - (optional) Scope relative to the created subscription. Omit, or leave blank for subscription scope.\r\n- `notifications` - (optional) The notifications to create for the budget.\r\n  - `enabled` - Whether the notification is enabled.\r\n  - `operator` - The operator for the notification. Must be one of GreaterThan or GreaterThanOrEqualTo.\r\n  - `threshold` - The threshold for the notification. Must be between 0 and 1000.\r\n  - `threshold_type` - The threshold type for the notification. Must be one of Actual or Forecasted.\r\n  - `contact_emails` - The contact emails for the notification.\r\n  - `contact_roles` - The contact roles for the notification.\r\n  - `contact_groups` - The contact groups for the notification.\r\n  - `locale` - The locale for the notification. Must be in the format xx-xx.\r\n\r\n\r\ntime_period_start and time_period_end must be UTC in RFC3339 format, e.g. 2018-05-13T07:44:12Z.\r\n\r\nExample value:\r\n\r\n```terraform\r\nsubscription_budgets = {\r\n  budget1 = {\r\n    amount            = 150\r\n    time_grain        = \"Monthly\"\r\n    time_period_start = \"2024-01-01T00:00:00Z\"\r\n    time_period_end   = \"2027-12-31T23:59:59Z\"\r\n    notifications = {\r\n      eightypercent = {\r\n        enabled        = true\r\n        operator       = \"GreaterThan\"\r\n        threshold      = 80\r\n        threshold_type = \"Actual\"\r\n        contact_emails = [\"john@contoso.com\"]\r\n      }\r\n      budgetexceeded = {\r\n        enabled        = true\r\n        operator       = \"GreaterThan\"\r\n        threshold      = 120\r\n        threshold_type = \"Forecasted\"\r\n        contact_roles  = [\"Owner\"]\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n"
              },
              "disable_telemetry": {
                "default": false,
                "description": "To disable tracking, we have included this variable with a simple boolean flag.\r\nThe default value is `false` which does not disable the telemetry.\r\nIf you would like to disable this tracking, then simply set this value to true and this module will not create the telemetry tracking resources and therefore telemetry tracking will be disabled.\r\n\r\nFor more information, see the [wiki](https://aka.ms/lz-vending/tf/telemetry)\r\n\r\nE.g.\r\n\r\n```terraform\r\nmodule \"lz_vending\" {\r\n  source  = \"Azure/lz-vending/azurerm\"\r\n  version = \"<version>\" # change this to your desired version, https://www.terraform.io/language/expressions/version-constraints\r\n\r\n  # ... other module variables\r\n\r\n  disable_telemetry = true\r\n}\r\n```\r\n"
              },
              "location": {
                "description": "The default location of resources created by this module.\r\nVirtual networks will be created in this location unless overridden by the `location` attribute.\r\n"
              },
              "network_watcher_resource_group_enabled": {
                "default": false,
                "description": "Create `NetworkWatcherRG` in the subscription.\r\n\r\nAlthough this resource group is created automatically by Azure,\r\nit is not managed by Terraform and therefore can impede the subscription cancellation process.\r\n\r\nEnabling this variable will create the resource group in the subscription and allow Terraform to manage it,\r\nwhich includes destroying the resource (and all resources within it).\r\n"
              },
              "resource_group_creation_enabled": {
                "default": false,
                "description": "Whether to create additional resource groups in the target subscription. Requires `var.resource_groups`."
              },
              "resource_groups": {
                "default": {},
                "description": "A map of the resource groups to create. The value is an object with the following attributes:\r\n\r\n- `name` - the name of the resource group\r\n- `location` - the location of the resource group\r\n- `tags` - (optional) a map of type string\r\n\r\n> Do not include the `NetworkWatcherRG` resource group in this map if you have enabled `var.network_watcher_resource_group_enabled`.\r\n"
              },
              "role_assignment_enabled": {
                "default": false,
                "description": "Whether to create role assignments.\r\nIf enabled, supply the list of role assignments in `var.role_assignments`.\r\n"
              },
              "role_assignments": {
                "default": {},
                "description": "Supply a map of objects containing the details of the role assignments to create.\r\n\r\nObject fields:\r\n\r\n- `principal_id`: The directory/object id of the principal to assign the role to.\r\n- `definition`: The role definition to assign. Either use the name or the role definition resource id.\r\n- `relative_scope`: (optional) Scope relative to the created subscription. Omit, or leave blank for subscription scope.\r\n- `condition`: (optional) A condition to apply to the role assignment. See [Conditions Custom Security Attributes](https://learn.microsoft.com/azure/role-based-access-control/conditions-custom-security-attributes) for more details.\r\n- `condition_version`: (optional) The version of the condition syntax. See [Conditions Custom Security Attributes](https://learn.microsoft.com/azure/role-based-access-control/conditions-custom-security-attributes) for more details.\r\n\r\nE.g.\r\n\r\n```terraform\r\nrole_assignments = {\r\n  # Example using role definition name:\r\n  contributor_user = {\r\n    principal_id      = \"00000000-0000-0000-0000-000000000000\",\r\n    definition        = \"Contributor\",\r\n    relative_scope    = \"\",\r\n    condition         = \"(!(ActionMatches{'Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read'} AND NOT SubOperationMatches{'Blob.List'})\",\r\n    condition_version = \"2.0\",\r\n  },\r\n  # Example using role definition id and RG scope:\r\n  myrg_custom_role = {\r\n    principal_id   = \"11111111-1111-1111-1111-111111111111\",\r\n    definition     = \"/providers/Microsoft.Management/managementGroups/mymg/providers/Microsoft.Authorization/roleDefinitions/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa\",\r\n    relative_scope = \"/resourceGroups/MyRg\",\r\n  }\r\n}\r\n```\r\n"
              },
              "subscription_alias_enabled": {
                "default": false,
                "description": "Whether to create a new subscription using the subscription alias resource.\r\n\r\nIf enabled, the following must also be supplied:\r\n\r\n- `subscription_alias_name`\r\n- `subscription_display_name`\r\n- `subscription_billing_scope`\r\n- `subscription_workload`\r\n\r\nOptionally, supply the following to enable the placement of the subscription into a management group:\r\n\r\n- `subscription_management_group_id`\r\n- `subscription_management_group_association_enabled`\r\n\r\nIf disabled, supply the `subscription_id` variable to use an existing subscription instead.\r\n\r\n> **Note**: When the subscription is destroyed, this module will try to remove the NetworkWatcherRG resource group using `az cli`.\r\n> This requires the `az cli` tool be installed and authenticated.\r\n> If the command fails for any reason, the provider will attempt to cancel the subscription anyway.\r\n"
              },
              "subscription_alias_name": {
                "default": "",
                "description": "The name of the subscription alias.\r\n\r\nThe string must be comprised of a-z, A-Z, 0-9, - and _.\r\nThe maximum length is 63 characters.\r\n\r\nYou may also supply an empty string if you do not want to create a new subscription alias.\r\nIn this scenario, `subscription_enabled` should be set to `false` and `subscription_id` must be supplied.\r\n"
              },
              "subscription_billing_scope": {
                "default": "",
                "description": "The billing scope for the new subscription alias.\r\n\r\nA valid billing scope starts with `/providers/Microsoft.Billing/billingAccounts/` and is case sensitive.\r\n\r\nE.g.\r\n\r\n- For CustomerLed and FieldLed, e.g. MCA - `/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}`\r\n- For PartnerLed, e.g. MPA - `/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerName}`\r\n- For Legacy EA - `/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/enrollmentAccounts/{enrollmentAccountName}`\r\n\r\nYou may also supply an empty string if you do not want to create a new subscription alias.\r\nIn this scenario, `subscription_enabled` should be set to `false` and `subscription_id` must be supplied.\r\n"
              },
              "subscription_display_name": {
                "default": "",
                "description": "The display name of the subscription alias.\r\n\r\nThe string must be comprised of a-z, A-Z, 0-9, -, _ and space.\r\nThe maximum length is 63 characters.\r\n\r\nYou may also supply an empty string if you do not want to create a new subscription alias.\r\nIn this scenario, `subscription_enabled` should be set to `false` and `subscription_id` must be supplied.\r\n"
              },
              "subscription_id": {
                "default": "",
                "description": "An existing subscription id.\r\n\r\nUse this when you do not want the module to create a new subscription.\r\nBut do want to manage the management group membership.\r\n\r\nA GUID should be supplied in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\r\nAll letters must be lowercase.\r\n\r\nWhen using this, `subscription_management_group_association_enabled` should be enabled,\r\nand `subscription_management_group_id` should be supplied.\r\n\r\nYou may also supply an empty string if you want to create a new subscription alias.\r\nIn this scenario, `subscription_alias_enabled` should be set to `true` and the following other variables must be supplied:\r\n\r\n- `subscription_alias_name`\r\n- `subscription_alias_display_name`\r\n- `subscription_alias_billing_scope`\r\n- `subscription_alias_workload`\r\n"
              },
              "subscription_management_group_association_enabled": {
                "default": false,
                "description": "Whether to create the `azurerm_management_group_subscription_association` resource.\r\n\r\nIf enabled, the `subscription_management_group_id` must also be supplied.\r\n"
              },
              "subscription_management_group_id": {
                "default": "",
                "description": "  The destination management group ID for the new subscription.\r\n\r\n**Note:** Do not supply the display name.\r\nThe management group ID forms part of the Azure resource ID. E.g.,\r\n`/providers/Microsoft.Management/managementGroups/{managementGroupId}`.\r\n"
              },
              "subscription_register_resource_providers_and_features": {
                "default": {
                  "Microsoft.AVS": [],
                  "Microsoft.ApiManagement": [],
                  "Microsoft.AppPlatform": [],
                  "Microsoft.Authorization": [],
                  "Microsoft.Automation": [],
                  "Microsoft.Blueprint": [],
                  "Microsoft.BotService": [],
                  "Microsoft.Cache": [],
                  "Microsoft.Cdn": [],
                  "Microsoft.CognitiveServices": [],
                  "Microsoft.Compute": [],
                  "Microsoft.ContainerInstance": [],
                  "Microsoft.ContainerRegistry": [],
                  "Microsoft.ContainerService": [],
                  "Microsoft.CostManagement": [],
                  "Microsoft.CustomProviders": [],
                  "Microsoft.DBforMariaDB": [],
                  "Microsoft.DBforMySQL": [],
                  "Microsoft.DBforPostgreSQL": [],
                  "Microsoft.DataLakeAnalytics": [],
                  "Microsoft.DataLakeStore": [],
                  "Microsoft.DataMigration": [],
                  "Microsoft.DataProtection": [],
                  "Microsoft.Databricks": [],
                  "Microsoft.DesktopVirtualization": [],
                  "Microsoft.DevTestLab": [],
                  "Microsoft.Devices": [],
                  "Microsoft.DocumentDB": [],
                  "Microsoft.EventGrid": [],
                  "Microsoft.EventHub": [],
                  "Microsoft.GuestConfiguration": [],
                  "Microsoft.HDInsight": [],
                  "Microsoft.HealthcareApis": [],
                  "Microsoft.KeyVault": [],
                  "Microsoft.Kusto": [],
                  "Microsoft.Logic": [],
                  "Microsoft.MachineLearningServices": [],
                  "Microsoft.Maintenance": [],
                  "Microsoft.ManagedIdentity": [],
                  "Microsoft.ManagedServices": [],
                  "Microsoft.Management": [],
                  "Microsoft.Maps": [],
                  "Microsoft.MarketplaceOrdering": [],
                  "Microsoft.Media": [],
                  "Microsoft.MixedReality": [],
                  "Microsoft.Network": [],
                  "Microsoft.NotificationHubs": [],
                  "Microsoft.OperationalInsights": [],
                  "Microsoft.OperationsManagement": [],
                  "Microsoft.PolicyInsights": [],
                  "Microsoft.PowerBIDedicated": [],
                  "Microsoft.RecoveryServices": [],
                  "Microsoft.Relay": [],
                  "Microsoft.Resources": [],
                  "Microsoft.Search": [],
                  "Microsoft.Security": [],
                  "Microsoft.SecurityInsights": [],
                  "Microsoft.ServiceBus": [],
                  "Microsoft.ServiceFabric": [],
                  "Microsoft.Sql": [],
                  "Microsoft.Storage": [],
                  "Microsoft.StreamAnalytics": [],
                  "Microsoft.Web": [],
                  "microsoft.insights": []
                },
                "description": "The map of resource providers to register.\r\nThe map keys are the resource provider namespace, e.g. `Microsoft.Compute`.\r\nThe map values are a list of provider features to enable.\r\nLeave the value empty to not register any resource provider features.\r\n\r\nThe default values are taken from [Hashicorp's AzureRM provider](https://github.com/hashicorp/terraform-provider-azurerm/blob/main/internal/resourceproviders/required.go).\r\n"
              },
              "subscription_register_resource_providers_enabled": {
                "default": false,
                "description": "Whether to register resource providers for the subscription.\r\nUse `var.subscription_register_resource_providers_and_features` to customize registration.\r\n"
              },
              "subscription_tags": {
                "default": {},
                "description": "A map of tags to assign to the newly created subscription.\r\nOnly valid when `subsciption_alias_enabled` is set to `true`.\r\n\r\nExample value:\r\n\r\n```terraform\r\nsubscription_tags = {\r\n  mytag  = \"myvalue\"\r\n  mytag2 = \"myvalue2\"\r\n}\r\n```\r\n"
              },
              "subscription_update_existing": {
                "default": false,
                "description": "Whether to update an existing subscription with the supplied tags and display name.\r\nIf enabled, the following must also be supplied:\r\n- `subscription_id`\r\n"
              },
              "subscription_use_azapi": {
                "default": false,
                "description": "Whether to create a new subscription using the azapi provider. This may be required if the principal running\r\nterraform does not have the required permissions to create a subscription under the default management group.\r\nIf enabled, the following must also be supplied:\r\n- `subscription_alias_name`\r\n- `subscription_display_name`\r\n- `subscription_billing_scope`\r\n- `subscription_workload`\r\nOptionally, supply the following to enable the placement of the subscription into a management group:\r\n- `subscription_management_group_id`\r\n- `subscription_management_group_association_enabled`\r\nIf disabled, supply the `subscription_id` variable to use an existing subscription instead.\r\n> **Note**: When the subscription is destroyed, this module will try to remove the NetworkWatcherRG resource group using `az cli`.\r\n> This requires the `az cli` tool be installed and authenticated.\r\n> If the command fails for any reason, the provider will attempt to cancel the subscription anyway.\r\n"
              },
              "subscription_workload": {
                "default": "",
                "description": "The billing scope for the new subscription alias.\r\n\r\nThe workload type can be either `Production` or `DevTest` and is case sensitive.\r\n\r\nYou may also supply an empty string if you do not want to create a new subscription alias.\r\nIn this scenario, `subscription_enabled` should be set to `false` and `subscription_id` must be supplied.\r\n"
              },
              "umi_enabled": {
                "default": false,
                "description": "Whether to enable the creation of a user-assigned managed identity.\r\n\r\nRequires `umi_name` and `umi_resosurce_group_name` to be non-empty.\r\n"
              },
              "umi_federated_credentials_advanced": {
                "default": {},
                "description": "Configure federated identity credentials, using OpenID Connect, for use scenarios outside GitHub Actions and Terraform Cloud.\r\n\r\nThe may key is arbitrary and only used for the `for_each` in the resource declaration.\r\n\r\nThe map value is an object with the following attributes:\r\n\r\n- `name`: The name of the federated credential resource, the last segment of the Azure resource id.\r\n- `subject_identifier`: The subject of the token.\r\n- `issuer_url`: The URL of the token issuer, should begin with `https://`\r\n- `audience`: (optional) The token audience, defaults to `api://AzureADTokenExchange`.\r\n"
              },
              "umi_federated_credentials_github": {
                "default": {},
                "description": "Configure federated identity credentials, using OpenID Connect, for use in GitHub actions.\r\n\r\nThe may key is arbitrary and only used for the `for_each` in the resource declaration.\r\n\r\nThe map value is an object with the following attributes:\r\n\r\n- `name` - the name of the federated credential resource, the last segment of the Azure resource id.\r\n- `organization` - the name of the GitHub organization, e.g. `Azure` in `https://github.com/Azure/terraform-azurerm-lz-vending`.\r\n- `repository` - the name of the GitHub respository, e.g. `terraform-azurerm-lz-vending` in `https://github.com/Azure/terraform-azurerm-lz-vending`.\r\n- `entity` - one of 'environment', 'pull_request', 'tag', or 'branch'\r\n- `value` - identifies the `entity` type, e.g. `main` when using entity is `branch`. Should be blank when `entity` is `pull_request`.\r\n"
              },
              "umi_federated_credentials_terraform_cloud": {
                "default": {},
                "description": "Configure federated identity credentials, using OpenID Connect, for use in Terraform Cloud.\r\n\r\nThe may key is arbitrary and only used for the `for_each` in the resource declaration.\r\n\r\nThe map value is an object with the following attributes:\r\n\r\n- `name` - the name of the federated credential resource, the last segment of the Azure resource id.\r\n- `organization` - the name of the Terraform Cloud organization.\r\n- `project` - the name of the Terraform Cloud project.\r\n- `workspace` - the name of the Terraform Cloud workspace.\r\n- `run_phase` - one of `plan`, or `apply`.\r\n"
              },
              "umi_name": {
                "default": "",
                "description": "The name of the user-assigned managed identity"
              },
              "umi_resource_group_creation_enabled": {
                "default": true,
                "description": "Whether to create the supplied resource group for the user-assigned managed identity"
              },
              "umi_resource_group_lock_enabled": {
                "default": true,
                "description": "Whether to enable resource group lock for the user-assigned managed identity resource group"
              },
              "umi_resource_group_lock_name": {
                "default": "",
                "description": "The name of the resource group lock for the user-assigned managed identity resource group, if blank will be set to `lock-<resource_group_name>`"
              },
              "umi_resource_group_name": {
                "default": "",
                "description": "The name of the resource group in which to create the user-assigned managed identity"
              },
              "umi_resource_group_tags": {
                "default": {},
                "description": "The tags to apply to the user-assigned managed identity resource group, if we create it."
              },
              "umi_role_assignments": {
                "default": {},
                "description": "Supply a map of objects containing the details of the role assignments to create for the user-assigned managed identity.\r\nThis will be merged with the other role assignments specified in `var.role_assignments`.\r\n\r\nThe role assignments can be used resource groups created by the `var.resource_groups` map.\r\n\r\nRequires both `var.umi_enabled` and `var.role_assignment_enabled` to be `true`.\r\n\r\nObject fields:\r\n\r\n- `definition`: The role definition to assign. Either use the name or the role definition resource id.\r\n- `relative_scope`: Scope relative to the created subscription. Leave blank for subscription scope.\r\n"
              },
              "umi_tags": {
                "default": {},
                "description": "The tags to apply to the user-assigned managed identity"
              },
              "virtual_network_enabled": {
                "default": false,
                "description": "Enables and disables the virtual network submodule."
              },
              "virtual_networks": {
                "default": {},
                "description": "A map of the virtual networks to create. The map key must be known at the plan stage, e.g. must not be calculated and known only after apply.\r\n\r\n### Required fields\r\n\r\n- `name`: The name of the virtual network. [required]\r\n- `address_space`: The address space of the virtual network as a list of strings in CIDR format, e.g. `[\"192.168.0.0/24\", \"10.0.0.0/24\"]`. [required]\r\n- `resource_group_name`: The name of the resource group to create the virtual network in. [required]\r\n\r\n### DNS servers\r\n\r\n- `dns_servers`: A list of DNS servers to use for the virtual network, e.g. `[\"192.168.0.1\", \"10.0.0.1\"]`. If empty will use the Azure default DNS. [optional - default empty list]\r\n\r\n### DDOS protection plan\r\n\r\n- `ddos_protection_enabled`: Whether to enable ddos protection. [optional]\r\n- `ddos_protection_plan_id`: The resource ID of the protection plan to attach the vnet. [optional - but required if ddos_protection_enabled is `true`]\r\n\r\n### Location\r\n\r\n- `location`: The location of the virtual network (and resource group if creation is enabled). [optional, will use `var.location` if not specified or empty string]\r\n\r\n> Note at least one of `location` or `var.location` must be specified.\r\n> If both are empty then the module will fail.\r\n\r\n### Hub network peering values\r\n\r\nThe following values configure bi-directional hub & spoke peering for the given virtual network.\r\n\r\n- `hub_peering_enabled`: Whether to enable hub peering. [optional]\r\n- `hub_peering_direction`: The direction of the peering. [optional - allowed values are: `tohub`, `fromhub` or `both` - default `both`]\r\n- `hub_network_resource_id`: The resource ID of the hub network to peer with. [optional - but required if hub_peering_enabled is `true`]\r\n- `hub_peering_name_tohub`: The name of the peering to the hub network. [optional - leave empty to use calculated name]\r\n- `hub_peering_name_fromhub`: The name of the peering from the hub network. [optional - leave empty to use calculated name]\r\n- `hub_peering_use_remote_gateways`: Whether to use remote gateways for the hub peering. [optional - default true]\r\n\r\n### Mesh peering values\r\n\r\nMesh peering is the capability to create a bi-directional peerings between all supplied virtual networks in `var.virtual_networks`.\r\nPeerings will only be created between virtual networks with the `mesh_peering_enabled` value set to `true`.\r\n\r\n- `mesh_peering_enabled`: Whether to enable mesh peering for this virtual network. Must be enabled on more than one virtual network for any peerings to be created. [optional]\r\n- `mesh_peering_allow_forwarded_traffic`: Whether to allow forwarded traffic for the mesh peering. [optional - default false]\r\n\r\n### Resource group values\r\n\r\nThe default is that a resource group will be created for each resource_group_name specified in the `var.virtual_networks` map.\r\nIt is possible to use a pre-existing resource group by setting `resource_group_creation_enabled` to `false`.\r\nWe recommend using resource groups aligned to the region of the virtual network,\r\nhowever if you want multiple virtual networks in more than one location to share a resource group,\r\nonly one of the virtual networks should have `resource_group_creation_enabled` set to `true`.\r\n\r\n- `resource_group_creation_enabled`: Whether to create a resource group for the virtual network. [optional - default `true`]\r\n- `resource_group_lock_enabled`: Whether to create a `CanNotDelete` resource lock on the resource group. [optional - default `true`]\r\n- `resource_group_lock_name`: The name of the resource lock. [optional - leave empty to use calculated name]\r\n- `resource_group_tags`: A map of tags to apply to the resource group, e.g. `{ mytag = \"myvalue\", mytag2 = \"myvalue2\" }`. [optional - default empty]\r\n\r\n### Virtual WAN values\r\n\r\n- `vwan_associated_routetable_resource_id`: The resource ID of the route table to associate with the virtual network. [optional - leave empty to use `defaultRouteTable` on hub]\r\n- `vwan_connection_enabled`: Whether to create a connection to a Virtual WAN. [optional - default false]\r\n- `vwan_connection_name`: The name of the connection to the Virtual WAN. [optional - leave empty to use calculated name]\r\n- `vwan_hub_resource_id`: The resource ID of the hub to connect to. [optional - but required if vwan_connection_enabled is `true`]\r\n- `vwan_propagated_routetables_labels`: A list of labels of route tables to propagate to the virtual network. [optional - leave empty to use `[\"default\"]`]\r\n- `vwan_propagated_routetables_resource_ids`: A list of resource IDs of route tables to propagate to the virtual network. [optional - leave empty to use `defaultRouteTable` on hub]\r\n- `vwan_security_configuration`: A map of security configuration values for VWAN hub connection - see below. [optional - default empty]\r\n  - `secure_internet_traffic`: Whether to forward internet-bound traffic to the destination specified in the routing policy. [optional - default `false`]\r\n  - `secure_private_traffic`: Whether to all internal traffic to the destination specified in the routing policy. Not compatible with `routing_intent_enabled`. [optional - default `false`]\r\n  - `routing_intent_enabled`: Enable to use with a Virtual WAN hub with routing intent enabled. Routing intent on hub is configured outside this module. [optional - default `false`]\r\n\r\n### Tags\r\n\r\n- `tags`: A map of tags to apply to the virtual network. [optional - default empty]\r\n"
              },
              "wait_for_subscription_before_subscription_operations": {
                "default": {
                  "create": "30s",
                  "destroy": "0s"
                },
                "description": "The duration to wait after vending a subscription before performing subscription operations.\r\n"
              }
            }
          },
          "version_constraint": "4.1.5"
        }
      },
      "variables": {
        "appId": {
          "description": "Application ID of the deployment"
        },
        "az_backup_enable": {
          "default": true,
          "description": "Flag to determine of Azure backup should be enabled"
        },
        "cmk": {
          "default": null,
          "description": "Configuration for Customer Managed Key"
        },
        "environment": {
          "description": "The environment (e.g., development, staging, production) for the deployment."
        },
        "hub": {},
        "is_odaa_peering_enabled": {
          "default": false,
          "description": "Flag to indicate if the subscription is for Oracle and require VNET peering with respective ODAA VNET"
        },
        "is_oracle_subscription": {
          "default": false,
          "description": "Flag to indicate if the subscription is for Oracle. If true, adds Oracle Database subnet delegation."
        },
        "location": {
          "description": "The Azure location where the resources will be deployed."
        },
        "odaa_peering": {
          "default": {},
          "description": "Oracle VNET peering configuration for each environment (prod and nprd)"
        },
        "overwrite_route_subnets_list": {
          "default": [],
          "description": "List of subnets from the Routable Hub that need to be added in the route table. Note: GatewaySubnet, AzureFirewallManagementSubnet, AzureFirewallSubnets are handled by default."
        },
        "rbac_info_groupname": {
          "default": {}
        },
        "rbac_info_mi": {
          "default": {}
        },
        "rbac_info_principalid": {
          "default": {}
        },
        "rd_id": {},
        "role_assignments": {
          "default": {}
        },
        "storageaccount_ip_rules": {
          "default": []
        },
        "subnet": {},
        "tenant_id": {
          "default": "68283f3b-8487-4c86-adb3-a5228f18b893"
        },
        "vnet_ip_range": {},
        "wl_subscription_id": {
          "default": "177c1f84-4b2a-414d-974e-5fbdf5d84250"
        }
      }
    }
  },
  "chunk_info": {
    "chunk_number": 1,
    "total_chunks": 7,
    "resources_range": "0-4"
  },
  "planned_values": {
    "root_module": {
      "resources": [
        {
          "address": "module.avm-res-network-networksecuritygroup[\"agw\"].azurerm_network_security_group.this",
          "mode": "managed",
          "type": "azurerm_network_security_group",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/azurerm",
          "schema_version": 0,
          "values": {
            "location": "uksouth",
            "name": "nsg-azuuks-130-20075-tp-dev-001",
            "resource_group_name": "rg-azuuks-20075-netw-dev-001",
            "tags": null,
            "timeouts": null
          },
          "sensitive_values": {
            "security_rule": []
          }
        },
        {
          "address": "module.avm-res-network-networksecuritygroup[\"agw\"].azurerm_network_security_rule.this[\"AllowIntraSubnet\"]",
          "mode": "managed",
          "type": "azurerm_network_security_rule",
          "name": "this",
          "index": "AllowIntraSubnet",
          "provider_name": "registry.terraform.io/hashicorp/azurerm",
          "schema_version": 0,
          "values": {
            "access": "Allow",
            "description": null,
            "destination_address_prefix": "*",
            "destination_address_prefixes": null,
            "destination_application_security_group_ids": null,
            "destination_port_range": "*",
            "destination_port_ranges": null,
            "direction": "Inbound",
            "name": "AllowIntraSubnet",
            "network_security_group_name": "nsg-azuuks-130-20075-tp-dev-001",
            "priority": 3500,
            "protocol": "*",
            "resource_group_name": "rg-azuuks-20075-netw-dev-001",
            "source_address_prefix": "10.147.133.192/27",
            "source_address_prefixes": null,
            "source_application_security_group_ids": null,
            "source_port_range": "*",
            "source_port_ranges": null,
            "timeouts": null
          },
          "sensitive_values": {}
        },
        {
          "address": "module.avm-res-network-networksecuritygroup[\"agw\"].azurerm_network_security_rule.this[\"DenyIntraVnetAddressSpace\"]",
          "mode": "managed",
          "type": "azurerm_network_security_rule",
          "name": "this",
          "index": "DenyIntraVnetAddressSpace",
          "provider_name": "registry.terraform.io/hashicorp/azurerm",
          "schema_version": 0,
          "values": {
            "access": "Deny",
            "description": null,
            "destination_address_prefix": "*",
            "destination_address_prefixes": null,
            "destination_application_security_group_ids": null,
            "destination_port_range": "*",
            "destination_port_ranges": null,
            "direction": "Inbound",
            "name": "DenyIntraVnetAddressSpace",
            "network_security_group_name": "nsg-azuuks-130-20075-tp-dev-001",
            "priority": 4000,
            "protocol": "*",
            "resource_group_name": "rg-azuuks-20075-netw-dev-001",
            "source_address_prefix": null,
            "source_address_prefixes": [
              "10.147.133.192/26"
            ],
            "source_application_security_group_ids": null,
            "source_port_range": "*",
            "source_port_ranges": null,
            "timeouts": null
          },
          "sensitive_values": {
            "source_address_prefixes": [
              false
            ]
          }
        },
        {
          "address": "module.avm-res-network-networksecuritygroup[\"app\"].azurerm_network_security_group.this",
          "mode": "managed",
          "type": "azurerm_network_security_group",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/azurerm",
          "schema_version": 0,
          "values": {
            "location": "uksouth",
            "name": "nsg-azuuks-130-20075-ta-dev-001",
            "resource_group_name": "rg-azuuks-20075-netw-dev-001",
            "tags": null,
            "timeouts": null
          },
          "sensitive_values": {
            "security_rule": []
          }
        },
        {
          "address": "module.avm-res-network-networksecuritygroup[\"app\"].azurerm_network_security_rule.this[\"AllowIntraSubnet\"]",
          "mode": "managed",
          "type": "azurerm_network_security_rule",
          "name": "this",
          "index": "AllowIntraSubnet",
          "provider_name": "registry.terraform.io/hashicorp/azurerm",
          "schema_version": 0,
          "values": {
            "access": "Allow",
            "description": null,
            "destination_address_prefix": "*",
            "destination_address_prefixes": null,
            "destination_application_security_group_ids": null,
            "destination_port_range": "*",
            "destination_port_ranges": null,
            "direction": "Inbound",
            "name": "AllowIntraSubnet",
            "network_security_group_name": "nsg-azuuks-130-20075-ta-dev-001",
            "priority": 3500,
            "protocol": "*",
            "resource_group_name": "rg-azuuks-20075-netw-dev-001",
            "source_address_prefix": "10.147.133.232/29",
            "source_address_prefixes": null,
            "source_application_security_group_ids": null,
            "source_port_range": "*",
            "source_port_ranges": null,
            "timeouts": null
          },
          "sensitive_values": {}
        }
      ]
    }
  },
  "resource_changes": [
    {
      "address": "module.avm-res-network-networksecuritygroup[\"agw\"].azurerm_network_security_group.this",
      "module_address": "module.avm-res-network-networksecuritygroup[\"agw\"]",
      "mode": "managed",
      "type": "azurerm_network_security_group",
      "name": "this",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "location": "uksouth",
          "name": "nsg-azuuks-130-20075-tp-dev-001",
          "resource_group_name": "rg-azuuks-20075-netw-dev-001",
          "tags": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "security_rule": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "security_rule": []
        }
      }
    },
    {
      "address": "module.avm-res-network-networksecuritygroup[\"agw\"].azurerm_network_security_rule.this[\"AllowIntraSubnet\"]",
      "module_address": "module.avm-res-network-networksecuritygroup[\"agw\"]",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "this",
      "index": "AllowIntraSubnet",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "access": "Allow",
          "description": null,
          "destination_address_prefix": "*",
          "destination_address_prefixes": null,
          "destination_application_security_group_ids": null,
          "destination_port_range": "*",
          "destination_port_ranges": null,
          "direction": "Inbound",
          "name": "AllowIntraSubnet",
          "network_security_group_name": "nsg-azuuks-130-20075-tp-dev-001",
          "priority": 3500,
          "protocol": "*",
          "resource_group_name": "rg-azuuks-20075-netw-dev-001",
          "source_address_prefix": "10.147.133.192/27",
          "source_address_prefixes": null,
          "source_application_security_group_ids": null,
          "source_port_range": "*",
          "source_port_ranges": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.avm-res-network-networksecuritygroup[\"agw\"].azurerm_network_security_rule.this[\"DenyIntraVnetAddressSpace\"]",
      "module_address": "module.avm-res-network-networksecuritygroup[\"agw\"]",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "this",
      "index": "DenyIntraVnetAddressSpace",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "access": "Deny",
          "description": null,
          "destination_address_prefix": "*",
          "destination_address_prefixes": null,
          "destination_application_security_group_ids": null,
          "destination_port_range": "*",
          "destination_port_ranges": null,
          "direction": "Inbound",
          "name": "DenyIntraVnetAddressSpace",
          "network_security_group_name": "nsg-azuuks-130-20075-tp-dev-001",
          "priority": 4000,
          "protocol": "*",
          "resource_group_name": "rg-azuuks-20075-netw-dev-001",
          "source_address_prefix": null,
          "source_address_prefixes": [
            "10.147.133.192/26"
          ],
          "source_application_security_group_ids": null,
          "source_port_range": "*",
          "source_port_ranges": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "source_address_prefixes": [
            false
          ]
        },
        "before_sensitive": false,
        "after_sensitive": {
          "source_address_prefixes": [
            false
          ]
        }
      }
    },
    {
      "address": "module.avm-res-network-networksecuritygroup[\"app\"].azurerm_network_security_group.this",
      "module_address": "module.avm-res-network-networksecuritygroup[\"app\"]",
      "mode": "managed",
      "type": "azurerm_network_security_group",
      "name": "this",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "location": "uksouth",
          "name": "nsg-azuuks-130-20075-ta-dev-001",
          "resource_group_name": "rg-azuuks-20075-netw-dev-001",
          "tags": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "security_rule": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "security_rule": []
        }
      }
    },
    {
      "address": "module.avm-res-network-networksecuritygroup[\"app\"].azurerm_network_security_rule.this[\"AllowIntraSubnet\"]",
      "module_address": "module.avm-res-network-networksecuritygroup[\"app\"]",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "this",
      "index": "AllowIntraSubnet",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "access": "Allow",
          "description": null,
          "destination_address_prefix": "*",
          "destination_address_prefixes": null,
          "destination_application_security_group_ids": null,
          "destination_port_range": "*",
          "destination_port_ranges": null,
          "direction": "Inbound",
          "name": "AllowIntraSubnet",
          "network_security_group_name": "nsg-azuuks-130-20075-ta-dev-001",
          "priority": 3500,
          "protocol": "*",
          "resource_group_name": "rg-azuuks-20075-netw-dev-001",
          "source_address_prefix": "10.147.133.232/29",
          "source_address_prefixes": null,
          "source_application_security_group_ids": null,
          "source_port_range": "*",
          "source_port_ranges": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    }
  ]
}